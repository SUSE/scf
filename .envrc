#!/usr/bin/env bash
# This file is both used via direnv, as well as by directly sourcing it in a
# shell (when being run from CI).

if type source_up >/dev/null 2>/dev/null; then
    # Using direnv; load any higher up .envrc
    source_up || true
else
    PWD="$(cd "$(dirname "${BASH_SOURCE[0]:-${KSH_VERSION:+${.sh.file}}${KSH_VERSION:-$0}}")" && pwd)"
fi

# The Docker repository name used for images
export FISSILE_REPOSITORY=fissile

# This is a comma separated list of paths to the local repositories
# of all the releases that make up HCF
FISSILE_RELEASE=""
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/diego-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/etcd-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/garden-runc-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/cf-mysql-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/cflinuxfs2-rootfs-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/routing-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/hcf-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/grootfs-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/capi-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/uaa-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/loggregator"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/nats-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/consul-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/buildpacks/binary-buildpack-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/buildpacks/go-buildpack-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/buildpacks/java-buildpack-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/buildpacks/nodejs-buildpack-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/buildpacks/php-buildpack-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/buildpacks/python-buildpack-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/buildpacks/ruby-buildpack-release"
FISSILE_RELEASE="${FISSILE_RELEASE},${PWD}/src/buildpacks/staticfile-buildpack-release"
export FISSILE_RELEASE="${FISSILE_RELEASE#,}"

# Path to an HCF role manifest
export FISSILE_ROLE_MANIFEST="${PWD}/container-host-files/etc/hcf/config/role-manifest.yml"

# Path to a BOSH deployment manifest that contains light opinions
export FISSILE_LIGHT_OPINIONS="${PWD}/container-host-files/etc/hcf/config/opinions.yml"

# Path to a BOSH deployment manifest that contains dark opinions
export FISSILE_DARK_OPINIONS="${PWD}/container-host-files/etc/hcf/config/dark-opinions.yml"

# Path to a location where all fissile output is stored
# This will be ~/.fissile in vagrant
export FISSILE_WORK_DIR="${FISSILE_WORK_DIR:-${PWD}/output/fissile}"

# This is the location of the local BOSH cache
# You shouldn't need to override this
# This will be ~/.bosh/cache in vagrant
export FISSILE_CACHE_DIR="${FISSILE_CACHE_DIR:-${PWD}/output/bosh-cache}"

# Path to fissile binary (not actually used by fissile)
export FISSILE_BINARY="${PWD}/output/bin/fissile"
mkdir -p "$(dirname "${FISSILE_BINARY}")"
PATH="$(dirname "${FISSILE_BINARY}")${PATH:+:${PATH}}"
export PATH

# This is the configuration base prefix
export FISSILE_CONFIG_PREFIX=hcf

# Default value for --patch-properties-release
export FISSILE_PATCH_PROPERTIES_RELEASE="hcf/patch-properties"

# We will persist compilation results to the VM here
export HCF_PACKAGE_COMPILATION_CACHE="${PWD}/.fissile/compilation"

# The following is for fish support: run this script as `bash $0 fish`, and it
# will print out the fish commands for you to source.
if test "${BASH_ARGV:+${BASH_ARGV[0]}}" = "fish" ; then
    for var in $(env | grep -E '^(FISSILE_|HCF_)' | cut -d= -f1) ; do
        echo "set -x ${var} '${!var}'"
    done
fi

if ! type source_up >/dev/null 2>/dev/null; then
    # Restore the variable from the start of the script
    PWD="$(pwd)"
fi

# The fissile stemcell image that is used as the base
export FISSILE_STEMCELL=splatform/fissile-stemcell-opensuse:42.2-0.g58a22c9-28.16
