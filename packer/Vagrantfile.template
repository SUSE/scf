# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure('2') do |config|
  # This IP address is also in install-kubernetes.sh (for cert generation)
  config.ssh.keys_only = true # Don't use ssh-agent
  # Disable the default synced folder, we don't need it anyway
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.provider :libvirt do |libvirt|
    libvirt.disk_bus = 'virtio'
    if ENV['VAGRANT_LIBVIRT_URI']
      require 'uri'
      uri = URI.parse(ENV['VAGRANT_LIBVIRT_URI'])
      libvirt.connect_via_ssh = true
      libvirt.host = uri.host
      libvirt.username = uri.user if uri.user
      libvirt.password = uri.password if uri.password
      if ENV['VAGRANT_LIBVIRT_SSH_KEY']
        # We need to un-freeze the string so vagrant can modify it later
        libvirt.id_ssh_key_file = ENV['VAGRANT_LIBVIRT_SSH_KEY'].dup
      end
      libvirt.socket = case uri.path
        when '/system' then '/var/run/libvirt/libvirt-sock'
        # TODO: /session support: needs to figure out XDG_RUNTIME_DIR somehow
        # when '/session' then '/run/user/1000/libvirt/libvirtd.sock'
        else uri.path
      end
    end
  end

  config.vm.provision :shell, privileged: true, path: "bin/common/start_docker_service.sh"

  # Get the bridged IP and add to /etc/environment
  config.vm.provision :shell, privileged: true, path: "bin/common/write_bridged_ip_to_environment.sh"
  # Install common and dev tools
  config.vm.provision :shell, privileged: true, inline: <<-SHELL
    # Get proxy configuration here
    export HOME=/home/vagrant
    cd "${HOME}/scf"
    ${HOME}/bin/direnv exec ${HOME}/scf/bin/common/install_tools.sh
    ${HOME}/bin/direnv exec ${HOME}/scf/bin/dev/install_tools.sh
    # Add /usr/local/bin to non-login path, since tools are installed there
    sed -i '/ENV_SUPATH/s/$/:\\/usr\\/local\\/bin/' /etc/login.defs
    sed -i 's@secure_path="\\(.*\\)"@secure_path="\\1:/usr/local/bin"@g' /etc/sudoers
  SHELL

  # Set up k8s config, enable/start services
  config.vm.provision :shell, privileged: true, path: "bin/common/create_k8s_certs.sh"
  config.vm.provision :shell, privileged: true, path: "bin/common/start_k8s_services.sh"
  config.vm.provision :shell, privileged: true, inline: "chown vagrant:users /home/vagrant/.fissile"
  # Create kubedns. Needs privileged, because it modifies the kubedns config
  config.vm.provision :shell, privileged: true, path: "bin/common/create_kubedns.sh"
end
