#!/bin/bash

set -o xtrace
set -o errexit
set -o nounset

GIT_ROOT="${GIT_ROOT:-$(git rev-parse --show-toplevel)}"

. "${GIT_ROOT}/make/include/versioning"

tmp_dir=$(mktemp -d)
trap "rm -rf '${tmp_dir}'" EXIT

if [[ ${FISSILE_STEMCELL} =~ ^.*fissile-stemcell-opensuse.*$ ]] ; then
    stemcell_os="opensuse"
    suffix="-opensuse"
elif [[ ${FISSILE_STEMCELL} =~ ^.*fissile-stemcell-sle.*$ ]] ; then
    stemcell_os="sle"
    suffix=""
else
    echo "Unknown stemcell operating system: ${FISSILE_STEMCELL}"
    exit 1
fi
ARCHIVE_ROOT="${GIT_ROOT}/output/scf-${stemcell_os}-${APP_VERSION}"

echo Packaging, taking "${APP_VERSION}" ...

# Assembling the pieces ...
find "${tmp_dir}"
mkdir -p "${tmp_dir}/helm"

for project in uaa cf ; do
    mkdir -p "${tmp_dir}/kube/${project}${suffix}"
    tar xf "${GIT_ROOT}/output/${project}-${stemcell_os}-kube-${APP_VERSION}.tgz" -C "${tmp_dir}/kube/${project}${suffix}/"
    tar xf "${GIT_ROOT}/output/${project}-${stemcell_os}-helm-${APP_VERSION}.tgz" -C "${tmp_dir}/helm/"
done

# "Am I Ok" for kube
cp ${GIT_ROOT}/bin/dev/kube-ready-state-check.sh "${tmp_dir}/"

# Package the assembly. This directly places it into the output
# For now, include both zip and tgz in order to transition smoothly
cd "${tmp_dir}"
zip -r9 "${ARCHIVE_ROOT}.zip" -- *
