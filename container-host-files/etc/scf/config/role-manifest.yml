---
roles:
- name: syslog-scheduler
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: scheduler
    release_name: cf-syslog-drain
  - name: metron_agent
    release_name: loggregator
  tags:
  - headless
  run:
    scaling:
      min: 1
      max: 1
      ha: 1
    capabilities: []
    memory: 69
    virtual-cpus: 2
    exposed-ports:
    - name: sched-health
      protocol: TCP
      internal: 8080
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - syslog-scheduler
            topologyKey: "beta.kubernetes.io/os"
    healthcheck:
      readiness:
        command:
        - curl --silent --fail http://${HOSTNAME}:8080/health
- name: syslog-rlp
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: metron_agent
    release_name: loggregator
  - name: reverse_log_proxy
    release_name: loggregator
  run:
    scaling: # half the number of traffic-controllers
      min: 1
      max: 65535
      ha: 2
    capabilities: []
    memory: 93
    virtual-cpus: 2
    exposed-ports:
    - name: rlp
      protocol: TCP
      internal: 8082
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - syslog-rlp
            topologyKey: "beta.kubernetes.io/os"
- name: syslog-adapter
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: adapter
    release_name: cf-syslog-drain
  - name: metron_agent
    release_name: loggregator
  tags:
  - headless
  run:
    scaling: # one per 500 drains
      min: 1
      max: 65535
      ha: 2
    capabilities: []
    memory: 78
    virtual-cpus: 2
    exposed-ports:
    - name: adapter
      protocol: TCP
      internal: 4443
    - name: adapter-health
      protocol: TCP
      internal: 8080
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - syslog-adapter
            topologyKey: "beta.kubernetes.io/os"
    healthcheck:
      readiness:
        command:
        - curl --silent --fail http://${HOSTNAME}:8080/health
- name: consul
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: consul_agent
    release_name: consul
    consumes:
      consul_common: {}
      consul_server: {}
    provides:
      consul_common: {}
      consul_server: {}
  tags:
  - headless
  run:
    scaling:
      min: 0
      max: 1
      ha: 1
      must_be_odd: true
    memory: 256
    virtual-cpus: 1
    exposed-ports:
    - name: consul-server
      external: 8300
      internal: 8300
      protocol: TCP
    - name: consul-http
      external: 8500
      internal: 8500
      protocol: TCP
    - name: serf-tcp
      external: 8301
      internal: 8301
      protocol: TCP
    - name: serf-udp
      external: 8301
      internal: 8301
      protocol: UDP
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: skiff-role-name
              operator: In
              values: [ consul ]
  configuration:
    templates:
      properties.consul.agent.mode: server
      properties.consul.agent.node_name_includes_id: false
      properties.consul.agent_cert: ((CONSUL_SERVER_CERT))
      properties.consul.agent_key: ((CONSUL_SERVER_KEY))
      properties.consul.encrypt_keys: "[((CONSUL_SERVER_ENCRYPT_KEY))]"
      properties.consul.server_cert: ((CONSUL_SERVER_CERT))
      properties.consul.server_key: ((CONSUL_SERVER_KEY))
- name: nats
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: nats
    release_name: nats
    provides:
      nats: {}
  - name: metron_agent
    release_name: loggregator
  run:
    scaling:
      min: 1
      max: 3
      ha: 2
    capabilities: []
    memory: 60
    virtual-cpus: 2
    exposed-ports:
    - name: nats
      protocol: TCP
      internal: 4222
    - name: nats-routes
      protocol: TCP
      internal: 4223
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - nats
            topologyKey: "beta.kubernetes.io/os"
- name: mysql
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/create_mysql_data_tmp.sh
  - scripts/chown_vcap_store.sh
  - scripts/patches/fix_mysql_advertise_ip.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/enable_mysql_galera_bootstrap.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: patch-properties
    release_name: scf-helper
  - name: mysql
    release_name: cf-mysql
    provides:
      mysql: {}
  tags:
  - headless
  - sequential-startup
  run:
    scaling:
      min: 1
      max: 3
      ha: 2
    capabilities: []
    volumes:
    - path: /var/vcap/store
      type: persistent
      tag: mysql-data
      size: 20
    memory: 2841
    virtual-cpus: 2
    exposed-ports:
    - name: mysql
      protocol: TCP
      internal: 3306
    - name: galera-tcp
      protocol: TCP
      internal: 4567
    - name: galera-udp
      protocol: UDP
      internal: 4567
    - name: galera-ist
      protocol: TCP
      internal: 4568
    - name: healthcheck
      protocol: TCP
      internal: 9200
    - name: xtrabackup
      protocol: TCP
      internal: 4444
    healthcheck:
      readiness:
        command:
        - curl --silent --fail http://${HOSTNAME}:9200/
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - mysql
            topologyKey: "beta.kubernetes.io/os"
  configuration:
    templates:
      properties.cf_mysql.external_host: ((DOMAIN))
      properties.cf_mysql.mysql.admin_password: ((MYSQL_ADMIN_PASSWORD))
      properties.cf_mysql.mysql.cluster_health.password: ((MYSQL_CLUSTER_HEALTH_PASSWORD))
      properties.cf_mysql.mysql.galera_healthcheck.db_password: ((MYSQL_ADMIN_PASSWORD))
      properties.cf_mysql.mysql.galera_healthcheck.endpoint_password: ((MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD))
      properties.cf_mysql.proxy.api_password: ((MYSQL_PROXY_ADMIN_PASSWORD))
- name: mysql-proxy
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: patch-properties
    release_name: scf-helper
  - name: proxy
    release_name: cf-mysql
    provides:
      proxy: {}
  tags:
  - active-passive
  run:
    scaling:
      min: 1
      max: 1
      ha: 1
    capabilities: []
    memory: 63
    virtual-cpus: 2
    exposed-ports:
    - name: mysql-proxy
      protocol: TCP
      internal: 3306
    - name: api
      protocol: TCP
      internal: 80
    - name: healthcheck
      protocol: TCP
      internal: 1936
    healthcheck:
      readiness:
        command:
        - curl --silent --fail http://${HOSTNAME}:1936/
    active-passive-probe: /bin/true # Switchboard currently has no internal locking
  configuration:
    templates:
      properties.cf_mysql.external_host: ((DOMAIN))
      properties.cf_mysql.mysql.admin_password: ((MYSQL_ADMIN_PASSWORD))
      properties.cf_mysql.mysql.galera_healthcheck.endpoint_password: ((MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD))
      properties.cf_mysql.proxy.api_password: ((MYSQL_PROXY_ADMIN_PASSWORD))
      properties.cf_mysql.proxy.healthcheck_timeout_millis: ((MYSQL_PROXY_HEALTHCHECK_TIMEOUT))
- name: postgres
  scripts:
  - scripts/chown_vcap_store.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: postgres
    release_name: postgres
    provides:
      postgres: { as: postgres-database }
  tags:
  - headless
  - sequential-startup
  run:
    scaling:
      min: 1
      max: 3
      ha: 2
    volumes:
    - path: /var/vcap/store
      type: persistent
      tag: postgres-data
      size: 20
    memory: 3072
    virtual-cpus: 2
    exposed-ports:
    - name: postgres
      protocol: TCP
      external: 5524
      internal: 5524
      public: false
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - postgres
            topologyKey: "beta.kubernetes.io/os"
  configuration:
    templates:
      properties.databases.port: 5524
      properties.databases.roles: '[{"name":"pgadmin","password":"((POSTGRES_PASSWORD))"}]'
- name: cf-usb
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: cf-usb
    release_name: cf-usb
  - name: route_registrar
    release_name: routing
  tags:
  - sequential-startup
  run:
    scaling:
      min: 1
      max: 3
      ha: 2
    capabilities: []
    memory: 117
    virtual-cpus: 2
    exposed-ports:
    - name: 'usb'
      protocol: 'TCP'
      internal: 24054
    - name: 'usb2'
      protocol: 'TCP'
      internal: 24053
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - cf-usb
            topologyKey: "beta.kubernetes.io/os"
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"usb", "port": 24053, "uris":["usb.((DOMAIN))", "*.usb.((DOMAIN))"], "registration_interval":"10s"}, {"name":"broker", "port": 24054, "uris":["brokers.((DOMAIN))", "*.brokers.((DOMAIN))"], "registration_interval":"10s"}]'
- name: diego-locket
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: locket
    release_name: diego
  - name: metron_agent
    release_name: loggregator
  tags:
  - sequential-startup
  run:
    scaling:
      min: 1
      max: 3
      ha: 3
    capabilities: []
    memory: 90
    virtual-cpus: 2
    exposed-ports:
    - name: locket
      protocol: TCP
      internal: 8891
    healthcheck:
      readiness:
        command:
        - head -c0 </dev/tcp/${HOSTNAME}/8891
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - diego-locket
            topologyKey: "beta.kubernetes.io/os"
- name: diego-api
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_cfdot_properties.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: bbs
    release_name: diego
  - name: patch-properties
    release_name: scf-helper
  - name: cfdot
    release_name: diego
  - name: metron_agent
    release_name: loggregator
  tags:
  - active-passive
  - sequential-startup
  run:
    scaling:
      min: 1
      max: 3
      ha: 3
      must_be_odd: true
    capabilities: []
    memory: 138
    virtual-cpus: 2
    exposed-ports:
    - name: cell-bbs-api
      protocol: TCP
      internal: 8889
    - name: cell-bbs-dbg
      protocol: TCP
      internal: 17017
    active-passive-probe: /var/vcap/jobs/global-properties/bin/readiness/diego-api
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - diego-api
            topologyKey: "beta.kubernetes.io/os"
  configuration:
    templates:
      # properties.bbs.hostname: '"diego-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"' # cfdot property
      properties.diego.bbs.advertisement_base_hostname: ((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
      # properties.locket.hostname: '"diego-locket.((KUBERNETES_NAMESPACE))"' # cfdot property
      properties.tls.ca_certificate: ((INTERNAL_CA_CERT))                   # cfdot property
      properties.tls.certificate: '"((BBS_REP_CERT))"'                      # cfdot property
      properties.tls.private_key: '"((BBS_REP_KEY))"'                       # cfdot property
- name: router
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: gorouter
    release_name: routing
  - name: metron_agent
    release_name: loggregator
  tags:
  - headless
  run:
    scaling:
      min: 1
      max: 65535
      ha: 2
    capabilities: []
    memory: 135
    virtual-cpus: 4
    exposed-ports:
    - name: router
      protocol: TCP
      internal: 80
      public: true
    - name: router2
      protocol: TCP
      internal: 443
      public: true
    - name: router3
      protocol: TCP
      external: 4443
      internal: 443
      public: true
    healthcheck:
      readiness:
        command:
        - curl --silent --fail http://${HOSTNAME}:8080/health
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - diego-cell
            topologyKey: "beta.kubernetes.io/os"
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - router
            topologyKey: "beta.kubernetes.io/os"
- name: tcp-router
  # XXX haproxy might be able to co-locate with one of the others
  # But this is a _different_ HAProxy from the one in the CF release.
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/patches/fix_haproxy_fd_requirements.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: wait-for-uaa
    release_name: scf
  - name: tcp_router
    release_name: routing
  - name: metron_agent
    release_name: loggregator
  run:
    scaling:
      min: 1
      max: 3
      ha: 2
    capabilities: []
    memory: 99
    virtual-cpus: 2
    exposed-ports:
    - name: healthcheck
      protocol: TCP
      external: 2341
      internal: 80
    - name: tcp-route
      protocol: TCP
      internal: 20000-20008
      public: true
      count-configurable: true
      max: 20
    healthcheck:
      readiness:
        command:
        - curl --silent --fail http://${HOSTNAME}/health
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - tcp-router
            topologyKey: "beta.kubernetes.io/os"
  configuration:
    templates:
      properties.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
- name: routing-api
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: metron_agent
    release_name: loggregator
  - name: routing-api
    release_name: routing
  tags:
  - active-passive
  - sequential-startup
  run:
    scaling:
      min: 1
      max: 3
      ha: 2
    capabilities: []
    memory: 114
    virtual-cpus: 4
    exposed-ports:
    - name: routing-api
      protocol: TCP
      internal: 3000
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - routing-api
            topologyKey: "beta.kubernetes.io/os"
    # All the routes exposed require UAA auth, so we stick with the TCP healthcheck
    active-passive-probe: head -c0 </dev/tcp/${HOSTNAME}/3000
  configuration:
    templates:
      properties.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
- name: api
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/nginx_log_level.sh
  scripts:
  - scripts/patches/fix_blobstore_send_timeout.sh
  - scripts/patches/fix_nodejs_buildpack.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/use_routing_api_private_endpoint.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: patch-properties
    release_name: scf-helper
  - name: cloud_controller_ng
    release_name: capi
  - name: metron_agent
    release_name: loggregator
  - name: route_registrar
    release_name: routing
  - name: statsd_injector
    release_name: statsd-injector
  - name: go-buildpack
    release_name: go-buildpack
  - name: binary-buildpack
    release_name: binary-buildpack
  - name: nodejs-buildpack
    release_name: nodejs-buildpack
  - name: ruby-buildpack
    release_name: ruby-buildpack
  - name: php-buildpack
    release_name: php-buildpack
  - name: python-buildpack
    release_name: python-buildpack
  - name: staticfile-buildpack
    release_name: staticfile-buildpack
  - name: java-buildpack
    release_name: java-buildpack
  - name: dotnet-core-buildpack
    release_name: dotnet-core-buildpack
  tags:
  - sequential-startup
  run:
    scaling:
      min: 1
      max: 65535
      ha: 2
    capabilities: []
    memory: 2421
    virtual-cpus: 4
    exposed-ports:
    - name: api
      protocol: TCP
      internal: 9022
    - name: api-tls
      protocol: TCP
      internal: 9023
    - name: statsd
      protocol: TCP
      internal: 8125
    healthcheck:
      readiness:
        command:
        - curl --silent --fail http://${HOSTNAME}:9022/v2/info
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - api
            topologyKey: "beta.kubernetes.io/os"
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"api", "port":9022, "tags":{"component":"CloudController"}, "uris":["api.((DOMAIN))"], "registration_interval":"10s"}]'
- name: cc-worker
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: cloud_controller_worker
    release_name: capi
  - name: metron_agent
    release_name: loggregator
  run:
    scaling:
      min: 1
      max: 65535
      ha: 2
    capabilities: []
    memory: 753
    virtual-cpus: 2
    exposed-ports: []
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - cc-worker
            topologyKey: "beta.kubernetes.io/os"
- name: blobstore
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/chown_vcap_store.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_chown_blobstore_packages.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: blobstore
    release_name: capi
  - name: route_registrar
    release_name: routing
  - name: metron_agent
    release_name: loggregator
  run:
    scaling:
      min: 1
      max: 1
      # Not HA capable; use external HA storage instead
    capabilities: []
    volumes:
    - path: /var/vcap/store
      type: persistent
      tag: blobstore-data
      size: 50
    memory: 420
    virtual-cpus: 2
    exposed-ports:
    - name: blobstore-ext
      protocol: TCP
      internal: 8080
    - name: blobstore
      protocol: TCP
      internal: 4443
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"blobstore", "port":8080, "tags":{"component":"blobstore"}, "uris":["blobstore.((DOMAIN))"], "registration_interval":"10s"}]'
- name: cc-clock
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/cc_clock_wait_for_api_ready.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: cloud_controller_clock
    release_name: capi
  - name: metron_agent
    release_name: loggregator
  - name: statsd_injector
    release_name: statsd-injector
  run:
    scaling:
      min: 1
      max: 1 # Max is 1 per the description of the clock job
    capabilities: []
    memory: 789
    virtual-cpus: 2
    exposed-ports: []
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - cc-clock
            topologyKey: "beta.kubernetes.io/os"
- name: doppler
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: doppler
    release_name: loggregator
  - name: metron_agent
    release_name: loggregator
  tags:
  - headless
  run:
    scaling:
      min: 1
      max: 65535
      ha: 2
    capabilities: []
    memory: 390
    virtual-cpus: 2
    exposed-ports:
    - name: dropsonde-udp
      protocol: UDP
      internal: 3457
    - name: dropsonde-tcp
      protocol: TCP
      internal: 3458
    - name: doppler-tls
      protocol: TCP
      internal: 3459
    - name: doppler-ws
      protocol: TCP
      internal: 8081
    - name: doppler-grpc
      protocol: TCP
      internal: 8082
    healthcheck:
      readiness:
        command:
        - head -c0 </dev/tcp/${HOSTNAME}/8082
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - doppler
            topologyKey: "beta.kubernetes.io/os"
- name: loggregator
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: loggregator_trafficcontroller
    release_name: loggregator
  - name: metron_agent
    release_name: loggregator
  - name: route_registrar
    release_name: routing
  tag:
  - headless
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"loggregator", "port":8081, "uris":["doppler.((DOMAIN))"], "registration_interval":"10s"}, {"name":"loggregator_trafficcontroller", "port":8080, "uris":["loggregator.((DOMAIN))"], "registration_interval":"10s"}]'
  run:
    scaling:
      min: 1
      max: 65535
      ha: 2
    capabilities: []
    memory: 153
    virtual-cpus: 2
    exposed-ports:
    - name: dropsonde
      protocol: TCP
      internal: 8081
    - name: grpc
      protocol: TCP
      internal: 8082
    healthcheck:
      readiness:
        command:
        - curl --silent --fail http://${HOSTNAME}:8081/set-cookie
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - loggregator
            topologyKey: "beta.kubernetes.io/os"
- name: diego-brain
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  - scripts/patches/fix_cfdot_properties.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: auctioneer
    release_name: diego
  - name: patch-properties
    release_name: scf-helper
  - name: cfdot
    release_name: diego
  - name: metron_agent
    release_name: loggregator
  tags:
  - active-passive
  run:
    scaling:
      min: 1
      max: 3
      ha: 2
    capabilities: []
    memory: 99
    virtual-cpus: 4
    exposed-ports:
    - name: diego-auction
      protocol: TCP
      internal: 9016
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - diego-brain
            topologyKey: "beta.kubernetes.io/os"
    # Auctioneer has no useful healthcheck routes; we can only use the TCP port
    active-passive-probe: head -c0 </dev/tcp/${HOSTNAME}/9016
  configuration:
    templates:
      # properties.bbs.hostname: '"diego-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"' # cfdot property
      # properties.locket.hostname: '"diego-locket.((KUBERNETES_NAMESPACE))"' # cfdot property
      properties.tls.ca_certificate: ((INTERNAL_CA_CERT))                   # cfdot property
      properties.tls.certificate: '"((BBS_REP_CERT))"'                      # cfdot property
      properties.tls.private_key: '"((BBS_REP_KEY))"'                       # cfdot property
- name: cc-uploader
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: tps
    release_name: capi
  - name: cc_uploader
    release_name: capi
  - name: metron_agent
    release_name: loggregator
  run:
    scaling:
      min: 1
      max: 3
      ha: 2
    capabilities: []
    memory: 129
    virtual-cpus: 4
    exposed-ports:
    - name: cc-up-listen
      protocol: TCP
      internal: 9091
    - name: cc-up-dbg
      protocol: TCP
      internal: 17018
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - cc-uploader
            topologyKey: "beta.kubernetes.io/os"
- name: diego-access
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: ssh_proxy
    release_name: diego
  - name: metron_agent
    release_name: loggregator
  - name: file_server
    release_name: diego
  run:
    scaling:
      min: 1
      max: 3
      ha: 2
    capabilities: []
    memory: 123
    virtual-cpus: 2
    exposed-ports:
    - name: diego-ssh
      protocol: TCP
      internal: 2222
      public: true
    - name: diego-files
      protocol: TCP
      internal: 8080
    healthcheck:
      readiness:
        command:
        - curl --silent --fail http://${HOSTNAME}:8080/v1/static/
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - diego-access
            topologyKey: "beta.kubernetes.io/os"
- name: nfs-broker
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: metron_agent
    release_name: loggregator
  - name: nfsbroker
    release_name: nfs-volume
  tags:
  - sequential-startup
  run:
    scaling:
      min: 1
      max: 3
    capabilities: [ALL]
    memory: 63
    virtual-cpus: 2
    exposed-ports:
    - name: nfsbroker
      protocol: TCP
      internal: 8999
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - nfs-broker
            topologyKey: "beta.kubernetes.io/os"
- name: diego-cell
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/set-diego-cell-memory-limits.sh
  - scripts/go_log_level.sh
  - scripts/configure-garden-filesystem.sh
  scripts:
  - scripts/configure-nested-net.sh
  - scripts/cleanup-garden-graph.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_cfdot_properties.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: wait-for-uaa
    release_name: scf
  - name: rep
    release_name: diego
  - name: patch-properties
    release_name: scf-helper
  - name: cfdot
    release_name: diego
  - name: route_emitter
    release_name: diego
  - name: garden
    release_name: garden-runc
  - name: groot-btrfs
    release_name: groot-btrfs
  - name: cflinuxfs2-rootfs-setup
    release_name: cflinuxfs2
  - name: opensuse42-rootfs-setup
    release_name: cf-opensuse42
  - name: cf-sle12-setup
    release_name: cf-sle12
  - name: metron_agent
    release_name: loggregator
  - name: nfsv3driver
    release_name: nfs-volume
  tags:
  - headless
  # Role needs volume claim templates (see storage below), no LB => clustered
  run:
    scaling:
      min: 1
      max: 254
      # Not sure why 2 isn't enough for HA, but https://docs.cloudfoundry.org/concepts/high-availability.html disagrees
      ha: 3
    capabilities: [ALL]
    volumes:
    - path: /var/vcap/data/grootfs
      type: persistent
      tag: grootfs-data
      size: 50
    - path: /sys/fs/cgroup
      type: host
      tag: host-cgroup
    memory: 4677
    virtual-cpus: 4
    exposed-ports:
    - name: rep-server
      protocol: TCP
      internal: 1801
    - name: nfs-driver
      protocol: TCP
      internal: 7589
    - name: nfs-admin
      protocol: TCP
      internal: 7590
    healthcheck:
        command:
          - /var/vcap/jobs/global-properties/bin/readiness/diego-cell
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - diego-cell
            topologyKey: "beta.kubernetes.io/os"
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: "skiff-role-name"
                operator: In
                values:
                - router
            topologyKey: "beta.kubernetes.io/os"
  configuration:
    templates:
      # properties.bbs.hostname: '"diego-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"' # cfdot property
      properties.containers.trusted_ca_certificates: "[((#TRUSTED_CERTS))((TRUSTED_CERTS)),((/TRUSTED_CERTS))((INTERNAL_CA_CERT))]"
      properties.diego.rep.advertise_domain: diego-cell-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
      # properties.locket.hostname: '"diego-locket.((KUBERNETES_NAMESPACE))"' # cfdot property
      properties.tls.ca_cert: ((INTERNAL_CA_CERT))
      properties.tls.ca_certificate: ((INTERNAL_CA_CERT))                   # cfdot property
      properties.tls.cert: ((REP_SERVER_CERT))
      properties.tls.certificate: '"((BBS_REP_CERT))"'                      # cfdot property
      properties.tls.key: ((REP_SERVER_KEY))
      properties.tls.private_key: '"((BBS_REP_KEY))"'                       # cfdot property
- name: acceptance-tests-brain
  type: bosh-task
  tags:
  - stop-on-failure
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: acceptance-tests-brain
    release_name: scf
  run:
    scaling:
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    exposed-ports: []
    service-account: test-brain
- name: acceptance-tests
  type: bosh-task
  tags:
  - stop-on-failure
  scripts:
  - scripts/cf_acceptance_tests_suites.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: acceptance-tests
    release_name: scf
  run:
    scaling:
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    exposed-ports: []
  configuration:
    templates:
      scf.cats-suites: '"((CATS_SUITES))"'
- name: smoke-tests
  type: bosh-task
  tags:
  - stop-on-failure
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: smoke_tests
    release_name: cf-smoke-tests
  run:
    scaling:
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    exposed-ports: []
- name: secret-generation
  type: bosh-task
  jobs:
  - name: generate-secrets
    release_name: scf-helper
  processes: []
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  run:
    scaling:
      min: 1
      max: 1
    flight-stage: pre-flight
    capabilities: []
    memory: 256
    virtual-cpus: 1
    exposed-ports: []
    service-account: secret-generator
  configuration:
    templates:
      properties.scf.secrets.cert_expiration: ((CERT_EXPIRATION))
      properties.scf.secrets.cluster_domain: ((KUBERNETES_CLUSTER_DOMAIN))
      properties.scf.secrets.domain: ((DOMAIN))
      properties.scf.secrets.generation: ((KUBE_SECRETS_GENERATION_COUNTER))
      properties.scf.secrets.is_install: ((HELM_IS_INSTALL))
      properties.scf.secrets.name: ((KUBE_SECRETS_GENERATION_NAME))
      properties.scf.secrets.namespace: ((KUBERNETES_NAMESPACE))
- name: post-deployment-setup
  type: bosh-task
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: uaa-create-user
    release_name: scf
  - name: configure-scf
    release_name: scf
  run:
    scaling:
      min: 1
      max: 1
    flight-stage: post-flight
    capabilities: []
    memory: 256
    virtual-cpus: 1
    exposed-ports: []
# cf app-autoscaler
- name: autoscaler-postgres
  scripts:
  - scripts/chown_vcap_store.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: postgres
    release_name: postgres
  run:
    scaling:
      min: 0
      max: 3
      ha: 2
    capabilities: []
    volumes:
    - path: /var/vcap/store
      type: persistent
      tag: postgres-data
      size: 100
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
    - name: postgres
      protocol: TCP
      external: 5432
      internal: 5432
    healthcheck:
      readiness:
  configuration:
    templates:
      properties.databases.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_ROLE_PASSWORD))", "tag": "default"}]'
- name: autoscaler-api
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: apiserver
    release_name: app-autoscaler
  - name: servicebroker
    release_name: app-autoscaler
  - name: route_registrar
    release_name: routing
  run:
    scaling:
      min: 0
      max: 3
      ha: 2
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
    - name: api #apiserverport
      protocol: TCP
      external: 6100
      internal: 6100
    - name: api-public #apiserverpublicport
      protocol: TCP
      external: 6106
      internal: 6106
      public: true
    - name: broker
      protocol: TCP
      external: 6107
      internal: 6107
    - name: broker-public #brokerpublicport
      protocol: TCP
      external: 6101
      internal: 6101
      public: true
    healthcheck:
      readiness:
  configuration:
    templates:
      properties.route_registrar.routes: >
        [
          {
            "name":"autoscalerapiserver", 
            "port":6106, 
            "tags": {"component":"autoscalerapiserver"},
            "uris": ["autoscaler.((DOMAIN))"],
            "registration_interval":"10s"
          },
          {
            "name":"autoscalerservicebroker",
            "port":6101,
            "tags":{"component":"autoscalerservicebroker"},
            "uris":["autoscalerservicebroker.((DOMAIN))"],
            "registration_interval":"10s"
          }
        ]      
- name: autoscaler-metrics
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: metricscollector
    release_name: app-autoscaler
  - name: eventgenerator
    release_name: app-autoscaler
  run:
    scaling:
      min: 0
      max: 3
      ha: 2
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 4
    exposed-ports:
    - name: metrics #metricscollectorport
      protocol: TCP
      external: 6103
      internal: 6103
    healthcheck:
      readiness:
- name: autoscaler-actors
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: scalingengine
    release_name: app-autoscaler
  - name: scheduler
    release_name: app-autoscaler
  - name: pruner
    release_name: app-autoscaler
  run:
    scaling:
      min: 0
      max: 3
      ha: 2
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
    - name: scaling-engine #scalingengineport
      protocol: TCP
      external: 6104
      internal: 6104
    - name: scheduler #schedulerport
      protocol: TCP
      external: 6102
      internal: 6102
    healthcheck:
      readiness:
- name: autoscaler-smoke
  type: bosh-task
  tags:
  - stop-on-failure
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: scf-helper
  - name: authorize-internal-ca
    release_name: scf
  - name: autoscaler-smoke
    release_name: scf
  run:
    scaling:
      min: 0
      max: 1
    flight-stage: manual
  configuration:
    templates:
      properties.smoke_tests.api: api.((DOMAIN))
      properties.smoke_tests.apps_domain: ((DOMAIN))
      properties.smoke_tests.autoscaler_service_broker_endpoint: https://autoscalerservicebroker.((DOMAIN))
      properties.smoke_tests.password: ((CLUSTER_ADMIN_PASSWORD))
      properties.smoke_tests.skip_ssl_validation: false
configuration:
  auth:
    roles:
      configgin-role:
      - apiGroups: [""]
        resources: [pods]
        verbs: [get, list, patch]
      - apiGroups: [""]
        resources: [services]
        verbs: [get]
      - apiGroups: [apps]
        resources: [statefulsets]
        verbs: [get]
      secrets-role:
      - apiGroups: [""]
        resources: [configmaps, secrets]
        verbs: [create, get, list, patch, update, delete]
      test-role:
      - apiGroups: [""]
        resources: [services]
        verbs: [create, get, delete]
      - apiGroups: [apps]
        resources: [statefulsets]
        verbs: [create, get, update, delete]
      - apiGroups: [""]
        resources: ["pods/exec"]
        verbs: [create, delete]
      - apiGroups: [""]
        resources: ["pods/log"]
        verbs: [create, delete, get, list]
    accounts:
      default:
        roles: [configgin-role]
      secret-generator:
        roles: [configgin-role, secrets-role]
      test-brain:
        roles: [configgin-role, test-role]
  variables:
  - name: ALLOWED_CORS_DOMAINS
    default: []
    description: List of domains (including scheme) from which Cross-Origin requests will be accepted, a * can be used as a wildcard for any part of a domain.
    required: true
  - name: ALLOW_APP_SSH_ACCESS
    default: true
    description: Allow users to change the value of the app-level allow_ssh attribute.
    required: true
  - name: APP_SSH_KEY
    secret: true
    generator:
      id: app_ssh
      type: SSH
      value_type: private_key
    description: PEM encoded RSA private key used to identify host.
  - name: APP_SSH_KEY_FINGERPRINT
    secret: true
    generator:
      id: app_ssh
      type: SSH
      value_type: fingerprint
    description: MD5 fingerprint of the host key of the SSH proxy that brokers connections to application instances.
  - name: APP_TOKEN_UPLOAD_GRACE_PERIOD
    default: 1200
    description: Extra token expiry time while uploading big apps, in seconds.
    required: true
  - name: AUCTIONEER_REP_CERT
    secret: true
    generator:
      id: auctioneer_rep_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
  - name: AUCTIONEER_REP_KEY
    secret: true
    generator:
      id: auctioneer_rep_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key
  - name: AUCTIONEER_SERVER_CERT
    secret: true
    generator:
      id: auctioneer_server_cert
      type: Certificate
      value_type: certificate
      role_name: diego-brain
    description: PEM-encoded server certificate
  - name: AUCTIONEER_SERVER_KEY
    secret: true
    generator:
      id: auctioneer_server_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded server key
  - name: AUTOSCALER_ASACTORS_CLIENT_CERT
    secret: true
    generator:
      id: as_actors_client_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - as_actors_client
    description: PEM-encoded certificate
  - name: AUTOSCALER_ASACTORS_CLIENT_KEY
    secret: true
    generator:
      id: as_actors_client_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key.
  - name: AUTOSCALER_ASACTORS_SERVER_CERT
    secret: true
    generator:
      id: as_actors_server_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - "autoscaler-actors.{{.KUBERNETES_NAMESPACE}}.svc.{{.KUBERNETES_CLUSTER_DOMAIN}}"
    description: PEM-encoded server certificate
  - name: AUTOSCALER_ASACTORS_SERVER_KEY
    secret: true
    generator:
      id: as_actors_server_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded server key
  - name: AUTOSCALER_ASAPI_CLIENT_CERT
    secret: true
    generator:
      id: as_api_client_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - as_api_client
    description: PEM-encoded certificate
  - name: AUTOSCALER_ASAPI_CLIENT_KEY
    secret: true
    generator:
      id: as_api_client_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key.
  - name: AUTOSCALER_ASAPI_PUBLIC_SERVER_CERT
    secret: true
    generator:
      id: as_api_public_server_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - "autoscaler.{{.DOMAIN}}"
    description: PEM-encoded server certificate
  - name: AUTOSCALER_ASAPI_PUBLIC_SERVER_KEY
    secret: true
    generator:
      id: as_api_public_server_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded server key
  - name: AUTOSCALER_ASAPI_SERVER_CERT
    secret: true
    generator:
      id: as_api_server_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - "autoscaler-api.{{.KUBERNETES_NAMESPACE}}.svc.{{.KUBERNETES_CLUSTER_DOMAIN}}"
    description: PEM-encoded server certificate
  - name: AUTOSCALER_ASAPI_SERVER_KEY
    secret: true
    generator:
      id: as_api_server_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded server key
  - name: AUTOSCALER_ASMETRICS_CLIENT_CERT
    secret: true
    generator:
      id: as_metrics_client_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - as_metrics_client
    description: PEM-encoded certificate
  - name: AUTOSCALER_ASMETRICS_CLIENT_KEY
    secret: true
    generator:
      id: as_metrics_client_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key.
  - name: AUTOSCALER_ASMETRICS_SERVER_CERT
    secret: true
    generator:
      id: as_metrics_server_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - "autoscaler-metrics.{{.KUBERNETES_NAMESPACE}}.svc.{{.KUBERNETES_CLUSTER_DOMAIN}}"
    description: PEM-encoded server certificate
  - name: AUTOSCALER_ASMETRICS_SERVER_KEY
    secret: true
    generator:
      id: as_metrics_server_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded server key
  - name: AUTOSCALER_DB_ROLE_PASSWORD
    secret: true
    generator:
      type: Password
    description: The password for app-autoscaler postgres database.
  - name: AUTOSCALER_SERVICE_BROKER_PASSWORD
    secret: true
    generator:
      type: Password
    description: The password for the app-autoscaler service broker.
  - name: AUTOSCALER_UAA_CLIENT_SECRET
    secret: true
    generator:
      type: Password
    description: The uaa client secret used by autoscaler
  - name: BBS_ACTIVE_KEY_PASSPHRASE
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to the diego BBS database.
  - name: BBS_AUCTIONEER_CERT
    secret: true
    generator:
      id: bbs_auctioneer_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
  - name: BBS_AUCTIONEER_KEY
    secret: true
    generator:
      id: bbs_auctioneer_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key
  - name: BBS_CLIENT_CRT
    secret: true
    generator:
      id: bbs_client_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded client certificate.
  - name: BBS_CLIENT_KEY
    secret: true
    generator:
      id: bbs_client_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded client key.
  - name: BBS_REP_CERT
    secret: true
    generator:
      id: bbs_rep_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
  - name: BBS_REP_KEY
    secret: true
    generator:
      id: bbs_rep_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key
  - name: BBS_SERVER_CRT
    secret: true
    generator:
      id: bbs_server_cert
      type: Certificate
      value_type: certificate
      role_name: diego-api
    description: PEM-encoded client certificate.
  - name: BBS_SERVER_KEY
    secret: true
    generator:
      id: bbs_server_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded client key.
  - name: BLOBSTORE_ACCESS_RULES
    default: allow 10.0.0.0/8; allow 172.16.0.0/12; allow 192.168.0.0/16;
    description: List of allow / deny rules for the blobstore internal server. Will be followed by 'deny all'. Each entry must be follow by a semicolon.
    required: true
  - name: BLOBSTORE_MAX_UPLOAD_SIZE
    default: 5000
    description: Maximal allowed file size for upload to blobstore, in megabytes.
    required: true
  - name: BLOBSTORE_PASSWORD
    secret: true
    generator:
      type: Password
    description: The basic auth password that Cloud Controller uses to connect to the blobstore server. Auto-generated if not provided. Passwords must be alphanumeric (URL-safe).
  - name: BLOBSTORE_SECURE_LINK
    secret: true
    generator:
      type: Password
    description: The secret used for signing URLs between Cloud Controller and blobstore.
  - name: BLOBSTORE_TLS_CERT
    secret: true
    generator:
      id: blobstore_cert
      type: Certificate
      value_type: certificate
      role_name: blobstore
    description: The PEM-encoded certificate (optionally as a certificate chain) for serving blobs over TLS/SSL.
  - name: BLOBSTORE_TLS_KEY
    secret: true
    generator:
      id: blobstore_cert
      type: Certificate
      value_type: private_key
    description: The PEM-encoded private key for signing TLS/SSL traffic.
  - name: BULK_API_PASSWORD
    secret: true
    generator:
      type: Password
    description: The password for the bulk api.
  - name: CATS_SUITES
    internal: true
    description: The set of CAT test suites to run. If not specified it falls back to a hardwired set of suites.
  - name: CC_DB_CURRENT_KEY_LABEL
    description: The key used to encrypt entries in the CC database
    default: ""
  - name: CC_DB_ENCRYPTION_KEYS
    description: A map of labels and encryption keys
    secret: true
    # This is a quoted tilde so it results in a tilde in the CC yaml file, not a nil value in this file.
    # A real example would be something like: "{key0: Chieh1quaela3iaN}", and the CC_DB_CURRENT_KEY_LABEL
    # would be set to "key0".
    default: "~"
  - name: CC_SERVER_CRT
    secret: true
    generator:
      id: cc_mutual_cert
      type: Certificate
      value_type: certificate
      role_name: api
    description: The PEM-encoded certificate for internal cloud controller traffic.
  - name: CC_SERVER_KEY
    secret: true
    generator:
      id: cc_mutual_cert
      type: Certificate
      value_type: private_key
    description: The PEM-encoded private key for internal cloud controller traffic.
  - name: CC_UPLOADER_CRT
    secret: true
    generator:
      id: cc_uploader_cert
      type: Certificate
      value_type: certificate
      role_name: cc-uploader
    description: The PEM-encoded certificate for internal cloud controller uploader traffic.
  - name: CC_UPLOADER_KEY
    secret: true
    generator:
      id: cc_uploader_cert
      type: Certificate
      value_type: private_key
    description: The PEM-encoded private key for internal cloud controller uploader traffic.
  - name: CDN_URI
    default: ""
    description: URI for a CDN to use for buildpack downloads.
  - name: CERT_EXPIRATION
    description: Expiration for generated certificates (in days)
    default: 10950
  - name: CF_USB_BROKER_SERVER_CERT
    secret: true
    generator:
      id: "usb_broker_server_cert"
      type: Certificate
      value_type: certificate
      role_name: cf-usb
    description: PEM-encoded broker server certificate.
  - name: CF_USB_BROKER_SERVER_KEY
    secret: true
    generator:
      id: "usb_broker_server_cert"
      type: Certificate
      value_type: private_key
    description: PEM-encoded broker server key.
  - name: CF_USB_PASSWORD
    secret: true
    generator:
      type: Password
    example: password
    description: The password for access to the Universal Service Broker.
  - name: CLUSTER_ADMIN_AUTHORITIES
    default: scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,routing.router_groups.read,routing.router_groups.write
    description: The Oauth2 authorities available to the cluster administrator.
    required: true
  - name: CLUSTER_ADMIN_PASSWORD
    secret: true
    description: The password for the cluster administrator.
    required: true
  - name: CLUSTER_BUILD
    default: 2.0.2
    description: "'build' attribute in the /v2/info endpoint"
    required: true
  - name: CLUSTER_DESCRIPTION
    default: SUSE Cloud Foundry
    description: "'description' attribute in the /v2/info endpoint"
    required: true
  - name: CLUSTER_NAME
    default: SCF
    description: "'name' attribute in the /v2/info endpoint"
    required: true
  - name: CLUSTER_VERSION
    default: 2
    description: "'version' attribute in the /v2/info endpoint"
    required: true
  - name: CONSUL_CLIENT_CERT
    secret: true
    generator:
      id: consul_client_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded consul client certificate
  - name: CONSUL_CLIENT_KEY
    secret: true
    generator:
      id: consul_client_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded consul client key
  - name: CONSUL_SERVER_CERT
    secret: true
    generator:
      id: consul_server_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - "*.consul-set"
      - "server.dc1.{{.KUBERNETES_NAMESPACE}}.svc.{{.KUBERNETES_CLUSTER_DOMAIN}}"
    description: PEM-encoded server certificate
  - name: CONSUL_SERVER_ENCRYPT_KEY
    secret: true
    immutable: true
    generator:
      type: Password
    description: Consul server encryption key
  - name: CONSUL_SERVER_KEY
    secret: true
    generator:
      id: consul_server_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded server key
  - name: DB_ENCRYPTION_KEY
    secret: true
    # Immutable until we figure out how to keep the previous value for `cc.database_encryption.keys`
    immutable: true
    generator:
      type: Password
    description: Key for encrypting sensitive values in the Cloud Controller database.
  - name: DEFAULT_APP_DISK_IN_MB
    default: 1024
    description: The standard amount of disk (in MB) given to an application when not overriden by the user via manifest, command line, etc.
    required: true
  - name: DEFAULT_APP_MEMORY
    default: 1024
    description: The standard amount of memory (in MB) given to an application when not overriden by the user via manifest, command line, etc.
    required: true
  - name: DEFAULT_APP_SSH_ACCESS
    default: true
    description: If set apps pushed to spaces that allow SSH access will have SSH enabled by default.
    required: true
  - name: DEFAULT_STACK
    default: sle12
    description: The default stack to use if no custom stack is specified by an app.
  - name: DIEGO_CELL_DISK_CAPACITY_MB
    default: auto
    description: The container disk capacity the cell should manage. If this capacity is larger than the actual disk quota of the cell component, over-provisioning will occur.
    required: true
  - name: DIEGO_CELL_MEMORY_CAPACITY_MB
    default: auto
    description: The memory capacity the cell should manage. If this capacity is larger than the actual memory of the cell component, over-provisioning will occur.
    required: true
  - name: DIEGO_CELL_NETWORK_MTU
    default: "1400"
    description: Maximum network transmission unit length in bytes for application containers.
    required: true
  - name: DIEGO_CELL_SUBNET
    default: 10.38.0.0/16
    description: A CIDR subnet mask specifying the range of subnets available to be assigned to containers.
    required: true
  - name: DIEGO_CLIENT_CERT
    secret: true
    generator:
      id: rep_client_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - diego-locket.{{.KUBERNETES_NAMESPACE}}
    description: PEM-encoded client certificate
  - name: DIEGO_CLIENT_KEY
    secret: true
    generator:
      id: rep_client_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded client key
  - name: DISABLE_CUSTOM_BUILDPACKS
    default: false
    description: Disable external buildpacks. Only admin buildpacks and system buildpacks will be available to users.
    required: true
  - name: DNS_HEALTH_CHECK_HOST
    default: 127.0.0.1
    description: The host to ping for confirmation of DNS resolution.
    required: true
  - name: DOMAIN
    example: my-scf-cluster.com
    required: true
    description: Base domain of the SCF cluster.
  - name: DOPPLER_CERT
    secret: true
    generator:
      id: doppler_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - doppler
    description: PEM-encoded certificate.
  - name: DOPPLER_KEY
    secret: true
    generator:
      id: doppler_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key.
  - name: DROPLET_MAX_STAGED_STORED
    default: 5
    description: The number of versions of an application to keep. You will be able to rollback to this amount of versions.
    required: true
  - name: ENABLE_SECURITY_EVENT_LOGGING
    default: "false"
    description: >
      By default, Cloud Foundry does not enable Cloud Controller request logging.
      To enable this feature, you must set this property to "true".
      You can learn more about the format of the logs here https://docs.cloudfoundry.org/loggregator/cc-uaa-logging.html#cc 
  - name: FORCE_FORWARDED_PROTO_AS_HTTPS
    default: false
    description: Enables setting the X-Forwarded-Proto header if SSL termination happened upstream and the header value was set incorrectly. When this property is set to true, the gorouter sets the header X-Forwarded-Proto to https. When this value set to false, the gorouter sets the header X-Forwarded-Proto to the protocol of the incoming request.
    required: true
  - name: GARDEN_APPARMOR_PROFILE
    default: garden-default
    description: AppArmor profile name for garden-runc; set this to empty string to disable AppArmor support
  - name: GARDEN_DISABLE_BTRFS
    default: ""
    description: An empty value means BTRFS is used. It's set to "true" by a script if GARDEN_ROOTFS_DRIVER is set to overlay-xfs.
    type: environment
  - name: GARDEN_DOCKER_REGISTRY
    default: registry-1.docker.io
    description: URL pointing to the Docker registry used for fetching Docker images. If not set, the Docker service default is used.
    required: true
  - name: GARDEN_LINUX_DNS_SERVER
    default: ""
    description: 'Override DNS servers to be used in containers; defaults to the same as the host.'
  - name: GARDEN_ROOTFS_DRIVER
    default: btrfs
    description: The filesystem driver to use (btrfs or overlay-xfs).
    required: true
    internal: true
  - name: GO_LOG_LEVEL
    type: environment
    description: >
      The log level for go components. This parameter is not supposed to be set
      by the user. To change the cluster's log level set the parameter
      `LOG_LEVEL` instead, from which this one is derived.
  - name: HELM_IS_INSTALL
    description: >
      This is an environment variable built-in by fissile.
      It's set directly from the Release.IsInstall Helm property.
    type: environment
  - name: HOSTNAME
    description: >
      The host name of the container.  This should be automatic and should not
      be prompted.
    type: environment
  - name: HTTPS_PROXY
    required: false
    description: Location of the proxy to use for secure web access.
  - name: HTTP_PROXY
    required: false
    description: Location of the proxy to use for regular web access.
  - name: INSECURE_DOCKER_REGISTRIES
    default: ''
    example: '"docker-registry.example.com:80", "hello.example.org:443"'
    description: >
      A comma-separated whitelist of insecure Docker registries in the form of '<HOSTNAME|IP>:PORT'.
      Each registry must be quoted separately.
  - name: INTERNAL_API_PASSWORD
    secret: true
    generator:
      type: Password
    description: Basic auth password for access to the Cloud Controller's internal API.
  - name: INTERNAL_CA_CERT
    secret: true
    generator:
      id: cacert
      type: CACertificate
      value_type: certificate
    description: PEM-encoded CA certificate used to sign the TLS certificate used by all components to secure their communications.
  - name: INTERNAL_CA_KEY
    secret: true
    generator:
      id: cacert
      type: CACertificate
      value_type: private_key
    description: PEM-encoded CA key.
  - name: KUBERNETES_CLUSTER_DOMAIN
    description: >
      The cluster domain used by Kubernetes.
      If left empty, each container will try to determine the correct value based on /etc/resolv.conf
      You can read more about it in the Kubernetes Documentation https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
    example: cluster.local
    type: environment
  - name: KUBERNETES_NAMESPACE
    type: environment
    description: >
      The name of the kubernetes namespace all components will run in.
      This parameter cannot be set by the user.
      Its value is supplied by the kubernetes runtime.
  - name: KUBERNETES_STORAGE_CLASS_PERSISTENT
    type: environment
  - name: KUBE_AZ
    description: >
      A string representing the availability zone a container is running in.
      Shouldn't be changed from its default value of z1.
    type: environment
    default: "z1"
  - name: KUBE_COMPONENT_INDEX
    description: >
      This is an environment variable built-in by fissile.
      It's set to a numeric index for roles with multiple replicas.
    type: environment
  - name: KUBE_CONSUL_CLUSTER_IPS
    type: environment
    description: >
      A comma-separated list of IP addresses for the machines of the consul sub-cluster.
      This parameter cannot be set by the user.
      Its value is automatically computed during cluster setup.
  - name: KUBE_NATS_CLUSTER_IPS
    type: environment
    description: >
      A comma-separated list of IP addresses for the machines of the nats sub-cluster.
      This parameter cannot be set by the user.
      Its value is automatically computed during cluster setup.
  - name: KUBE_SECRETS_GENERATION_COUNTER
    description: >
      This is an environment variable built-in by fissile.
      It's automatically set to the kube.secrets_generation_counter Helm value, which controls secret rotation.
    type: environment
  - name: KUBE_SECRETS_GENERATION_NAME
    description: >
      This is an environment variable built-in by fissile.
      Its default value is 'secret-1' and cannot be set by the user.
    type: environment
  - name: KUBE_SIZING_NATS_COUNT
    description: >
      The number of nats replicas deployed.
      This value is set automatically by the helm charts of SCF.
  - name: KUBE_SIZING_TCP_ROUTER_PORTS_TCP_ROUTE_MAX
    description: >
      Highest internal TCP routing port.
      This value is set automatically by the helm charts of SCF.
  - name: KUBE_SIZING_TCP_ROUTER_PORTS_TCP_ROUTE_MIN
    description: >
      Lowest internal TCP routing port.
      This value is set automatically by the helm charts of SCF.
  - name: LOGGREGATOR_CLIENT_CERT
    secret: true
    generator:
      id: loggregator_client_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded client certificate for loggregator mutual authentication
  - name: LOGGREGATOR_CLIENT_KEY
    secret: true
    generator:
      id: loggregator_client_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded client key for loggregator mutual authentication
  - name: LOG_LEVEL
    default: info
    description: "The cluster's log level: off, fatal, error, warn, info, debug, debug1, debug2."
    required: true
  - name: MAX_APP_DISK_IN_MB
    default: 2048
    description: The maximum amount of disk a user can request for an application via manifest, command line, etc., in MB. See also DEFAULT_APP_DISK_IN_MB for the standard amount.
    required: true
  - name: MAX_HEALTH_CHECK_TIMEOUT
    default: 180
    description: Maximum health check timeout that can be set for an app, in seconds.
    required: true
  - name: METRON_CERT
    secret: true
    generator:
      id: metron_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - metron
    description: PEM-encoded certificate.
  - name: METRON_KEY
    secret: true
    generator:
      id: metron_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key.
  - name: MONIT_PASSWORD
    secret: true
    generator:
      type: Password
    description: Password used for the monit API.
  - name: MYSQL_ADMIN_PASSWORD
    secret: true
    generator:
      type: Password
    description: The password for the MySQL server admin user.
  - name: MYSQL_CCDB_ROLE_PASSWORD
    previous_names: [CCDB_ROLE_PASSWORD]
    secret: true
    generator:
      type: Password
    description: The password for access to the Cloud Controller database.
  - name: MYSQL_CF_USB_PASSWORD
    secret: true
    generator:
      type: Password
    example: password
    description: The password for access to the usb config database.
  - name: MYSQL_CLUSTER_HEALTH_PASSWORD
    secret: true
    generator:
      type: Password
    description: The password for the cluster logger health user.
  - name: MYSQL_DIEGO_LOCKET_PASSWORD
    description: Database password for the diego locket service.
    secret: true
    generator:
      type: Password
  - name: MYSQL_DIEGO_PASSWORD
    secret: true
    generator:
      type: Password
    description: The password for access to MySQL by diego.
  - name: MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD
    secret: true
    generator:
      type: Password
    description: Password used to authenticate to the MySQL Galera healthcheck endpoint.
  - name: MYSQL_PERSI_NFS_PASSWORD
    description: 'Database password for storing broker state for the Persi NFS Broker'
    secret: true
    generator:
      type: Password
  - name: MYSQL_PROXY_ADMIN_PASSWORD
    secret: true
    generator:
      type: Password
    description: The password for Basic Auth used to secure the MySQL proxy API.
  - name: MYSQL_PROXY_HEALTHCHECK_TIMEOUT
    default: 30000
    description: The time allowed for the MySQL server to respond to healthcheck queries, in milliseconds.
    required: true
  - name: MYSQL_ROUTING_API_PASSWORD
    secret: true
    generator:
      type: Password
    description: The password for access to MySQL by the routing-api
  - name: NATS_PASSWORD
    secret: true
    generator:
      type: Password
    description: The password for access to NATS.
  - name: NGINX_LOG_LEVEL
    type: environment
    description: >
      The log level for nginx. This parameter is not supposed to be set by the
      user. To change the cluster's log level set the parameter `LOG_LEVEL`
      instead, from which this one is derived.
  - name: NGINX_MAX_REQUEST_BODY_SIZE
    default: 2048
    description: Sets the maximum allowed size of the client request body, specified in the “Content-Length” request header field, in megabytes. If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client. Please be aware that browsers cannot correctly display this error. Setting size to 0 disables checking of client request body size. This limits application uploads, buildpack uploads, etc.
    required: true
  - name: NO_PROXY
    description: Comma separated list of IP addresses and domains which should not be directoed through a proxy, if any.
    required: false
  - name: PERSI_NFS_ALLOWED_OPTIONS
    description: 'Comma separated list of white-listed options that may be set during create or bind operations.'
    example: 'uid,gid,allow_root,allow_other,nfs_uid,nfs_gid,auto_cache,fsname,username,password'
    default: 'uid,gid,auto_cache,username,password'
  - name: PERSI_NFS_BROKER_PASSWORD
    description: 'Basic auth password to verify on incoming Service Broker requests'
    secret: true
    generator:
      type: Password
  - name: PERSI_NFS_DEFAULT_OPTIONS
    description: > 
      Comma separated list of default values for nfs mount options. 
      If a default is specified with an option not included in PERSI_NFS_ALLOWED_OPTIONS, 
      then this default value will be set and it won't be overridable.
  - name: PERSI_NFS_DRIVER_ALLOWED_IN_MOUNT
    description: >
      Comma separated list of white-listed options that may be accepted in the mount_config options.
      Note a specific 'sloppy_mount:true' volume option tells the driver to ignore non-white-listed options,
      while a 'sloppy_mount:false' tells the driver to fail fast instead when receiving a non-white-listed option."
    example: "allow_root,allow_other,nfs_uid,nfs_gid,auto_cache,sloppy_mount,fsname"
    default: "auto_cache"
  - name: PERSI_NFS_DRIVER_ALLOWED_IN_SOURCE
    description: >
      Comma separated list of white-listed options that may be configured in supported in the 
      mount_config.source URL query params
    example: 'uid,gid,auto-traverse-mounts,dircache'
    default: 'uid,gid'
  - name: PERSI_NFS_DRIVER_DEFAULT_IN_MOUNT
    description: >
      Comma separated list default values for options that may be configured in the mount_config options,
      formatted as 'option:default'. If an option is not specified in the volume mount, or the option is
      not white-listed, then the specified default value will be used instead.
    example: "allow_root:false,nfs_uid:2000,nfs_gid:2000,auto_cache:true,sloppy_mount:true"
    default: "auto_cache:true"
  - name: PERSI_NFS_DRIVER_DEFAULT_IN_SOURCE
    description: >
      Comma separated list of default values for options in the source URL query params,
      formatted as 'option:default'. If an option is not specified in the volume mount, 
      or the option is not white-listed, then the specified default value will be applied.
  - name: PERSI_NFS_DRIVER_DISABLE
    description: "Disable Persi NFS driver"
    default: "false"
  - name: PERSI_NFS_DRIVER_LDAP_HOST
    description: "LDAP server host name or ip address (required for LDAP integration only)"
    default: ""
  - name: PERSI_NFS_DRIVER_LDAP_PASSWORD
    description: "LDAP service account password (required for LDAP integration only)"
    default: "-"
    secret: true
  - name: PERSI_NFS_DRIVER_LDAP_PORT
    description: "LDAP server port (required for LDAP integration only)"
    default: "389"
  - name: PERSI_NFS_DRIVER_LDAP_PROTOCOL
    description: "LDAP server protocol (required for LDAP integration only)"
    default: tcp
  - name: PERSI_NFS_DRIVER_LDAP_USER
    description: "LDAP service account user name (required for LDAP integration only)"
    default: ""
  - name: PERSI_NFS_DRIVER_LDAP_USER_FQDN
    description: "LDAP fqdn for user records we will search against when looking up user uids (required for LDAP integration only)"
    example: "cn=Users,dc=corp,dc=test,dc=com"
    default: ""
  - name: POSTGRES_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: Password for Postgres administrator account
  - name: REP_SERVER_CERT
    secret: true
    generator:
      id: rep_server_cert
      type: Certificate
      value_type: certificate
      role_name: diego-cell
      subject_names: [ 127.0.0.1 ]
    description: PEM-encoded server certificate
  - name: REP_SERVER_KEY
    secret: true
    generator:
      id: rep_server_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded server key
  - name: ROOTFS_TRUSTED_CERTS
    default: ''
    description: Certficates to add to the rootfs trust store. Multiple certs are possible by concatenating their definitions into one big block of text.
  - name: ROUTER_BALANCING_ALGORITHM
    default: 'round-robin'
    description: The algorithm used by the router to distribute requests for a route across backends. Supported values are round-robin and least-connection.
  - name: ROUTER_CLIENT_CERT_VALIDATION
    description: How to handle client certificates. Supported values are none, request, or require. See https://docs.cloudfoundry.org/adminguide/securing-traffic.html#gorouter_mutual_auth for more information.
    default: request
  - name: ROUTER_FORWARDED_CLIENT_CERT
    default: 'always_forward'
    description: How to handle the x-forwarded-client-cert (XFCC) HTTP header. Supported values are always_forward, forward, and sanitize_set. See https://docs.cloudfoundry.org/concepts/http-routing.html for more information.
  - name: ROUTER_SERVICES_SECRET
    secret: true
    generator:
      type: Password
    description: Support for route services is disabled when no value is configured. A robust passphrase is recommended.
  - name: ROUTER_SSL_CERT
    secret: true
    generator:
      id: router_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - "*.{{.DOMAIN}}"
    description: The public ssl cert for ssl termination. Will be ignored if ROUTER_TLS_PEM is set.
  - name: ROUTER_SSL_KEY
    secret: true
    generator:
      id: router_cert
      type: Certificate
      value_type: private_key
    description: The private ssl key for ssl termination. Will be ignored if ROUTER_TLS_PEM is set.
  - name: ROUTER_STATUS_PASSWORD
    secret: true
    generator:
      id: router_status_password
      type: Password
    description: Password for HTTP basic auth to the varz/status endpoint.
  - name: ROUTER_TLS_PEM
    description: Array of private keys and certificates used for TLS handshakes with downstream clients. Each element in the array is an object containing fields 'private_key' and 'cert_chain', each of which supports a PEM block. This setting overrides ROUTER_SSL_CERT and ROUTER_SSL_KEY.
    example: |
      - cert_chain: |
          -----BEGIN CERTIFICATE-----
          -----END CERTIFICATE-----
          -----BEGIN CERTIFICATE-----
          -----END CERTIFICATE-----
        private_key: |
          -----BEGIN RSA PRIVATE KEY-----
          -----END RSA PRIVATE KEY-----
    secret: true
  - name: SCF_LOG_HOST
    internal: true
    description: The log destination to talk to. This has to point to a syslog server.
  - name: SCF_LOG_PORT
    internal: true
    description: The port used by rsyslog to talk to the log destination. It defaults to 514, the standard port of syslog.
    default: 514
  - name: SCF_LOG_PROTOCOL
    internal: true
    default: tcp
    description: The protocol used by rsyslog to talk to the log destination. The allowed values are tcp, and udp. The default is tcp.
    required: true
  - name: STAGING_TIMEOUT
    default: 900
    description: Timeout for staging an app, in seconds.
    required: true
  - name: STAGING_UPLOAD_PASSWORD
    secret: true
    generator:
      type: Password
    description: The password for access to the uploader of staged droplets.
  - name: SUPPORT_ADDRESS
    default: support@example.com
    description: Support contact information for the cluster
    required: true
  - name: SUSE_STACK
    description: >
      This controls which SUSE stack is built into SCF.
      Depending on the build, this can be an openSUSE or SLE stack.
      Cannot be set by the user. 
    default: opensuse42
    type: environment
  - name: SUSE_STACK_DESCRIPTION
    description: >
      During build this is set to an appropriate description for the SUSE stack built into SCF.
      Cannot be set by the user.
    default: openSUSE-based filesystem
    type: environment
  - name: SUSE_STACK_DIRNAME
    description: >
      During build this is set to the directory that contains the SUSE stack built into SCF.
      Cannot be set by the user.
    default: opensuse42
    type: environment
  - name: SYSLOG_ADAPT_CERT
    secret: true
    generator:
      id: syslog_adapt_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - syslog_adapter
    description: PEM-encoded certificate
  - name: SYSLOG_ADAPT_KEY
    secret: true
    generator:
      id: syslog_adapt_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key.
  - name: SYSLOG_RLP_CERT
    secret: true
    generator:
      id: syslog_rlp_cert
      type: Certificate
      value_type: certificate
      subject_names:
      - syslog_rlp
    description: PEM-encoded certificate
  - name: SYSLOG_RLP_KEY
    secret: true
    generator:
      id: syslog_rlp_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key.
  - name: SYSLOG_SCHED_CERT
    secret: true
    generator:
      id: syslog_sched_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
  - name: SYSLOG_SCHED_KEY
    secret: true
    generator:
      id: syslog_sched_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key.
  - name: TCP_DOMAIN
    example: tcp.my-scf-cluster.com
    required: true
    description: TCP routing domain of the SCF cluster; only used for testing;
  - name: TPS_CC_CLIENT_CRT
    secret: true
    generator:
      id: tps_cc_client_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded client certificate for internal communication between the cloud controller and TPS.
  - name: TPS_CC_CLIENT_KEY
    secret: true
    generator:
      id: tps_cc_client_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded client key for internal communication between the cloud controller and TPS.
  - name: TRAFFICCONTROLLER_CERT
    secret: true
    generator:
      id: trafficcontroller_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate for communication with the traffic controller of the log infra structure.
  - name: TRAFFICCONTROLLER_KEY
    secret: true
    generator:
      id: trafficcontroller_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded key for communication with the traffic controller of the log infra structure.
  - name: TRUSTED_CERTS
    description: Concatenation of trusted CA certificates to be made available on the cell.
  - name: UAA_ADMIN_CLIENT_SECRET
    secret: true
    description: The password of the admin client - a client named admin with uaa.admin as an authority.
    required: true
  - name: UAA_CA_CERT
    description: The CA certificate for UAA
    secret: true
  - name: UAA_CC_CLIENT_SECRET
    secret: true
    generator:
      type: Password
    description: The password for UAA access by the Cloud Controller.
  - name: UAA_CLIENTS_CC_ROUTING_SECRET
    secret: true
    generator:
      type: Password
    description: The password for UAA access by the Routing API.
  - name: UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET
    secret: true
    generator:
      type: Password
    description: Used for third party service dashboard SSO.
  - name: UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET
    secret: true
    generator:
      type: Password
    description: Used for fetching service key values from CredHub.
  - name: UAA_CLIENTS_CF_USB_SECRET
    secret: true
    generator:
      type: Password
    description: The password for UAA access by the Universal Service Broker.
  - name: UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET
    secret: true
    generator:
      type: Password
    description: The password for UAA access by the Cloud Controller for fetching usernames.
  - name: UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET
    secret: true
    generator:
      type: Password
    description: The password for UAA access by the SSH proxy.
  - name: UAA_CLIENTS_DOPPLER_SECRET
    secret: true
    generator:
      type: Password
    description: The password for UAA access by doppler.
  - name: UAA_CLIENTS_GOROUTER_SECRET
    secret: true
    generator:
      type: Password
    description: The password for UAA access by the gorouter.
  - name: UAA_CLIENTS_LOGIN_SECRET
    secret: true
    generator:
      type: Password
    description: The password for UAA access by the login client.
  - name: UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET
    secret: true
    generator:
      type: Password
    description: The password for UAA access by the task creating the cluster administrator user
  - name: UAA_CLIENTS_TCP_EMITTER_SECRET
    secret: true
    generator:
      type: Password
    description: The password for UAA access by the TCP emitter.
  - name: UAA_CLIENTS_TCP_ROUTER_SECRET
    secret: true
    generator:
      type: Password
    description: The password for UAA access by the TCP router.
  - name: UAA_HOST
    description: The host name of the UAA server (root zone)
    required: true
  - name: UAA_PORT
    default: 2793
    description: The tcp port the UAA server (root zone) listens on for requests.
  - name: USE_DIEGO_PRIVILEGED_CONTAINERS
    default: false
    description: Whether or not to use privileged containers for buildpack based applications. Containers with a docker-image-based rootfs will continue to always be unprivileged.
    required: true
  - name: USE_STAGER_PRIVILEGED_CONTAINERS
    default: false
    description: Whether or not to use privileged containers for staging tasks.
    required: true
  templates:
    az: '"((KUBE_AZ))"'
    id: ((HOSTNAME))
    index: ((KUBE_COMPONENT_INDEX))((^KUBE_COMPONENT_INDEX))0((/KUBE_COMPONENT_INDEX))
    ip: '"((IP_ADDRESS))"'
    networks.default.dns_record_name: '"((DNS_RECORD_NAME))"'
    networks.default.ip: '"((IP_ADDRESS))"'
    # We include INTERNAL_CA_KEY here so validation doesn't complain that it's not being used.
    # we can't make it internal, as that exposes it everywhere. The acceptance tests are not used at runtime so it's safe.
    properties.acceptance_tests.admin_password: '"((CLUSTER_ADMIN_PASSWORD))"((#INTERNAL_CA_KEY))((/INTERNAL_CA_KEY))'
    properties.acceptance_tests.api: '"api.((DOMAIN))"'
    properties.acceptance_tests.apps_domain: '"((DOMAIN))"'
    properties.acceptance_tests_brain.domain: '"((DOMAIN))"'
    properties.acceptance_tests_brain.namespace: '"((KUBERNETES_NAMESPACE))"'
    properties.acceptance_tests_brain.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.acceptance_tests_brain.storage_class: '"((KUBERNETES_STORAGE_CLASS_PERSISTENT))"'
    properties.acceptance_tests_brain.tcp_domain: '"((TCP_DOMAIN))"'
    properties.app_domains: '["((DOMAIN))"]'
    properties.app_ssh.host_key_fingerprint: '"((APP_SSH_KEY_FINGERPRINT))"'
    properties.autoscaler.api_server.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.metrics_collector.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.metrics_collector.client_cert: '"((AUTOSCALER_ASMETRICS_CLIENT_CERT))"'
    properties.autoscaler.api_server.metrics_collector.client_key: '"((AUTOSCALER_ASMETRICS_CLIENT_KEY))"'
    properties.autoscaler.api_server.metrics_collector.host: '"autoscaler-metrics.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.api_server.public_ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.public_server_cert: '"((AUTOSCALER_ASAPI_PUBLIC_SERVER_CERT))"'
    properties.autoscaler.api_server.public_server_key: '"((AUTOSCALER_ASAPI_PUBLIC_SERVER_KEY))"'
    properties.autoscaler.api_server.scaling_engine.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.scaling_engine.client_cert: '"((AUTOSCALER_ASACTORS_CLIENT_CERT))"'
    properties.autoscaler.api_server.scaling_engine.client_key: '"((AUTOSCALER_ASACTORS_CLIENT_KEY))"'
    properties.autoscaler.api_server.scaling_engine.host: '"autoscaler-actors.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.api_server.scheduler.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.scheduler.client_cert: '"((AUTOSCALER_ASACTORS_CLIENT_CERT))"'
    properties.autoscaler.api_server.scheduler.client_key: '"((AUTOSCALER_ASACTORS_CLIENT_KEY))"'
    properties.autoscaler.api_server.scheduler.host: '"autoscaler-actors.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.api_server.server_cert: '"((AUTOSCALER_ASAPI_SERVER_CERT))"'
    properties.autoscaler.api_server.server_key: '"((AUTOSCALER_ASAPI_SERVER_KEY))"'
    properties.autoscaler.api_server.service_broker.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.service_broker.client_cert: '"((AUTOSCALER_ASAPI_CLIENT_CERT))"'
    properties.autoscaler.api_server.service_broker.client_key: '"((AUTOSCALER_ASAPI_CLIENT_KEY))"'
    properties.autoscaler.api_server.service_broker.host: '"autoscaler-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.appmetrics_db.address: '"autoscaler-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.appmetrics_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_ROLE_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.binding_db.address: '"autoscaler-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.binding_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_ROLE_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.cf.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.autoscaler.cf.secret: '"((AUTOSCALER_UAA_CLIENT_SECRET))"'
    properties.autoscaler.eventgenerator.logging.level: '"((LOG_LEVEL))"'
    properties.autoscaler.eventgenerator.metricscollector.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.eventgenerator.metricscollector.client_cert: '"((AUTOSCALER_ASMETRICS_CLIENT_CERT))"'
    properties.autoscaler.eventgenerator.metricscollector.client_key: '"((AUTOSCALER_ASMETRICS_CLIENT_KEY))"'
    properties.autoscaler.eventgenerator.metricscollector.host: '"autoscaler-metrics.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.eventgenerator.scaling_engine.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.eventgenerator.scaling_engine.client_cert: '"((AUTOSCALER_ASACTORS_CLIENT_CERT))"'
    properties.autoscaler.eventgenerator.scaling_engine.client_key: '"((AUTOSCALER_ASACTORS_CLIENT_KEY))"'
    properties.autoscaler.eventgenerator.scaling_engine.host: '"autoscaler-actors.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.instancemetrics_db.address: '"autoscaler-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.instancemetrics_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_ROLE_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.lock_db.address: '"autoscaler-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.lock_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_ROLE_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.metricscollector.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.metricscollector.logging.level: '"((LOG_LEVEL))"'
    properties.autoscaler.metricscollector.server_cert: '"((AUTOSCALER_ASMETRICS_SERVER_CERT))"'
    properties.autoscaler.metricscollector.server_key: '"((AUTOSCALER_ASMETRICS_SERVER_KEY))"'
    properties.autoscaler.policy_db.address: '"autoscaler-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.policy_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_ROLE_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.pruner.logging.level: '"((LOG_LEVEL))"'
    properties.autoscaler.scalingengine.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.scalingengine.logging.level: '"((LOG_LEVEL))"'
    properties.autoscaler.scalingengine.server_cert: '"((AUTOSCALER_ASACTORS_SERVER_CERT))"'
    properties.autoscaler.scalingengine.server_key: '"((AUTOSCALER_ASACTORS_SERVER_KEY))"'
    properties.autoscaler.scalingengine_db.address: '"autoscaler-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.scalingengine_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_ROLE_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.scheduler.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.scheduler.scaling_engine.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.scheduler.scaling_engine.client_cert: '"((AUTOSCALER_ASACTORS_CLIENT_CERT))"'
    properties.autoscaler.scheduler.scaling_engine.client_key: '"((AUTOSCALER_ASACTORS_CLIENT_KEY))"'
    properties.autoscaler.scheduler.scaling_engine.host: '"autoscaler-actors.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.scheduler.server_cert: '"((AUTOSCALER_ASACTORS_SERVER_CERT))"'
    properties.autoscaler.scheduler.server_key: '"((AUTOSCALER_ASACTORS_SERVER_KEY))"'
    properties.autoscaler.scheduler_db.address: '"autoscaler-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.scheduler_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_ROLE_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.service_broker.api_server.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.service_broker.api_server.client_cert: '"((AUTOSCALER_ASAPI_CLIENT_CERT))"'
    properties.autoscaler.service_broker.api_server.client_key: '"((AUTOSCALER_ASAPI_CLIENT_KEY))"'
    properties.autoscaler.service_broker.api_server.host: '"autoscaler-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.service_broker.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.service_broker.dashboard_redirect_uri: '"https://scalerui.((DOMAIN))"'
    properties.autoscaler.service_broker.password: '"((AUTOSCALER_SERVICE_BROKER_PASSWORD))"'
    properties.autoscaler.service_broker.public_ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.service_broker.public_server_cert: '"((AUTOSCALER_ASAPI_PUBLIC_SERVER_CERT))"'
    properties.autoscaler.service_broker.public_server_key: '"((AUTOSCALER_ASAPI_PUBLIC_SERVER_KEY))"'
    properties.autoscaler.service_broker.server_cert: '"((AUTOSCALER_ASAPI_SERVER_CERT))"'
    properties.autoscaler.service_broker.server_key: '"((AUTOSCALER_ASAPI_SERVER_KEY))"'
    properties.blobstore.admin_users:  '[{"username": "blobstore_user", "password": "((BLOBSTORE_PASSWORD))"}]'
    properties.blobstore.internal_access_rules: '[((BLOBSTORE_ACCESS_RULES))]'
    properties.blobstore.max_upload_size: ((BLOBSTORE_MAX_UPLOAD_SIZE))m
    properties.blobstore.secure_link.secret: '"((BLOBSTORE_SECURE_LINK))"'
    properties.blobstore.tls.cert: '"((BLOBSTORE_TLS_CERT))"'
    properties.blobstore.tls.private_key: '"((BLOBSTORE_TLS_KEY))"'
    properties.build: '"((CLUSTER_BUILD))"'
    properties.capi.cc_uploader.cc.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.cc_uploader.cc.client_cert: '"((CC_SERVER_CRT))"'
    properties.capi.cc_uploader.cc.client_key: '"((CC_SERVER_KEY))"'
    properties.capi.cc_uploader.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.capi.cc_uploader.mutual_tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.cc_uploader.mutual_tls.server_cert: '"((CC_UPLOADER_CRT))"'
    properties.capi.cc_uploader.mutual_tls.server_key: '"((CC_UPLOADER_KEY))"'
    properties.capi.tps.bbs.api_location: diego-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.capi.tps.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.tps.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.capi.tps.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.capi.tps.cc.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.tps.cc.client_cert: '"((TPS_CC_CLIENT_CRT))"'
    properties.capi.tps.cc.client_key: '"((TPS_CC_CLIENT_KEY))"'
    properties.capi.tps.cc.internal_service_hostname: api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.capi.tps.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.capi.tps.traffic_controller_url: ws://loggregator.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8081
    properties.capi.tps.watcher.locket.api_location: '"diego-locket.((KUBERNETES_NAMESPACE)):8891"'
    properties.cc.allow_app_ssh_access: ((ALLOW_APP_SSH_ACCESS))
    properties.cc.allowed_cors_domains: ((ALLOWED_CORS_DOMAINS))
    properties.cc.app_bits_max_body_size: ((NGINX_MAX_REQUEST_BODY_SIZE))M
    properties.cc.app_bits_upload_grace_period_in_seconds: ((APP_TOKEN_UPLOAD_GRACE_PERIOD))
    properties.cc.buildpacks.cdn.uri: '"((CDN_URI))"'
    properties.cc.buildpacks.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.buildpacks.webdav_config.private_endpoint: https://blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443
    properties.cc.buildpacks.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.bulk_api_password: '"((BULK_API_PASSWORD))"'
    properties.cc.database_encryption.current_key_label: '"((CC_DB_CURRENT_KEY_LABEL))"'
    properties.cc.database_encryption.keys: ((CC_DB_ENCRYPTION_KEYS))
    properties.cc.db_encryption_key: '"((DB_ENCRYPTION_KEY))"'
    properties.cc.default_app_disk_in_mb: '"((DEFAULT_APP_DISK_IN_MB))"'
    properties.cc.default_app_memory: '"((DEFAULT_APP_MEMORY))"'
    properties.cc.default_app_ssh_access: '"((DEFAULT_APP_SSH_ACCESS))"'
    properties.cc.default_stack: '"((DEFAULT_STACK))"'
    properties.cc.diego.bbs.url: https://diego-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.cc.diego.cc_uploader_https_url: https://cc-uploader.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):9091
    properties.cc.diego.docker_staging_stack: '"((DEFAULT_STACK))"'
    properties.cc.diego.file_server_url: http://diego-access.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8080
    properties.cc.diego.insecure_docker_registry_list: '[((INSECURE_DOCKER_REGISTRIES))]'
    properties.cc.diego.lifecycle_bundles: '{"buildpack/((SUSE_STACK))":"buildpack_app_lifecycle/buildpack_app_lifecycle.tgz","buildpack/cflinuxfs2":"buildpack_app_lifecycle/buildpack_app_lifecycle.tgz","docker":"docker_app_lifecycle/docker_app_lifecycle.tgz"}'
    properties.cc.diego.use_privileged_containers_for_running: ((USE_DIEGO_PRIVILEGED_CONTAINERS))
    properties.cc.diego.use_privileged_containers_for_staging: ((USE_STAGER_PRIVILEGED_CONTAINERS))
    properties.cc.disable_custom_buildpacks: ((DISABLE_CUSTOM_BUILDPACKS))
    properties.cc.droplets.max_staged_droplets_stored: ((DROPLET_MAX_STAGED_STORED))
    properties.cc.droplets.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.droplets.webdav_config.private_endpoint: https://blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443
    properties.cc.droplets.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.internal_api_password: '"((INTERNAL_API_PASSWORD))"'
    properties.cc.internal_service_hostname: api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.cc.logging_level: '"((LOG_LEVEL))"'
    properties.cc.loggregator.internal_url: http://loggregator.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8081
    properties.cc.maximum_app_disk_in_mb: ((MAX_APP_DISK_IN_MB))
    properties.cc.maximum_health_check_timeout: ((MAX_HEALTH_CHECK_TIMEOUT))
    properties.cc.mutual_tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.cc.mutual_tls.private_key: '"((CC_SERVER_KEY))"'
    properties.cc.mutual_tls.public_cert: '"((CC_SERVER_CRT))"'
    properties.cc.nginx_error_log_level: '"((NGINX_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.cc.packages.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.packages.webdav_config.private_endpoint: https://blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443
    properties.cc.packages.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.resource_pool.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.resource_pool.webdav_config.private_endpoint: https://blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443
    properties.cc.resource_pool.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.security_event_logging.enabled: '"((ENABLE_SECURITY_EVENT_LOGGING))"'
    properties.cc.stacks: '[{"name": "cflinuxfs2", "description": "Cloud Foundry Linux-based filesystem"},{"name": "((SUSE_STACK))", "description": "((SUSE_STACK_DESCRIPTION))"}]'
    properties.cc.staging_timeout_in_seconds: ((STAGING_TIMEOUT))
    properties.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.cc.uaa.internal_url: ((KUBERNETES_NAMESPACE)).((UAA_HOST))
    properties.ccdb.address: mysql-proxy.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.ccdb.roles: '[{"name": "ccadmin", "password": "((MYSQL_CCDB_ROLE_PASSWORD))", "tag": "admin"}]'
    properties.cf-sle12.trusted_certs: '"((ROOTFS_TRUSTED_CERTS))((#ROOTFS_TRUSTED_CERTS))\n((/ROOTFS_TRUSTED_CERTS))((INTERNAL_CA_CERT))"'
    properties.cf-usb.broker.external_url: '"https://cf-usb.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):24054"'
    properties.cf-usb.broker.password: '"((CF_USB_PASSWORD))"'
    properties.cf-usb.broker.server_cert: '"((CF_USB_BROKER_SERVER_CERT))"'
    properties.cf-usb.broker.server_key: '"((CF_USB_BROKER_SERVER_KEY))"'
    properties.cf-usb.management.uaa.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.cf-usb.mysql_address: 'mysql-proxy.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))'
    properties.cf-usb.mysql_password: "((MYSQL_CF_USB_PASSWORD))"
    properties.cf.admin_password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.cf.api_url: https://api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):9023
    properties.cf.insecure_api_url: http://api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):9022 # For post-deployment-setup, because cf cli has no client certs
    properties.cf_mysql.host: '"mysql-proxy.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.cf_mysql.mysql.advertise_host: mysql-((KUBE_COMPONENT_INDEX)).mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.cf_mysql.mysql.seeded_databases: '[{"name":"ccdb","username":"ccadmin","password":"((MYSQL_CCDB_ROLE_PASSWORD))"},{"name":"diego","username":"diego","password":"((MYSQL_DIEGO_PASSWORD))"},{"name":"routing-api","username":"routing-api","password":"((MYSQL_ROUTING_API_PASSWORD))"},{"name":"usb","username":"usb","password":"((MYSQL_CF_USB_PASSWORD))"},{"name":"nfsvolume","username":"nfsvolume","password":"((MYSQL_PERSI_NFS_PASSWORD))"},{"name":"diego_locket","username":"diego_locket","password":"((MYSQL_DIEGO_LOCKET_PASSWORD))"}]'
    properties.cfdot.bbs.hostname: '"diego-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.cfdot.locket.hostname: '"diego-locket.((KUBERNETES_NAMESPACE))"'
    properties.cflinuxfs2-rootfs.trusted_certs: '"((ROOTFS_TRUSTED_CERTS))((#ROOTFS_TRUSTED_CERTS))\n((/ROOTFS_TRUSTED_CERTS))((INTERNAL_CA_CERT))"'
    properties.consul.agent.domain: ((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.consul.agent.servers.lan: ((KUBE_CONSUL_CLUSTER_IPS))
    properties.consul.agent_cert: ((CONSUL_CLIENT_CERT))
    properties.consul.agent_key: ((CONSUL_CLIENT_KEY))
    properties.consul.ca_cert: ((INTERNAL_CA_CERT))
    properties.containers.trusted_ca_certificates: '((#TRUSTED_CERTS))[((TRUSTED_CERTS))]((/TRUSTED_CERTS))'
    properties.copilot.client_ca_file: ((INTERNAL_CA_CERT))
    # CLUSTER_DESCRIPTION is not wrapped in quotes because it has quotes in the dev env file.
    properties.description: ((CLUSTER_DESCRIPTION))
    properties.diego.auctioneer.bbs.api_location: diego-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.diego.auctioneer.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.auctioneer.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.auctioneer.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.locket.api_location: '"diego-locket.((KUBERNETES_NAMESPACE)):8891"'
    properties.diego.auctioneer.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.auctioneer.rep.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.rep.client_cert: '"((AUCTIONEER_REP_CERT))"'
    properties.diego.auctioneer.rep.client_key: '"((AUCTIONEER_REP_KEY))"'
    properties.diego.auctioneer.server_cert: '"((AUCTIONEER_SERVER_CERT))"'
    properties.diego.auctioneer.server_key: '"((AUCTIONEER_SERVER_KEY))"'
    properties.diego.bbs.auctioneer.api_location: diego-brain.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):9016
    properties.diego.bbs.auctioneer.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.auctioneer.client_cert: '"((BBS_AUCTIONEER_CERT))"'
    properties.diego.bbs.auctioneer.client_key: '"((BBS_AUCTIONEER_KEY))"'
    properties.diego.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.encryption_keys: '[{"label": "active", "passphrase": "((BBS_ACTIVE_KEY_PASSPHRASE))"}]'
    properties.diego.bbs.locket.api_location: '"diego-locket.((KUBERNETES_NAMESPACE)):8891"'
    properties.diego.bbs.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.bbs.rep.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.rep.client_cert: '"((BBS_REP_CERT))"'
    properties.diego.bbs.rep.client_key: '"((BBS_REP_KEY))"'
    properties.diego.bbs.server_cert: '"((BBS_SERVER_CRT))"'
    properties.diego.bbs.server_key: '"((BBS_SERVER_KEY))"'
    properties.diego.bbs.sql.ca_cert: ((INTERNAL_CA_CERT))
    properties.diego.bbs.sql.db_host: mysql-proxy.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.diego.bbs.sql.db_password: ((MYSQL_DIEGO_PASSWORD))
    properties.diego.executor.disk_capacity_mb: ((DIEGO_CELL_DISK_CAPACITY_MB))
    properties.diego.executor.memory_capacity_mb: ((DIEGO_CELL_MEMORY_CAPACITY_MB))
    properties.diego.file_server.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.locket.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.locket.sql.db_host: '"mysql-proxy.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.diego.locket.sql.db_password: '"((MYSQL_DIEGO_LOCKET_PASSWORD))"'
    properties.diego.rep.bbs.api_location: diego-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.diego.rep.cell_id: ((HOSTNAME))
    properties.diego.rep.locket.api_location: diego-locket.((KUBERNETES_NAMESPACE)):8891
    properties.diego.rep.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.rep.preloaded_rootfses: '["((SUSE_STACK)):/var/vcap/packages/((SUSE_STACK_DIRNAME))/rootfs.tar","cflinuxfs2:/var/vcap/packages/cflinuxfs2/rootfs.tar"]'
    properties.diego.rep.zone: '"((KUBE_AZ))"'
    properties.diego.route_emitter.bbs.api_location: diego-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.diego.route_emitter.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.route_emitter.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.route_emitter.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.route_emitter.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.route_emitter.nats.machines: ((KUBE_NATS_CLUSTER_IPS))((#KUBE_SIZING_NATS_COUNT))((/KUBE_SIZING_NATS_COUNT))
    properties.diego.route_emitter.nats.password: '"((NATS_PASSWORD))"'
    properties.diego.ssh_proxy.bbs.api_location: diego-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.diego.ssh_proxy.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.ssh_proxy.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.ssh_proxy.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.ssh_proxy.cc.internal_service_hostname: api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.diego.ssh_proxy.host_key: '"((APP_SSH_KEY))"'
    properties.diego.ssh_proxy.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.ssh_proxy.uaa.ca_cert: ((UAA_CA_CERT))
    properties.diego.ssh_proxy.uaa.port: ((UAA_PORT))
    properties.diego.ssh_proxy.uaa.url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST))
    properties.diego.ssh_proxy.uaa_secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.domain: '"((DOMAIN))"'
    properties.doppler.addr: '"doppler-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.fissile.monit.password: '"((MONIT_PASSWORD))"'
    properties.garden.apparmor_profile: '"((GARDEN_APPARMOR_PROFILE))"' # Quoting needed to pass through empty string
    properties.garden.dns_servers: '[((GARDEN_LINUX_DNS_SERVER))]'
    properties.garden.docker_registry_endpoint: ((GARDEN_DOCKER_REGISTRY))((^GARDEN_DOCKER_REGISTRY))null((/GARDEN_DOCKER_REGISTRY))
    properties.garden.http_proxy: '"((HTTP_PROXY))"'
    properties.garden.https_proxy: '"((HTTPS_PROXY))"'
    properties.garden.image_plugin: "((^GARDEN_DISABLE_BTRFS))/var/vcap/packages/groot-btrfs/bin/groot-btrfs((/GARDEN_DISABLE_BTRFS))"
    properties.garden.image_plugin_extra_args: ((^GARDEN_DISABLE_BTRFS))["--config", "/var/vcap/jobs/groot-btrfs/config/groot-btrfs.yaml"]((/GARDEN_DISABLE_BTRFS))
    properties.garden.insecure_docker_registry_list: '[((INSECURE_DOCKER_REGISTRIES))]'
    properties.garden.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.garden.network_mtu: ((DIEGO_CELL_NETWORK_MTU))
    properties.garden.network_pool: '"((DIEGO_CELL_SUBNET))"'
    properties.garden.no_proxy: '"((NO_PROXY))"'
    properties.garden.persistent_image_list: '["/var/vcap/packages/((SUSE_STACK_DIRNAME))/rootfs.tar", "/var/vcap/packages/cflinuxfs2/rootfs.tar"]'
    properties.garden.privileged_image_plugin: "((^GARDEN_DISABLE_BTRFS))/var/vcap/packages/groot-btrfs/bin/groot-btrfs((/GARDEN_DISABLE_BTRFS))"
    properties.garden.privileged_image_plugin_extra_args: ((^GARDEN_DISABLE_BTRFS))["--config", "/var/vcap/jobs/groot-btrfs/config/groot-btrfs-privileged.yaml"]((/GARDEN_DISABLE_BTRFS))
    properties.grootfs.insecure_docker_registry_list: '[((INSECURE_DOCKER_REGISTRIES))]'
    # How to reach the capi.cc_uploader
    properties.internal_hostname: cc-uploader.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.locks.locket.hostname: diego-locket.((KUBERNETES_NAMESPACE))
    properties.loggregator.ca_cert: ((INTERNAL_CA_CERT))
    properties.loggregator.cert: ((LOGGREGATOR_CLIENT_CERT))
    properties.loggregator.key: ((LOGGREGATOR_CLIENT_KEY))
    properties.loggregator.tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.loggregator.tls.cc_trafficcontroller.cert: ((TRAFFICCONTROLLER_CERT))
    properties.loggregator.tls.cc_trafficcontroller.key: ((TRAFFICCONTROLLER_KEY))
    properties.loggregator.tls.doppler.cert: '"((DOPPLER_CERT))"'
    properties.loggregator.tls.doppler.key: '"((DOPPLER_KEY))"'
    properties.loggregator.tls.metron.cert: '"((METRON_CERT))"'
    properties.loggregator.tls.metron.key: '"((METRON_KEY))"'
    properties.loggregator.tls.reverse_log_proxy.cert: '"((SYSLOG_RLP_CERT))"'
    properties.loggregator.tls.reverse_log_proxy.key: '"((SYSLOG_RLP_KEY))"'
    properties.loggregator.tls.statsd_injector.cert: '"((CC_SERVER_CRT))"'
    properties.loggregator.tls.statsd_injector.key: '"((CC_SERVER_KEY))"'
    properties.loggregator.tls.trafficcontroller.cert: '"((TRAFFICCONTROLLER_CERT))"'
    properties.loggregator.tls.trafficcontroller.key: '"((TRAFFICCONTROLLER_KEY))"'
    properties.loggregator.uaa.client_secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
    properties.login.url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.metron_agent.zone: '"((KUBE_AZ))"'
    # CLUSTER_NAME is not wrapped in quotes because it has quotes in the dev env file.
    properties.name: ((CLUSTER_NAME))
    properties.nats.machines: ((KUBE_NATS_CLUSTER_IPS))((#KUBE_SIZING_NATS_COUNT))((/KUBE_SIZING_NATS_COUNT))
    properties.nats.password: '"((NATS_PASSWORD))"'
    properties.nfsbroker.allowed_options: '"((PERSI_NFS_ALLOWED_OPTIONS))"'
    properties.nfsbroker.db_hostname: 'mysql-proxy.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))'
    properties.nfsbroker.db_password: '"((MYSQL_PERSI_NFS_PASSWORD))"'
    properties.nfsbroker.default_options: '"((PERSI_NFS_DEFAULT_OPTIONS))"'
    properties.nfsbroker.password: '"((PERSI_NFS_BROKER_PASSWORD))"'
    properties.nfsbroker.url: 'http://nfs-broker.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8999'
    properties.nfsv3driver.allowed-in-mount: '"((PERSI_NFS_DRIVER_ALLOWED_IN_MOUNT))"'
    properties.nfsv3driver.allowed-in-source: '"((PERSI_NFS_DRIVER_ALLOWED_IN_SOURCE))"'
    properties.nfsv3driver.default-in-mount: '"((PERSI_NFS_DRIVER_DEFAULT_IN_MOUNT))"'
    properties.nfsv3driver.default-in-source: '"((PERSI_NFS_DRIVER_DEFAULT_IN_SOURCE))"'
    properties.nfsv3driver.disable: '((PERSI_NFS_DRIVER_DISABLE))'
    properties.nfsv3driver.ldap_host: '"((PERSI_NFS_DRIVER_LDAP_HOST))"'
    properties.nfsv3driver.ldap_port: '"((PERSI_NFS_DRIVER_LDAP_PORT))"'
    properties.nfsv3driver.ldap_proto: '"((PERSI_NFS_DRIVER_LDAP_PROTOCOL))"'
    properties.nfsv3driver.ldap_svc_password: '"((PERSI_NFS_DRIVER_LDAP_PASSWORD))"'
    properties.nfsv3driver.ldap_svc_user: '"((PERSI_NFS_DRIVER_LDAP_USER))"'
    properties.nfsv3driver.ldap_user_fqdn: '"((PERSI_NFS_DRIVER_LDAP_USER_FQDN))"'
    properties.nfsv3driver.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.opensuse42-rootfs.trusted_certs: '"((ROOTFS_TRUSTED_CERTS))((#ROOTFS_TRUSTED_CERTS))\n((/ROOTFS_TRUSTED_CERTS))((INTERNAL_CA_CERT))"'
    properties.router.balancing_algorithm: '"((ROUTER_BALANCING_ALGORITHM))"'
    properties.router.client_cert_validation: '"((ROUTER_CLIENT_CERT_VALIDATION))"'
    properties.router.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
    properties.router.force_forwarded_proto_https: ((FORCE_FORWARDED_PROTO_AS_HTTPS))
    properties.router.forwarded_client_cert: "((ROUTER_FORWARDED_CLIENT_CERT))"
    properties.router.logging_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.router.route_services_secret: '"((ROUTER_SERVICES_SECRET))"'
    properties.router.status.password: '"((ROUTER_STATUS_PASSWORD))"'
    properties.router.tls_pem: '((#ROUTER_TLS_PEM))((ROUTER_TLS_PEM))((/ROUTER_TLS_PEM))((^ROUTER_TLS_PEM))[{cert_chain: "((ROUTER_SSL_CERT))", private_key: "((ROUTER_SSL_KEY))"}]((/ROUTER_TLS_PEM))'
    properties.routing_api.locket.api_location: '"diego-locket.((KUBERNETES_NAMESPACE)):8891"'
    properties.routing_api.locket.api_location: diego-locket.((KUBERNETES_NAMESPACE)):8891
    properties.routing_api.locket.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.routing_api.locket.client_cert: '"((DIEGO_CLIENT_CERT))"'
    properties.routing_api.locket.client_key: '"((DIEGO_CLIENT_KEY))"'
    properties.routing_api.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.routing_api.port: 3000((#KUBERNETES_NAMESPACE))((/KUBERNETES_NAMESPACE))
    properties.routing_api.router_groups: '[{"name":"default-tcp", "type":"tcp", "reservable_ports":"((KUBE_SIZING_TCP_ROUTER_PORTS_TCP_ROUTE_MIN))-((KUBE_SIZING_TCP_ROUTER_PORTS_TCP_ROUTE_MAX))"}]'
    properties.routing_api.sqldb.host: "mysql-proxy.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"
    properties.routing_api.sqldb.password: "((MYSQL_ROUTING_API_PASSWORD))"
    properties.routing_api.system_domain: '"((DOMAIN))"'
    properties.routing_api.uri: '"http://routing-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.routing_api.url: '"http://routing-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.scalablesyslog.adapter.tls.ca: '"((INTERNAL_CA_CERT))"'
    properties.scalablesyslog.adapter.tls.cert: '"((SYSLOG_ADAPT_CERT))"'
    properties.scalablesyslog.adapter.tls.key: '"((SYSLOG_ADAPT_KEY))"'
    properties.scalablesyslog.adapter_rlp.tls.ca: '"((INTERNAL_CA_CERT))"'
    properties.scalablesyslog.adapter_rlp.tls.cert: '"((SYSLOG_ADAPT_CERT))"'
    properties.scalablesyslog.adapter_rlp.tls.key: '"((SYSLOG_ADAPT_KEY))"'
    properties.scalablesyslog.scheduler.tls.api.ca: '"((INTERNAL_CA_CERT))"'
    properties.scalablesyslog.scheduler.tls.api.cert: '"((SYSLOG_SCHED_CERT))"'
    properties.scalablesyslog.scheduler.tls.api.key: '"((SYSLOG_SCHED_KEY))"'
    properties.scalablesyslog.scheduler.tls.client.ca: '"((INTERNAL_CA_CERT))"'
    properties.scalablesyslog.scheduler.tls.client.cert: '"((SYSLOG_SCHED_CERT))"'
    properties.scalablesyslog.scheduler.tls.client.key: '"((SYSLOG_SCHED_KEY))"'
    properties.scf.internal-ca-cert: '"((INTERNAL_CA_CERT))"'
    properties.scf.uaa.internal-url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.scf.uaa.root-zone.url: https://((UAA_HOST)):((UAA_PORT))
    properties.scf_set_proxy.running_http_proxy: '"((HTTP_PROXY))"'
    properties.scf_set_proxy.running_https_proxy: '"((HTTPS_PROXY))"'
    properties.scf_set_proxy.running_no_proxy: '"((NO_PROXY))"'
    properties.scf_set_proxy.staging_http_proxy: '"((HTTP_PROXY))"'
    properties.scf_set_proxy.staging_https_proxy: '"((HTTPS_PROXY))"'
    properties.scf_set_proxy.staging_no_proxy: '"((NO_PROXY))"'
    properties.smoke_tests.api: '"api.((DOMAIN))"'
    properties.smoke_tests.apps_domain: '["((DOMAIN))"]'
    properties.smoke_tests.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.support_address: '"((SUPPORT_ADDRESS))"'
    properties.system_domain: '"((DOMAIN))"'
    properties.tcp_emitter.oauth_secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.tcp_router.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.tcp_router.oauth_secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.tls.cert: '"((DIEGO_CLIENT_CERT))"'
    properties.tls.key: '"((DIEGO_CLIENT_KEY))"'
    properties.uaa.admin.client_secret: '"((UAA_ADMIN_CLIENT_SECRET))"'
    properties.uaa.ca_cert: '"((UAA_CA_CERT))((^UAA_CA_CERT))((INTERNAL_CA_CERT))((/UAA_CA_CERT))"'
    properties.uaa.client_secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.uaa.clients.cc-service-dashboards.secret: '"((UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET))"'
    properties.uaa.clients.cc_routing.secret: '"((UAA_CLIENTS_CC_ROUTING_SECRET))"'
    properties.uaa.clients.cc_service_key_client.secret: '"((UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET))"'
    properties.uaa.clients.cf-usb.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.uaa.clients.cf.redirect-uri: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))/login
    properties.uaa.clients.cloud_controller.secret: ((UAA_CC_CLIENT_SECRET))
    properties.uaa.clients.cloud_controller_username_lookup.secret: '"((UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET))"'
    properties.uaa.clients.doppler.redirect-uri: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.uaa.clients.doppler.secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
    properties.uaa.clients.gorouter.secret: '"((UAA_CLIENTS_GOROUTER_SECRET))"'
    properties.uaa.clients.login.redirect-uri: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.uaa.clients.login.secret: '"((UAA_CLIENTS_LOGIN_SECRET))"'
    properties.uaa.clients.scf_auto_config.secret: '"((UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET))"'
    properties.uaa.clients.ssh-proxy.redirect-uri: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))/login
    properties.uaa.clients.ssh-proxy.secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.uaa.clients.tcp_emitter.secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.uaa.clients.tcp_router.secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.uaa.hostname: '((KUBERNETES_NAMESPACE)).((UAA_HOST))'
    properties.uaa.internal_url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT)) # For loggregator
    properties.uaa.port: ((UAA_PORT))
    properties.uaa.scim.users: '[{name: admin, password: ((CLUSTER_ADMIN_PASSWORD)), groups: [((CLUSTER_ADMIN_AUTHORITIES))]}]'
    properties.uaa.ssl.port: ((UAA_PORT))
    properties.uaa.tls_port: ((UAA_PORT))
    properties.uaa.token_endpoint: ((KUBERNETES_NAMESPACE)).((UAA_HOST))
    properties.uaa.url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.version: '"((CLUSTER_VERSION))"'

    
