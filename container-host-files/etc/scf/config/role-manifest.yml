releases:
- name: bpm
  version: "1.0.0"
  url: "https://bosh.io/d/github.com/cloudfoundry-incubator/bpm-release?v=1.0.0"
  sha1: "42b95d4a0d6d15dd0b0ead62418ffb56208e2307"
- name: capi
  version: "1.78.0+dev.4"
  url: "https://s3.amazonaws.com/cap-experiments/capi-6e4864e.tgz"
  sha1: "e45c1a4d93f12a325e04d103cbd9a3ff6fa8a38a"
- name: cf-cli
  version: 1.10.0
  url: https://bosh.io/d/github.com/bosh-packages/cf-cli-release?v=1.10.0
  sha1: 7b727c4c86f2e516e86827a56c5fbff8532aca3e
- name: cf-mysql
  url: https://bosh.io/d/github.com/cloudfoundry/cf-mysql-release?v=36.16.0
  version: 36.16.0
  sha1: eb028b258599e465f9fabb395b87e0093c46aa98
- name: cf-smoke-tests
  version: 40.0.17
  url: https://bosh.io/d/github.com/cloudfoundry/cf-smoke-tests-release?v=40.0.17
  sha1: c4fbdefdd3b04242eb53da89396f5f587e20d282
- name: cf-syslog-drain
  version: "8.1"
  url: "https://bosh.io/d/github.com/cloudfoundry/cf-syslog-drain-release?v=8.1"
  sha1: "1a4de5962d9f0d472271da7daf277c35b0969635"
- name: cflinuxfs2
  url: "https://bosh.io/d/github.com/cloudfoundry/cflinuxfs2-release?v=1.275.0"
  version: "1.275.0"
  sha1: "64027babfdaac464242162c57b80465b973c5b40"
- name: cflinuxfs3
  url: "https://bosh.io/d/github.com/cloudfoundry/cflinuxfs3-release?v=0.72.0"
  version: "0.72.0"
  sha1: "b1b2acccb718440fb5f969a1a48c1f8cfec59a62"
- name: credhub
  version: 2.1.1
  url: https://bosh.io/d/github.com/pivotal-cf/credhub-release?v=2.1.1
  sha1: dd0b607d855a8d23e6fd52b990573570e68bbbf6
- name: diego
  version: 2.22.0
  url: https://bosh.io/d/github.com/cloudfoundry/diego-release?v=2.22.0
  sha1: 0cd26089729d4e526dd27c47191cc3b9cb3189c6
- name: garden-runc
  version: 1.17.0
  url: https://bosh.io/d/github.com/cloudfoundry/garden-runc-release?v=1.17.0
  sha1: 989da8ac06999071d66deb7f957be4dfd49ecdf2
- name: loggregator
  version: '104.1'
  url: https://bosh.io/d/github.com/cloudfoundry/loggregator-release?v=104.1
  sha1: 4493664a05e553e43f8b12cc8956bc8ac5f4f6b0
- name: log-cache
  version: 2.0.1
  url: https://bosh.io/d/github.com/cloudfoundry/log-cache-release?v=2.0.1
  sha1: 23f9c4767109293b5f8b8a6a07ca31f065bcf88b
- name: mapfs
  version: "1.1.0"
  url: "https://bosh.io/d/github.com/cloudfoundry/mapfs-release?v=1.1.0"
  sha1: "1ab1dfb802819ec6cda2d0d60370638d6f878528"
- name: nats
  version: '26'
  url: https://bosh.io/d/github.com/cloudfoundry/nats-release?v=26
  sha1: 2f2c27acdfff81f3519968921686522518ab5783
- name: nfs-volume
  version: "1.5.2"
  url: "https://bosh.io/d/github.com/cloudfoundry/nfs-volume-release?v=1.5.2"
  sha1: "14d019e6fd83139fab5e8ee7f162bf6920235888"
- name: routing
  version: 0.183.0
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/cf-routing-release?v=0.183.0
  sha1: 92d7a81cddab5d26764c51d9dbb2baece1fbe3e6
- name: statsd-injector
  version: 1.5.0
  url: https://bosh.io/d/github.com/cloudfoundry/statsd-injector-release?v=1.5.0
  sha1: 49a38aca12e0fd2ec28f96c780c1971427dda04e
- name: loggregator-agent
  version: "3.1"
  url: "https://bosh.io/d/github.com/cloudfoundry/loggregator-agent-release?v=3.1"
  sha1: "c915a59373e986ae1d98cfb96b09c805664e2550"
- name: binary-buildpack
  url: "https://s3.amazonaws.com/suse-final-releases/binary-buildpack-release-1.0.30.1.tgz"
  version: "1.0.30.1"
  sha1: "35d15308569a443c9702763a8ddc11f3f93fbee2"
- name: go-buildpack
  url: "https://s3.amazonaws.com/suse-final-releases/go-buildpack-release-1.8.35.1.tgz"
  version: "1.8.35.1"
  sha1: "892149a994765280320e221bba9193bca2c7a664"
- name: java-buildpack
  url: "https://s3.amazonaws.com/suse-final-releases/java-buildpack-release-4.17.2.1.tgz"
  version: "4.17.2.1"
  sha1: "85e847c3fb6336342246d5cda3ff2098bbf63804"
- name: nodejs-buildpack
  url: "https://s3.amazonaws.com/suse-final-releases/nodejs-buildpack-release-1.6.45.1.tgz"
  version: "1.6.45.1"
  sha1: "d144e82785b4618655d6649ace1bd0bc43e3df1f"
- name: php-buildpack
  url: "https://s3.amazonaws.com/suse-final-releases/php-buildpack-release-4.3.70.2.tgz"
  version: "4.3.70.2"
  sha1: "965ae8f861f9391652ee21eba4c43062cffb25d1"
- name: python-buildpack
  url: "https://s3.amazonaws.com/suse-final-releases/python-buildpack-release-1.6.29.1.tgz"
  version: "1.6.29.1"
  sha1: "4794dd4e28f1016962ae22005e646c5ce765ff22"
- name: ruby-buildpack
  url: "https://s3.amazonaws.com/suse-final-releases/ruby-buildpack-release-1.7.34.1.tgz"
  version: "1.7.34.1"
  sha1: "3d62c31cc4cafe2cc72441426fb2e2621592a426"
- name: staticfile-buildpack
  url: "https://s3.amazonaws.com/suse-final-releases/staticfile-buildpack-release-1.4.40.1.tgz"
  version: "1.4.40.1"
  sha1: "c673e4985fb6cc9532de6f248e52fb127a5dbf3e"
- name: nginx-buildpack
  url: "https://s3.amazonaws.com/suse-final-releases/nginx-buildpack-release-1.0.9.1.tgz"
  version: "1.0.9.1"
  sha1: "43dc14df3fb919d5603fc6cd9fb90d33f31af06c"
- name: dotnet-core-buildpack
  url: "https://s3.amazonaws.com/suse-final-releases/dotnet-core-buildpack-release-2.2.7.1.tgz"
  version: "2.2.7.1"
  sha1: "dc3f525c02701b06d60e31dfeb7c677806bfff35"
- name: postgres
  version: "26"
  url: "https://bosh.io/d/github.com/cloudfoundry/postgres-release?v=26"
  sha1: "a436047dae4d4156a1debe9f88bedf59bf40362b"
- name: opensuse42
  url: "https://s3.amazonaws.com/suse-final-releases/opensuse42-release-1.24.1.tgz"
  version: "1.24.1"
  sha1: "f92e6b675fecd600723e32505b25535faff8db14"
- name: cf-sle12
  url: "https://s3.amazonaws.com/suse-final-releases/sle12-release-1.74.1.tgz"
  version: "1.74.1"
  sha1: "1a2596e59c9763c32a58799cb59b327d7ea6e6a8"
- name: sle15
  url: "https://s3.amazonaws.com/suse-final-releases/sle15-release-3.2.tgz"
  version: "3.2"
  sha1: "a0c7f716639339b1fff0cf6e44d158d36eaf9ffa"
- name: app-autoscaler
  version: "1.0.0"
  url: "https://bosh.io/d/github.com/cloudfoundry-incubator/app-autoscaler-release?v=1.0.0"
  sha1: "2e6d2aa85e0b218e110d42ca207cac6530cfd861"
- name: cf-usb
  version: "1.0.1"
  url: "https://s3.amazonaws.com/suse-final-releases/cf-usb-release-1.0.1.tgz"
  sha1: "3dc34e90b55d9d61f93f204fce11655b7cd87c87"
- name: groot-btrfs
  url: "https://s3.amazonaws.com/suse-final-releases/groot-btrfs-release-1.0.4.tgz"
  version: "1.0.4"
  sha1: "22381250b0f334d2c5dde04e85a9c1116d8e04fa"
- name: scf-helper
  url: "https://s3.amazonaws.com/suse-final-releases/scf-helper-release-1.0.2.tgz"
  version: "1.0.2"
  sha1: "0f2fb334ad456e35fff7be1fc56edaf2e07e4e26"
- name: "bits-service"
  version: "2.26.0"
  url: "https://bosh.io/d/github.com/cloudfoundry-incubator/bits-service-release?v=2.26.0"
  sha1: "f6a6598fbbac233f94c4a0cfe914970ec34db7b3"

instance_groups:
- name: eirini
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: patch-properties
    release: scf-helper
  - name: opi
    release: eirini
    properties:
      bosh_containerization:
        pod-security-policy: privileged
        run:
          service-account: eirini
          scaling:
            min: 0
            max: 1
            ha: 1
          memory: 256
          virtual-cpus: 2
        ports:
        - name: opi-server
          protocol: TCP
          internal: 8085
- name: bits
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  - scripts/patches/bits_add_missing_config_keys.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: route_registrar
    release: routing
  - name: statsd_injector
    release: statsd-injector
  - name: eirinifs
    release: eirini
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  - name: bits-service
    release: bits-service
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 1
            max: 1
            ha: 1
          memory: 256
          virtual-cpus: 2
        ports:
        - name: server
          protocol: TCP
          internal: 443
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"bits-service","tls_port":443,"uris":["registry.((DOMAIN))"],"registration_interval":"20s","server_cert_domain_san":"bits","tags":{"component":"bits-service"}}]'
- name: syslog-scheduler
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: scheduler
    release: cf-syslog-drain
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 3
            ha: 2
          capabilities: []
          memory: 128
          virtual-cpus: 2
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - syslog-scheduler
                  topologyKey: "beta.kubernetes.io/os"
          healthcheck:
            readiness:
              command:
              - curl --silent --fail --head http://${HOSTNAME}:8080/health
        ports:
        - name: sched-health
          protocol: TCP
          internal: 8080
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
- name: adapter
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: adapter
    release: cf-syslog-drain
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling: # one per 500 drains
            min: 1
            max: 65535
            ha: 2
          capabilities: []
          memory: 128
          virtual-cpus: 2
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - adapter
                  topologyKey: "beta.kubernetes.io/os"
          healthcheck:
            readiness:
              command:
              - curl --silent --fail --head http://${HOSTNAME}:8080/health
        ports:
        - name: adapter
          protocol: TCP
          internal: 4443
        - name: adapter-health
          protocol: TCP
          internal: 8080
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
- name: nats
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: nats
    release: nats
    provides:
      nats: {}
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 3
            ha: 2
          capabilities: [SYS_RESOURCE]
          memory: 128
          virtual-cpus: 2
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - nats
                  topologyKey: "beta.kubernetes.io/os"
          service-account: withsysresource
        ports:
        - name: nats
          protocol: TCP
          internal: 4222
        - name: nats-routes
          protocol: TCP
          internal: 4223
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
- name: mysql
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/create_mysql_data_tmp.sh
  - scripts/chown_vcap_store.sh
  - scripts/patches/fix_mysql_advertise_ip.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/enable_mysql_galera_bootstrap.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: patch-properties
    release: scf-helper
  - name: mysql
    release: cf-mysql
    provides:
      mysql: {}
    properties:
      bosh_containerization:
        ports:
        - name: mysql
          protocol: TCP
          internal: 13306
        - name: galera-tcp
          protocol: TCP
          internal: 4567
        - name: galera-udp
          protocol: UDP
          internal: 4567
        - name: galera-ist
          protocol: TCP
          internal: 4568
        - name: healthcheck
          protocol: TCP
          internal: 9200
        - name: xtrabackup
          protocol: TCP
          internal: 4444
  - name: proxy
    release: cf-mysql
    provides:
      proxy: {}
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 1
            max: 3
            ha: 2
          capabilities: []
          volumes:
          - path: /var/vcap/store
            type: persistent
            tag: mysql-data
            size: 20
          memory: 2500
          virtual-cpus: 2
          healthcheck:
            readiness:
              command:
              - curl --silent --fail --head http://${HOSTNAME}:9200/
              - curl --silent --fail --head http://${HOSTNAME}:1936/
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - mysql
                  topologyKey: "beta.kubernetes.io/os"
        ports:
        - name: api-proxy
          protocol: TCP
          internal: 8080
        - name: mysql-proxy
          protocol: TCP
          internal: 3306
        - name: healthck-proxy
          protocol: TCP
          internal: 1936
  tags:
  - sequential-startup
  configuration:
    templates:
      properties.cf_mysql.external_host: ((DOMAIN))
      properties.cf_mysql.mysql.admin_password: ((MYSQL_ADMIN_PASSWORD))
      properties.cf_mysql.mysql.cluster_health.password: ((MYSQL_CLUSTER_HEALTH_PASSWORD))
      properties.cf_mysql.mysql.galera_healthcheck.db_password: ((MYSQL_ADMIN_PASSWORD))
      properties.cf_mysql.mysql.galera_healthcheck.endpoint_password: ((MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD))
      properties.cf_mysql.proxy.api_password: ((MYSQL_PROXY_ADMIN_PASSWORD))
      properties.cf_mysql.proxy.healthcheck_timeout_millis: ((MYSQL_PROXY_HEALTHCHECK_TIMEOUT))
- name: cf-usb-group
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: cf-usb
    release: cf-usb
    properties:
      bosh_containerization:
        service_name: cf-usb
        run:
          scaling:
            min: 1
            max: 3
            ha: 2
          capabilities: []
          memory: 128
          virtual-cpus: 2
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - cf-usb
                  topologyKey: "beta.kubernetes.io/os"
        ports:
        - name: usb
          protocol: TCP
          internal: 24054
        - name: usb2
          protocol: TCP
          internal: 24053
  - name: route_registrar
    release: routing
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  tags:
  - sequential-startup
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"usb", "port": 24053, "uris":["usb.((DOMAIN))", "*.usb.((DOMAIN))"], "registration_interval":"10s"}, {"name":"broker", "port": 24054, "uris":["brokers.((DOMAIN))", "*.brokers.((DOMAIN))"], "registration_interval":"10s"}]'
- name: diego-api
  environment_scripts:
  - scripts/go_log_level.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: bbs
    release: diego
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            default: 1
            min: 0
            max: 3
            ha: 2
          capabilities: [SYS_RESOURCE]
          memory: 128
          virtual-cpus: 2
          active-passive-probe: /var/vcap/jobs/global-properties/bin/readiness/diego-api
          healthcheck:
            readiness:
              command:
              - head -c0 </dev/tcp/${HOSTNAME}/8889
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - diego-api
                  topologyKey: "beta.kubernetes.io/os"
          service-account: privileged
        ports:
        - name: cell-bbs-api
          protocol: TCP
          internal: 8889
        - name: cell-bbs-dbg
          protocol: TCP
          internal: 17017
  - name: patch-properties
    release: scf-helper
  - name: cfdot
    release: diego
  tags:
  - active-passive
  - sequential-startup
  configuration:
    templates:
      properties.bbs.hostname: '"diego-api-bbs.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"' # cfdot property
      properties.diego.bbs.advertisement_base_hostname: ((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
      properties.locket.hostname: '"locket-locket.((KUBERNETES_NAMESPACE))"'    # cfdot property
      properties.tls.ca_certificate: ((INTERNAL_CA_CERT))                   # cfdot property
      properties.tls.certificate: '"((BBS_REP_CERT))"'                      # cfdot property
      properties.tls.private_key: '"((BBS_REP_CERT_KEY))"'                  # cfdot property
- name: locket
  environment_scripts:
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: patch-properties
    release: scf-helper
  - name: locket
    release: diego
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 3
            ha: 2
          capabilities: [SYS_RESOURCE]
          memory: 128
          virtual-cpus: 2
          healthcheck:
            readiness:
              command:
              - head -c0 </dev/tcp/${HOSTNAME}/8891
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - locket
                  topologyKey: "beta.kubernetes.io/os"
          service-account: privileged
        ports:
        - name: locket
          protocol: TCP
          internal: 8891
- name: router
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  - name: gorouter
    release: routing
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 65535
            ha: 2
          capabilities: [SYS_RESOURCE]
          memory: 128
          virtual-cpus: 4
          healthcheck:
            readiness:
              command:
              - curl --silent --fail --head http://${HOSTNAME}:8080/health
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - diego-cell
                  topologyKey: "beta.kubernetes.io/os"
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - router
                  topologyKey: "beta.kubernetes.io/os"
          service-account: privileged # For port binding
        ports:
        - name: router
          protocol: TCP
          external: 80
          internal: 8000
          public: true
        - name: router-ssl
          protocol: TCP
          internal: 443
          public: true
- name: tcp-router
  # XXX haproxy might be able to co-locate with one of the others
  # But this is a _different_ HAProxy from the one in the CF release.
  environment_scripts:
  - scripts/go_log_level.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/patches/fix_haproxy_fd_requirements.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: wait-for-uaa
    release: scf
  - name: tcp_router
    release: routing
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 3
            ha: 2
          capabilities: []
          memory: 128
          virtual-cpus: 2
          healthcheck:
            readiness:
              command:
              - curl --silent --fail --head http://${HOSTNAME}:8080/health
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - tcp-router
                  topologyKey: "beta.kubernetes.io/os"
        ports:
        - name: healthcheck
          protocol: TCP
          external: 2341
          internal: 8080
        - name: tcp-route
          protocol: TCP
          internal: 20000-20008
          public: true
          count-configurable: true
          max: 20
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  configuration:
    templates:
      properties.dns_health_check_host: 'mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)).'
- name: routing-api
  environment_scripts:
  - scripts/go_log_level.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  - name: routing-api
    release: routing
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 3
            ha: 2
          capabilities: [SYS_RESOURCE]
          memory: 128
          virtual-cpus: 4
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - routing-api
                  topologyKey: "beta.kubernetes.io/os"
          # All the routes exposed require UAA auth, so we stick with the TCP healthcheck
          active-passive-probe: head -c0 </dev/tcp/${HOSTNAME}/3000
          service-account: withsysresource
        ports:
        - name: routing-api
          protocol: TCP
          internal: 3000
  tags:
  - active-passive
  - sequential-startup
  configuration:
    templates:
      properties.dns_health_check_host: 'mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)).'
- name: api-group
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/nginx_log_level.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/patches/fix_blobstore_send_timeout.sh
  - scripts/patches/fix_nodejs_buildpack.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/use_routing_api_private_endpoint.sh
  - scripts/patches/fix_monit_rsyslog.sh
  - scripts/patches/cc_pre_start_home.sh
  - scripts/patches/cc_ng_disable_credhub.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: patch-properties
    release: scf-helper
  - name: cloud_controller_ng
    release: capi
    properties:
      bosh_containerization:
        # XXX Maintain old service name for backwards compatiblities so apps keep running
        service_name: api
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 65535
            ha: 2
          capabilities: []
          memory: 3800
          virtual-cpus: 4
          healthcheck:
            readiness:
              command:
              - curl --silent --fail --head http://${HOSTNAME}:9022/v2/info
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - api-group
                  topologyKey: "beta.kubernetes.io/os"
        ports:
        - name: api
          protocol: TCP
          internal: 9022
        - name: api-tls
          protocol: TCP
          internal: 9023
        - name: api-mutual-tls
          protocol: TCP
          internal: 9024
        - name: statsd
          protocol: TCP
          internal: 8125
  - name: route_registrar
    release: routing
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  - name: statsd_injector
    release: statsd-injector
  - name: go-buildpack
    release: go-buildpack
  - name: binary-buildpack
    release: binary-buildpack
  - name: nodejs-buildpack
    release: nodejs-buildpack
  - name: ruby-buildpack
    release: ruby-buildpack
  - name: php-buildpack
    release: php-buildpack
  - name: python-buildpack
    release: python-buildpack
  - name: staticfile-buildpack
    release: staticfile-buildpack
  - name: nginx-buildpack
    release: nginx-buildpack
  - name: java-buildpack
    release: java-buildpack
  - name: dotnet-core-buildpack
    release: dotnet-core-buildpack
  tags:
  - sequential-startup
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name": "api", "port": ((CC_PORT_PUBLIC_INSECURE)), "tls_port": ((CC_PORT_PUBLIC_TLS)), "server_cert_domain_san": "api-set", "tags": {"component": "CloudController"}, "uris": ["api.((DOMAIN))"], "registration_interval": "10s"}]'
- name: cc-worker
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/cc_worker_disable_credhub.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: cloud_controller_worker
    release: capi
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 65535
            ha: 2
          capabilities: []
          memory: 750
          virtual-cpus: 2
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - cc-worker
                  topologyKey: "beta.kubernetes.io/os"
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
- name: blobstore
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/chown_vcap_store.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_chown_blobstore_packages.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: blobstore
    release: capi
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 1
            # Not HA capable; use external HA storage instead
          capabilities: []
          volumes:
          - path: /var/vcap/store
            type: persistent
            tag: blobstore-data
            size: 50
          memory: 500
          virtual-cpus: 2
        ports:
        - name: blobstore-ext
          protocol: TCP
          internal: 8080
        - name: blobstore
          protocol: TCP
          internal: 4443
  - name: route_registrar
    release: routing
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"blobstore", "port":8080, "tags":{"component":"blobstore"}, "uris":["blobstore.((DOMAIN))"], "registration_interval":"10s"}]'
- name: cc-clock
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/cc_clock_wait_for_api_ready.sh
  - scripts/patches/cc_clock_disable_credhub.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: cloud_controller_clock
    release: capi
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 3
            ha: 2
          capabilities: []
          memory: 750
          virtual-cpus: 2
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - cc-clock
                  topologyKey: "beta.kubernetes.io/os"
  - name: statsd_injector
    release: statsd-injector
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
- name: log-cache-scheduler
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  - scripts/patches/fix_logcache_certs_forwarder.sh
  - scripts/patches/fix_logcache_certs_scheduler.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: log-cache-scheduler-properties
    release: scf
  - name: authorize-internal-ca
    release: scf
  - name: log-cache-scheduler
    release: log-cache
    # defaults
  - name: log-cache-expvar-forwarder
    release: log-cache
    # defaults
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          service-account: privileged
          scaling:
            min: 1
            max: 65535
            ha: 2
          capabilities: []
          memory: 410
          virtual-cpus: 2
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - doppler
                  topologyKey: "beta.kubernetes.io/os"
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  configuration:
    templates:
      properties.tls.ca_cert: '"((INTERNAL_CA_CERT))"'
      properties.tls.cert: '"((LOG_CACHE_CERT))"'
      properties.tls.key: '"((LOG_CACHE_CERT_KEY))"'
      properties.maps: >
        [{ "name": "worker-assignments",
           "source_id": "log-cache-scheduler",
           "addr": "http://localhost:6064/debug/vars",
           "template": "{{.WorkerAssignments | jsonMap}}" },
         { "name": "worker-health",
           "source_id": "log-cache-scheduler",
           "addr": "http://localhost:6064/debug/vars",
           "template": "{{.WorkerHealth | jsonMap}}" }
        ]
- name: doppler
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: log-cache-gateway
    release: log-cache
    # gateway_addr - default - ":8081"
  - name: log-cache-nozzle
    release: log-cache
    # mostly default, logs_provider cert, see below
  - name: log-cache-cf-auth-proxy
    release: log-cache
  - name: log-cache-expvar-forwarder
    release: log-cache
    # defaults
  - name: log-cache
    release: log-cache
    # certs, see below
    properties:
      bosh_containerization:
        ports:
        - name: log-cache
          protocol: TCP
          internal: 8080
  - name: doppler
    release: loggregator
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 65535
            ha: 2
          capabilities: []
          memory: 410
          virtual-cpus: 2
          healthcheck:
            readiness:
              command:
              - head -c0 </dev/tcp/${HOSTNAME}/8082
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - doppler
                  topologyKey: "beta.kubernetes.io/os"
        ports:
        - name: dropsonde-udp
          protocol: UDP
          internal: 3457
        - name: dropsonde-tcp
          protocol: TCP
          internal: 3458
        - name: doppler-tls
          protocol: TCP
          internal: 3459
        - name: doppler-ws
          protocol: TCP
          internal: 8081
        - name: doppler-grpc
          protocol: TCP
          internal: 8082
        - name: log-cache-proxy # log-cache-cf-auth-proxy
          protocol: TCP
          internal: 8083
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
          service-account: privileged
  - name: route_registrar
    release: routing
  configuration:
    templates:
      properties.proxy_port: 8083 # log-cache-cf-auth-proxy
      properties.cc.ca_cert: '"((INTERNAL_CA_CERT))"'
      properties.cc.common_name: api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
      properties.cc.cert: '"((LOG_CACHE_CERT))"'
      properties.cc.key:  '"((LOG_CACHE_CERT_KEY))"'
      properties.uaa.client_id: 'doppler'
      properties.uaa.client_secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
      properties.uaa.ca_cert: '"((UAA_CA_CERT))((^UAA_CA_CERT))((INTERNAL_CA_CERT))((/UAA_CA_CERT))"'
      properties.uaa.internal_addr: '"https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))"'
      properties.counters: >
        [{ "name": "egress",
           "source_id": "log-cache",
           "addr": "http://localhost:6060/debug/vars",
           "template": "{{.LogCache.Egress}}" },
         { "name": "ingress",
           "source_id": "log-cache",
           "addr": "http://localhost:6060/debug/vars",
           "template": "{{.LogCache.Ingress}}" },
         { "name": "expired",
           "source_id": "log-cache",
           "addr": "http://localhost:6060/debug/vars",
           "template": "{{.LogCache.Expired}}" },
         { "name": "dropped",
           "source_id": "log-cache",
           "addr": "http://localhost:6060/debug/vars",
           "template": "{{.LogCache.Dropped}}" },
         { "name": "promql-timeout",
           "source_id": "log-cache",
           "addr": "http://localhost:6060/debug/vars",
           "template": "{{.LogCache.PromQLTimeout}}" },
         { "name": "egress",
           "source_id": "log-cache-nozzle",
           "addr": "http://localhost:6061/debug/vars",
           "template": "{{.Nozzle.Egress}}" },
         { "name": "ingress",
           "source_id": "log-cache-nozzle",
           "addr": "http://localhost:6061/debug/vars",
           "template": "{{.Nozzle.Ingress}}" },
         { "name": "err",
           "source_id": "log-cache-nozzle",
           "addr": "http://localhost:6061/debug/vars",
           "template": "{{.Nozzle.Err}}" },
         { "name": "dropped",
           "source_id": "log-cache-nozzle",
           "addr": "http://localhost:6061/debug/vars",
           "template": "{{.Nozzle.Dropped}}" }
        ]
      properties.gauges: >
        [{ "name": "cache-period",
           "source_id": "log-cache",
           "addr": "http://localhost:6060/debug/vars",
           "template": "{{.LogCache.CachePeriod}}" },
         { "name": "store-size",
           "source_id": "log-cache",
           "addr": "http://localhost:6060/debug/vars",
           "template": "{{.LogCache.StoreSize}}" },
         { "name": "total-system-memory",
           "source_id": "log-cache",
           "addr": "http://localhost:6060/debug/vars",
           "template": "{{.LogCache.TotalSystemMemory}}" },
         { "name": "available-system-memory",
           "source_id": "log-cache",
           "addr": "http://localhost:6060/debug/vars",
           "template": "{{.LogCache.AvailableSystemMemory}}" },
         { "name": "last-uaa-latency",
           "source_id": "log-cache-cf-auth-proxy",
           "addr": "http://localhost:6065/debug/vars",
           "template": "{{.CFAuthProxy.LastUAALatency}}" },
         { "name": "last-capi-v3-apps-latency",
           "source_id": "log-cache-cf-auth-proxy",
           "addr": "http://localhost:6065/debug/vars",
           "template": "{{.CFAuthProxy.LastCAPIV3AppsLatency}}" },
         { "name": "last-capi-v2-list-service-instances-latency",
           "source_id": "log-cache-cf-auth-proxy",
           "addr": "http://localhost:6065/debug/vars",
           "template": "{{.CFAuthProxy.LastCAPIV2ListServiceInstancesLatency}}" },
         { "name": "last-capi-v4-log-access-latency",
           "source_id": "log-cache-cf-auth-proxy",
           "addr": "http://localhost:6065/debug/vars",
           "template": "{{.CFAuthProxy.LastCAPIV4LogAccessLatency}}" },
         { "name": "last-capi-v2-service-instances-latency",
           "source_id": "log-cache-cf-auth-proxy",
           "addr": "http://localhost:6065/debug/vars",
           "template": "{{.CFAuthProxy.LastCAPIV2ServiceInstancesLatency}}" }
        ]
      properties.tls.ca_cert: '"((INTERNAL_CA_CERT))"'
      properties.tls.cert: '"((LOG_CACHE_CERT))"'
      properties.tls.key: '"((LOG_CACHE_CERT_KEY))"'
      properties.logs_provider.tls.ca_cert: '"((INTERNAL_CA_CERT))"'
      properties.logs_provider.tls.cert: '"((LOG_CACHE_CERT))"'
      properties.logs_provider.tls.key: '"((LOG_CACHE_CERT_KEY))"'
      properties.route_registrar.routes: >
        [{ "name": "log-cache-reverse-proxy",
           "port": 8083,
           "tags": { "component":"log-cache" },
           "uris": ["log-cache.((DOMAIN))", "*.log-cache.((DOMAIN))"],
           "registration_interval": "20s" }
        ]
- name: log-api
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: loggregator_trafficcontroller
    release: loggregator
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 65535
            ha: 2
          capabilities: []
          memory: 128
          virtual-cpus: 2
          healthcheck:
            readiness:
              command:
              - curl --silent --fail --head http://${HOSTNAME}:8081/set-cookie
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - log-api
                  topologyKey: "beta.kubernetes.io/os"
        ports:
        - name: dropsonde
          protocol: TCP
          internal: 8081
  - name: reverse_log_proxy
    release: loggregator
    properties:
      bosh_containerization:
        ports:
        - name: rlp
          protocol: TCP
          internal: 8082
  - name: route_registrar
    release: routing
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"log-api", "port":8081, "uris":["doppler.((DOMAIN))"], "registration_interval":"10s"}, {"name":"loggregator_trafficcontroller", "port":8080, "uris":["loggregator.((DOMAIN))"], "registration_interval":"10s"}]'
- name: diego-brain
  environment_scripts:
  - scripts/go_log_level.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: auctioneer
    release: diego
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            default: 1
            min: 0
            max: 3
            ha: 2
          capabilities: [SYS_RESOURCE]
          memory: 128
          virtual-cpus: 4
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - diego-brain
                  topologyKey: "beta.kubernetes.io/os"
          # Auctioneer has no useful healthcheck routes; we can only use the TCP port
          active-passive-probe: head -c0 </dev/tcp/${HOSTNAME}/9016
          service-account: privileged
        ports:
        - name: diego-auction
          protocol: TCP
          internal: 9016
  - name: patch-properties
    release: scf-helper
  - name: cfdot
    release: diego
  tags:
  - active-passive
  configuration:
    templates:
      properties.bbs.hostname: '"diego-api-bbs.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"' # cfdot property
      properties.locket.hostname: '"locket-locket.((KUBERNETES_NAMESPACE))"'    # cfdot property
      properties.tls.ca_certificate: ((INTERNAL_CA_CERT))                   # cfdot property
      properties.tls.certificate: '"((BBS_REP_CERT))"'                      # cfdot property
      properties.tls.private_key: '"((BBS_REP_CERT_KEY))"'                  # cfdot property
- name: cc-uploader
  environment_scripts:
  - scripts/go_log_level.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: tps
    release: capi
  - name: cc_uploader
    release: capi
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            min: 1
            max: 3
            ha: 2
          capabilities: [SYS_RESOURCE]
          memory: 128
          virtual-cpus: 4
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - cc-uploader
                  topologyKey: "beta.kubernetes.io/os"
          service-account: withsysresource
        ports:
        - name: cc-up-listen
          protocol: TCP
          internal: 9091
        - name: cc-up-dbg
          protocol: TCP
          internal: 17018
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
- name: diego-ssh
  environment_scripts:
  - scripts/go_log_level.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: ssh_proxy
    release: diego
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        run:
          scaling:
            default: 1
            min: 0
            max: 3
            ha: 2
          capabilities: [SYS_RESOURCE]
          memory: 128
          virtual-cpus: 2
          healthcheck:
            readiness:
              command:
              - curl --silent --fail --head http://${HOSTNAME}:8080/v1/static/file_server/bin/file-server
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - diego-ssh
                  topologyKey: "beta.kubernetes.io/os"
          service-account: privileged
        ports:
        - name: diego-ssh
          protocol: TCP
          internal: 2222
          public: true
  - name: file_server
    release: diego
    properties:
      bosh_containerization:
        # XXX Maintain old service name so DesiredLRPs remain valid after upgrades
        service_name: diego-access
        ports:
        - name: diego-files
          protocol: TCP
          internal: 8080
- name: nfs-broker
  environment_scripts:
  - scripts/go_log_level.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  - scripts/patches/nfsbroker_cert_prop.sh
  - scripts/patches/nfsbroker_ctl.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: nfsbroker
    release: nfs-volume
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 1
            max: 3
            ha: 2
          capabilities: [ALL]
          memory: 128
          virtual-cpus: 2
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - nfs-broker
                  topologyKey: "beta.kubernetes.io/os"
          service-account: privileged
        ports:
        - name: nfsbroker
          protocol: TCP
          internal: 8999
  tags:
  - sequential-startup
  configuration:
    templates:
      properties.nfsbroker.credhub.ca_cert: '~'
      properties.nfsbroker.credhub.uaa_ca_cert: '~'
      properties.nfsbroker.db_ca_cert: '~'
- name: diego-cell
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/set-diego-cell-memory-limits.sh
  - scripts/go_log_level.sh
  - scripts/configure-garden-filesystem.sh
  - scripts/configure-az.sh
  - scripts/configure-pz.sh
  scripts:
  - scripts/check_swapaccounting.sh
  - scripts/set_vcap_limits.sh
  - scripts/configure-nested-net.sh
  - scripts/cleanup-garden-graph.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  - scripts/patches/mapfs_pre_start.sh
  - scripts/patches/nfs-volume-nfsv3driver-libdir.sh
  - scripts/patches/fix_garden_logdir.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: get-kubectl
    release: scf
  - name: authorize-internal-ca
    release: scf
  - name: wait-for-uaa
    release: scf
  - name: rep
    release: diego
    properties:
      bosh_containerization:
        ports:
        - name: rep-server
          protocol: TCP
          internal: 1801
  - name: patch-properties
    release: scf-helper
  - name: cfdot
    release: diego
  - name: route_emitter
    release: diego
  - name: garden
    release: garden-runc
    properties:
      bosh_containerization:
        colocated_containers:
        - loggregator-agent
        # Instance group needs volume claim templates (see storage below), no LB => clustered
        run:
          scaling:
            default: 1
            min: 0
            max: 254
            # Not sure why 2 isn't enough for HA, but https://docs.cloudfoundry.org/concepts/high-availability.html disagrees
            ha: 3
          capabilities: [ALL]
          service-account: garden-runc
          volumes:
          - path: /var/vcap/data/grootfs
            type: persistent
            tag: grootfs-data
            size: 50
          - path: /sys/fs/cgroup
            type: host
            tag: host-cgroup
          memory: 2800
          virtual-cpus: 4
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - diego-cell
                  topologyKey: "beta.kubernetes.io/os"
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: "app.kubernetes.io/component"
                      operator: In
                      values:
                      - router
                  topologyKey: "beta.kubernetes.io/os"
  - name: groot-btrfs
    release: groot-btrfs
  - name: cflinuxfs2-rootfs-setup
    release: cflinuxfs2
  - name: cflinuxfs3-rootfs-setup
    release: cflinuxfs3
  - name: opensuse42-rootfs-setup
    release: cf-opensuse42
  - name: cf-sle12-setup
    release: cf-sle12
  - name: sle15-rootfs-setup
    release: sle15
  - name: nfsv3driver
    release: nfs-volume
    properties:
      bosh_containerization:
        ports:
        - name: nfs-driver
          protocol: TCP
          internal: 7589
        - name: nfs-admin
          protocol: TCP
          internal: 7590
  - name: mapfs
    release: mapfs
  configuration:
    templates:
      properties.bbs.hostname: '"diego-api-bbs.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"' # cfdot property
      properties.containers.trusted_ca_certificates: "[((#TRUSTED_CERTS))((TRUSTED_CERTS)),((/TRUSTED_CERTS))((INTERNAL_CA_CERT))]"
      properties.diego.rep.advertise_domain: diego-cell-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
      properties.locket.hostname: '"locket-locket.((KUBERNETES_NAMESPACE))"'    # cfdot property
      properties.tls.ca_cert: ((INTERNAL_CA_CERT))
      properties.tls.ca_certificate: ((INTERNAL_CA_CERT))                   # cfdot property
      properties.tls.cert: ((REP_SERVER_CERT))
      properties.tls.certificate: '"((BBS_REP_CERT))"'                      # cfdot property
      properties.tls.key: ((REP_SERVER_CERT_KEY))
      properties.tls.private_key: '"((BBS_REP_CERT_KEY))"'                  # cfdot property
- name: acceptance-tests-brain
  type: bosh-task
  tags:
  - stop-on-failure
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: acceptance-tests-brain
    release: scf
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 1
          flight-stage: manual
          capabilities: []
          service-account: test-brain
- name: acceptance-tests
  type: bosh-task
  tags:
  - stop-on-failure
  scripts:
  - scripts/cf_acceptance_tests_suites.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: acceptance-tests
    release: scf
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 1
          flight-stage: manual
          capabilities: []
          #service-account: privileged # ???
  configuration:
    templates:
      properties.acceptance_tests.nodes: '"((ACCEPTANCE_TEST_NODES))"'
      scf.cats-suites: '"((CATS_SUITES))"'
- name: smoke-tests
  type: bosh-task
  tags:
  - stop-on-failure
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: cf-cli-6-linux
    release: cf-cli
  - name: smoke_tests
    release: cf-smoke-tests
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 1
          flight-stage: manual
          capabilities: []
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
- name: secret-generation
  type: bosh-task
  jobs:
  - name: generate-secrets
    release: scf-helper
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 1
            max: 1
          flight-stage: pre-flight
          capabilities: []
          memory: 256
          virtual-cpus: 1
          service-account: secret-generator
  configuration:
    templates:
      properties.scf.secrets.cert_expiration: ((CERT_EXPIRATION))
      properties.scf.secrets.cluster_domain: ((KUBERNETES_CLUSTER_DOMAIN))
      properties.scf.secrets.domain: ((DOMAIN))
      properties.scf.secrets.generation: ((KUBE_SECRETS_GENERATION_COUNTER))
      properties.scf.secrets.is_install: ((HELM_IS_INSTALL))
      properties.scf.secrets.name: ((KUBE_SECRETS_GENERATION_NAME))
      properties.scf.secrets.namespace: ((KUBERNETES_NAMESPACE))
- name: post-deployment-setup
  type: bosh-task
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: uaa-create-user
    release: scf
  - name: configure-scf
    release: scf
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 1
            max: 1
          flight-stage: post-flight
          capabilities: []
          memory: 256
          virtual-cpus: 1
          service-account: eirini
- name: credhub-user
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/credhub_log_level.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: credhub
    release: credhub
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 1
            ha: 1
          capabilities: []
          persistent-volumes: []
          shared-volumes: []
          memory: 2000
          virtual-cpus: 2
          healthcheck:
            readiness:
        ports:
        - name: api #apiserverport
          protocol: TCP
          external: 8844
          internal: 8844
  - name: route_registrar
    release: routing
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  configuration:
    templates:
      properties.credhub.authentication.uaa.ca_certs: '["((UAA_CA_CERT))"]'
      properties.credhub.authentication.uaa.internal_url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
      properties.credhub.authentication.uaa.url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
      properties.credhub.authorization.acls.enabled: false
      properties.credhub.data_storage.database: "credhub_user"
      properties.credhub.data_storage.host: mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
      properties.credhub.data_storage.password: ((MYSQL_CREDHUB_USER_PASSWORD))
      properties.credhub.data_storage.port: 3306
      properties.credhub.data_storage.require_tls: false
      properties.credhub.data_storage.tls_ca: ((INTERNAL_CA_CERT))
      properties.credhub.data_storage.type: "mysql"
      properties.credhub.data_storage.username: "credhub_user"
      properties.credhub.encryption.keys: '[{"provider_name":"internal-provider", "active":true, "key_properties":{"encryption_password":"((CREDHUB_ENCRYPT_KEY))"}}]'
      properties.credhub.encryption.providers: '[{"name":"internal-provider", "type":"internal"}]'
      properties.credhub.log_level: '"((CREDHUB_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
      properties.credhub.tls: '{"certificate":"((CREDHUB_SERVER_CERT))","private_key":"((CREDHUB_SERVER_CERT_KEY))"}'
      properties.route_registrar.routes: '[{"name":"credhub", "tls_port":8844, "server_cert_domain_san":"credhub-set", "tags":{"component":"credhub"}, "uris":["credhub.((DOMAIN))"], "registration_interval":"10s"}]'
- name: autoscaler-postgres
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/chown_vcap_store.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: postgres
    release: postgres
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 3
            ha: 2
          volumes:
          - path: /var/vcap/store
            type: persistent
            tag: postgres-data
            size: 100
          memory: 1024
          virtual-cpus: 2
        ports:
        - name: postgres
          protocol: TCP
          external: 5432
          internal: 5432
  configuration:
    templates:
      properties.databases.databases: '[{"name":"autoscaler","tag":"default"}]'
      properties.databases.max_connections : '"((AUTOSCALER_DATABASE_MAX_CONNECTIONS))"'
      properties.databases.port: 5432
      properties.databases.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_PASSWORD))", "tag": "default"}]'
- name: autoscaler-api
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: apiserver
    release: app-autoscaler
    properties:
      bosh_containerization:
        ports:
        - name: api  # apiserverport
          protocol: TCP
          external: 7100
          internal: 7100
        - name: api-public  # apiserverpublicport
          protocol: TCP
          external: 7106
          internal: 7106
        run:
          scaling:
            min: 0
            max: 3
            ha: 2
          memory: 256
          virtual-cpus: 2
  - name: route_registrar
    release: routing
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"autoscalerapiserver", "port":7106, "tags":{"component":"autoscalerapiserver"}, "uris":["autoscaler.((DOMAIN))"], "registration_interval":"10s"}]'
- name: autoscaler-metrics
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: metricscollector
    release: app-autoscaler
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 3
            ha: 2
          memory: 128
          virtual-cpus: 4
        ports:
        - name: metrics  # metricscollectorport
          protocol: TCP
          external: 7103
          internal: 7103
- name: autoscaler-scalingengine
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: scalingengine
    release: app-autoscaler
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 3
            ha: 2
          memory: 2350
          virtual-cpus: 2
        ports:
        - name: scaling-engine  # scalingengineport
          protocol: TCP
          external: 7104
          internal: 7104
- name: autoscaler-scheduler
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: scheduler
    release: app-autoscaler
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 3
            ha: 2
          memory: 2350
          virtual-cpus: 2
        ports:
        - name: scheduler  # schedulerport
          protocol: TCP
          external: 7102
          internal: 7102
- name: autoscaler-operator
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: operator
    release: app-autoscaler
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 3
            ha: 2
          memory: 2350
          virtual-cpus: 2
- name: autoscaler-servicebroker
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: servicebroker
    release: app-autoscaler
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 3
            ha: 2
          memory: 2350
          virtual-cpus: 2
        ports:
        - name: broker
          protocol: TCP
          external: 7107
          internal: 7107
        - name: broker-public  # brokerpublicport
          protocol: TCP
          external: 7101
          internal: 7101
  - name: route_registrar
    release: routing
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
        pod-security-policy: privileged
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"autoscalerservicebroker", "port":7101, "tags":{"component":"autoscalerservicebroker"}, "uris":["autoscalerservicebroker.((DOMAIN))"], "registration_interval":"10s"}]'
- name: autoscaler-eventgenerator
  scripts:
  - scripts/set_vcap_limits.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_monit_rsyslog.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: eventgenerator
    release: app-autoscaler
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 3
            ha: 2
          memory: 2350
          virtual-cpus: 2
        ports:
        - name: eventgen  # eventgenereatorport
          protocol: TCP
          external: 7105
          internal: 7105
- name: autoscaler-smoke
  type: bosh-task
  tags:
  - stop-on-failure
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: authorize-internal-ca
    release: scf
  - name: autoscaler-smoke
    release: scf
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 0
            max: 1
          flight-stage: manual
  configuration:
    templates:
      properties.smoke_tests.api: api.((DOMAIN))
      properties.smoke_tests.apps_domain: ((DOMAIN))
      properties.smoke_tests.autoscaler_service_broker_endpoint: https://autoscalerservicebroker.((DOMAIN))
      properties.smoke_tests.password: ((CLUSTER_ADMIN_PASSWORD))
      properties.smoke_tests.skip_ssl_validation: false
- name: loggregator-agent
  type: colocated-container
  post_config_scripts:
  - scripts/bpm_kube_dns.rb
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release: scf-helper
  - name: loggr-expvar-forwarder
    release: loggregator-agent
  - name: loggregator_agent
    release: loggregator-agent
    properties:
      bosh_containerization:
        run:
          scaling:
            min: 1
            max: 3
            ha: 2
  - name: bpm
    release: bpm
    properties:
      bosh_containerization:
        run:
          capabilities: [ALL]
          service-account: privileged
  configuration:
    templates:
      properties.counters: >
        [{ "addr": "http://127.0.0.1:14824/debug/vars",
           "name": "dropped",
           "template": "{{.Agent.Dropped}}" },
         { "addr": "http://127.0.0.1:14824/debug/vars",
           "name": "dropped",
           "template": "{{.Agent.DroppedEgressV2}}",
           "tags": {
             "direction": "egress",
             "metric_version": "2.0" }},
         { "addr": "http://127.0.0.1:14824/debug/vars",
           "name": "dropped",
           "template": "{{.Agent.DroppedIngressV2}}",
           "tags": {
             "direction": "ingress",
             "metric_version": "2.0" }},
         { "addr": "http://127.0.0.1:14824/debug/vars",
           "name": "egress",
           "template": "{{.Agent.Egress}}" },
         { "addr": "http://127.0.0.1:14824/debug/vars",
           "name": "egress",
           "template": "{{.Agent.EgressV2}}",
           "tags": {
             "metric_version": "2.0" }},
         { "addr": "http://127.0.0.1:14824/debug/vars",
           "name": "ingress",
           "template": "{{.Agent.Ingress}}" },
         { "addr": "http://127.0.0.1:14824/debug/vars",
           "name": "ingress",
           "template": "{{.Agent.IngressV2}}",
           "tags": {
             "metric_version": "2.0" }}
        ]
      properties.default_source_id: 'metron'
      properties.fissile.monit.port: 2290
      properties.gauges: >
        [{ "addr": "http://127.0.0.1:14824/debug/vars",
           "name": "average_envelopes",
           "unit": "bytes/minute",
           "template": "{{.Agent.AverageEnvelope}}",
           "tags": {
             "loggregator": "v1" }},
         { "addr": "http://127.0.0.1:14824/debug/vars",
           "name": "average_envelopes",
           "unit": "bytes/minute",
           "template": "{{.Agent.AverageEnvelopeV2}}",
           "tags": {
             "metric_version": "2.0",
             "loggregator": "v2" }},
         { "addr": "http://127.0.0.1:14824/debug/vars",
           "name": "origin_mappings",
           "unit": "bytes/minute",
           "template": "{{.Agent.OriginMappingsV2}}",
           "tags": {
             "metric_version": "2.0" }}
        ]
      properties.log_agent.ca_cert: ((INTERNAL_CA_CERT))
      properties.log_agent.client_cert: '"((LOGGREGATOR_FORWARD_CERT))"'
      properties.log_agent.client_key: '"((LOGGREGATOR_FORWARD_CERT_KEY))"'
configuration:
  auth:
    roles:
      configgin-role:
      - apiGroups: [""]
        resources: [pods]
        verbs: [get, list, patch]
      - apiGroups: [""]
        resources: [services]
        verbs: [get]
      - apiGroups: [apps]
        resources: [statefulsets]
        verbs: [get]
      secrets-role:
      - apiGroups: [""]
        resources: [configmaps, secrets]
        verbs: [create, get, list, patch, update, delete]
      test-role:
      - apiGroups: [""]
        resources: [services]
        verbs: [create, get, delete]
      - apiGroups: [extensions]
        resources: [replicasets]
        verbs: [create, get, list, delete, update]
      - apiGroups: [apps]
        resources: [statefulsets]
        verbs: [create, get, update, delete]
      - apiGroups: [""]
        resources: ["pods"]
        verbs: [create, get, list, delete, update]
      - apiGroups: [""]
        resources: ["pods/exec"]
        verbs: [create, delete]
      - apiGroups: [""]
        resources: ["pods/log"]
        verbs: [create, delete, get, list]
      - apiGroups: [""]
        resources: ["secrets"]
        verbs: [get, list]
    cluster-roles:
      node-reader-role:
      - apiGroups: [""]
        resources: [nodes]
        verbs: [get, list, watch]
      nonprivileged:
      - apiGroups: [extensions]
        resourceNames: [nonprivileged]
        resources: [podsecuritypolicies]
        verbs: [use]
      withsysresource:
      - apiGroups: [extensions]
        resourceNames: [withsysresource]
        resources: [podsecuritypolicies]
        verbs: [use]
      privileged:
      - apiGroups: [extensions]
        resourceNames: [privileged]
        resources: [podsecuritypolicies]
        verbs: [use]
      eirini-role:
      - apiGroups: ["*"]
        resources: ["*"]
        verbs: ["*"]
      test-cluster-role:
      - apiGroups: [""]
        resources: [namespaces]
        verbs: [create, get, delete]
      - apiGroups: [""]
        resources: [pods, pods/log]
        verbs: [get, list]
      - apiGroups: [""]
        resources: [pods/portforward]
        verbs: [create]
      - apiGroups: ["rbac.authorization.k8s.io"]
        resources: [clusterrolebindings]
        verbs: [delete]
    pod-security-policies:
      nonprivileged: &psp-nonprivileged
        fsGroup: { rule: RunAsAny }
        runAsUser: { rule: RunAsAny }
        seLinux: { rule: RunAsAny }
        supplementalGroups: { rule: RunAsAny }
        volumes:
        - configMap
        - secret
        - emptyDir
        - downwardAPI
        - projected
        - persistentVolumeClaim
        - nfs
      withsysresource:
        <<: *psp-nonprivileged
        allowedCapabilities: [SYS_RESOURCE]
      privileged:
        <<: *psp-nonprivileged
        allowPrivilegeEscalation: true
        allowedCapabilities: ["*"]
        defaultAllowPrivilegeEscalation: true
        hostPorts: [{ min: 0, max: 65535 }]
        privileged: true
    accounts:
      default:
        roles: [configgin-role]
        cluster-roles: [nonprivileged]
      withsysresource:
        roles: [configgin-role]
        cluster-roles: [withsysresource]
      privileged:
        roles: [configgin-role]
        cluster-roles: [privileged]
      secret-generator:
        roles: [configgin-role, secrets-role]
        cluster-roles: [nonprivileged]
      test-brain:
        roles: [configgin-role, test-role]
        cluster-roles: [nonprivileged, test-cluster-role]
      garden-runc:
        roles: [configgin-role]
        cluster-roles: [privileged, node-reader-role]
      eirini:
        roles: [configgin-role]
        cluster-roles: [eirini-role]
  templates:
    az: '"((KUBE_AZ))"'
    id: ((HOSTNAME))
    index: ((KUBE_COMPONENT_INDEX))((^KUBE_COMPONENT_INDEX))0((/KUBE_COMPONENT_INDEX))
    ip: '"((IP_ADDRESS))"'
    networks.default.dns_record_name: '"((DNS_RECORD_NAME))"'
    networks.default.ip: '"((IP_ADDRESS))"'
    # We include INTERNAL_CA_CERT_KEY here so validation doesn't complain that it's not being used.
    # we can't make it internal, as that exposes it everywhere. The acceptance tests are not used at runtime so it's safe.
    properties.acceptance_tests.admin_password: '"((CLUSTER_ADMIN_PASSWORD))"((#INTERNAL_CA_CERT_KEY))((/INTERNAL_CA_CERT_KEY))'
    properties.acceptance_tests.api: '"api.((DOMAIN))"'
    properties.acceptance_tests.apps_domain: '"((DOMAIN))"'
    properties.acceptance_tests_brain.domain: '"((DOMAIN))"'
    properties.acceptance_tests_brain.namespace: '"((KUBERNETES_NAMESPACE))"'
    properties.acceptance_tests_brain.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.acceptance_tests_brain.storage_class: '"((KUBERNETES_STORAGE_CLASS_PERSISTENT))"'
    properties.acceptance_tests_brain.tcp_domain: '"((TCP_DOMAIN))"'
    properties.app_domains: '["((DOMAIN))"]'
    properties.app_ssh.host_key_fingerprint: '"((APP_SSH_KEY_FINGERPRINT))"'
    properties.autoscaler.api_server.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.cache_ttl: '((AUTOSCALER_API_SERVER_CACHE_TTL))'
    properties.autoscaler.api_server.db_config.idle_timeout: '((AUTOSCALER_API_SERVER_DB_CONFIG_IDLE_TIMEOUT))'
    properties.autoscaler.api_server.db_config.max_connections: '((AUTOSCALER_API_SERVER_DB_CONFIG_MAX_CONNECTIONS))'
    properties.autoscaler.api_server.db_config.min_connections: '((AUTOSCALER_API_SERVER_DB_CONFIG_MIN_CONNECTIONS))'
    properties.autoscaler.api_server.eventgenerator.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.eventgenerator.client_cert: '"((AUTOSCALER_ASMETRICS_CLIENT_CERT))"'
    properties.autoscaler.api_server.eventgenerator.client_key: '"((AUTOSCALER_ASMETRICS_CLIENT_CERT_KEY))"'
    properties.autoscaler.api_server.eventgenerator.host: '"autoscaler-eventgenerator-eventgenerator.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.api_server.info.build: '"((AUTOSCALER_API_SERVER_INFO_BUILD))"'
    properties.autoscaler.api_server.info.description: '"((AUTOSCALER_API_SERVER_INFO_DESCRIPTION))"'
    properties.autoscaler.api_server.info.name: '"((AUTOSCALER_API_SERVER_INFO_NAME))"'
    properties.autoscaler.api_server.info.support_url: '"((AUTOSCALER_API_SERVER_INFO_SUPPORT_URL))"'
    properties.autoscaler.api_server.metrics_collector.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.metrics_collector.client_cert: '"((AUTOSCALER_ASMETRICS_CLIENT_CERT))"'
    properties.autoscaler.api_server.metrics_collector.client_key: '"((AUTOSCALER_ASMETRICS_CLIENT_CERT_KEY))"'
    properties.autoscaler.api_server.metrics_collector.host: '"autoscaler-metrics-metricscollector.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.api_server.public_ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.public_server_cert: '"((AUTOSCALER_ASAPI_PUBLIC_SERVER_CERT))"'
    properties.autoscaler.api_server.public_server_key: '"((AUTOSCALER_ASAPI_PUBLIC_SERVER_CERT_KEY))"'
    properties.autoscaler.api_server.scaling_engine.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.scaling_engine.client_cert: '"((AUTOSCALER_SCALING_ENGINE_CLIENT_CERT))"'
    properties.autoscaler.api_server.scaling_engine.client_key: '"((AUTOSCALER_SCALING_ENGINE_CLIENT_CERT_KEY))"'
    properties.autoscaler.api_server.scaling_engine.host: '"autoscaler-scalingengine-scalingengine.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.api_server.scheduler.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.scheduler.client_cert: '"((AUTOSCALER_SCHEDULER_CLIENT_CERT))"'
    properties.autoscaler.api_server.scheduler.client_key: '"((AUTOSCALER_SCHEDULER_CLIENT_CERT_KEY))"'
    properties.autoscaler.api_server.scheduler.host: '"autoscaler-scheduler-scheduler.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.api_server.server_cert: '"((AUTOSCALER_ASAPI_SERVER_CERT))"'
    properties.autoscaler.api_server.server_key: '"((AUTOSCALER_ASAPI_SERVER_CERT_KEY))"'
    properties.autoscaler.api_server.service_broker.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.api_server.service_broker.client_cert: '"((AUTOSCALER_ASAPI_CLIENT_CERT))"'
    properties.autoscaler.api_server.service_broker.client_key: '"((AUTOSCALER_ASAPI_CLIENT_CERT_KEY))"'
    properties.autoscaler.api_server.service_broker.host: '"autoscaler-servicebroker-servicebroker.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.api_server.service_offering_enabled: '((AUTOSCALER_SERVICE_OFFERING_ENABLED))'
    properties.autoscaler.appmetrics_db.address: '"autoscaler-postgres-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.appmetrics_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.appmetrics_db_connection_config.connection_max_lifetime: '"((AUTOSCALER_APPMETRICS_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME))"'
    properties.autoscaler.appmetrics_db_connection_config.max_idle_connections: '((AUTOSCALER_APPMETRICS_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS))'
    properties.autoscaler.appmetrics_db_connection_config.max_open_connections: '((AUTOSCALER_APPMETRICS_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS))'
    properties.autoscaler.binding_db.address: '"autoscaler-postgres-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.binding_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.cf.api: '"https://api.((DOMAIN))"'
    properties.autoscaler.cf.secret: '"((AUTOSCALER_UAA_CLIENT_SECRET))"'
    properties.autoscaler.cf.skip_ssl_validation: '((AUTOSCALER_CF_SKIP_SSL_VALIDATION))'
    properties.autoscaler.eventgenerator.aggregator.aggregator_execute_interval: '"((AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_EXECUTE_INTERVAL))"'
    properties.autoscaler.eventgenerator.aggregator.app_metric_channel_size: '"((AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_APP_METRIC_CHANNEL_SIZE))"'
    properties.autoscaler.eventgenerator.aggregator.app_monitor_channel_size: '((AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_APP_MONITOR_CHANNEL_SIZE))'
    properties.autoscaler.eventgenerator.aggregator.metric_poller_count: '((AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_METRIC_POLLER_COUNT))'
    properties.autoscaler.eventgenerator.aggregator.policy_poller_interval: '"((AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_POLICY_POLLER_INTERVAL))"'
    properties.autoscaler.eventgenerator.aggregator.save_interval: '"((AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_SAVE_INTERVAL))"'
    properties.autoscaler.eventgenerator.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.eventgenerator.circuitBreaker.back_off_initial_interval: '"((AUTOSCALER_EVENT_GENERATOR_CIRCUIT_BREAKER_BACK_OFF_INITIAL_INTERVAL))"'
    properties.autoscaler.eventgenerator.circuitBreaker.back_off_max_interval: '"((AUTOSCALER_EVENT_GENERATOR_CIRCUIT_BREAKER_BACK_OFF_MAX_INTERVAL))"'
    properties.autoscaler.eventgenerator.circuitBreaker.consecutive_failure_count: '"((AUTOSCALER_EVENT_GENERATOR_CIRCUIT_BREAKER_CONSECUTIVE_FAILURE_COUNT))"'
    properties.autoscaler.eventgenerator.defaultBreachDurationSecs: '"((AUTOSCALER_DEFAULT_BREACH_DURATION_SECS))"'
    properties.autoscaler.eventgenerator.defaultStatWindowSecs: '"((AUTOSCALER_DEFAULT_STAT_WINDOW_SECS))"'
    properties.autoscaler.eventgenerator.evaluator.evaluation_manager_execute_interval: '"((AUTOSCALER_EVENT_GENERATOR_EVALUATOR_EVALUATION_MANAGER_EXECUTE_INTERVAL))"'
    properties.autoscaler.eventgenerator.evaluator.evaluator_count: '((AUTOSCALER_EVENT_GENERATOR_EVALUATOR_EVALUATOR_COUNT))'
    properties.autoscaler.eventgenerator.evaluator.trigger_array_channel_size: '((AUTOSCALER_EVENT_GENERATOR_EVALUATOR_TRIGGER_ARRAY_CHANNEL_SIZE))'
    properties.autoscaler.eventgenerator.logging.level: '"((LOG_LEVEL))"'
    properties.autoscaler.eventgenerator.metricscollector.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.eventgenerator.metricscollector.client_cert: '"((AUTOSCALER_ASMETRICS_CLIENT_CERT))"'
    properties.autoscaler.eventgenerator.metricscollector.client_key: '"((AUTOSCALER_ASMETRICS_CLIENT_CERT_KEY))"'
    properties.autoscaler.eventgenerator.metricscollector.host: '"autoscaler-metrics-metricscollector.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.eventgenerator.scaling_engine.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.eventgenerator.scaling_engine.client_cert: '"((AUTOSCALER_SCALING_ENGINE_CLIENT_CERT))"'
    properties.autoscaler.eventgenerator.scaling_engine.client_key: '"((AUTOSCALER_SCALING_ENGINE_CLIENT_CERT_KEY))"'
    properties.autoscaler.eventgenerator.scaling_engine.host: '"autoscaler-scalingengine-scalingengine.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.eventgenerator.server_cert: '"((AUTOSCALER_ASMETRICS_SERVER_CERT))"'
    properties.autoscaler.eventgenerator.server_key: '"((AUTOSCALER_ASMETRICS_SERVER_CERT_KEY))"'
    properties.autoscaler.instancemetrics_db.address: '"autoscaler-postgres-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.instancemetrics_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.instancemetrics_db_connection_config.connection_max_lifetime: '"((AUTOSCALER_INSTANCE_METRICS_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME))"'
    properties.autoscaler.instancemetrics_db_connection_config.max_idle_connections: '((AUTOSCALER_INSTANCE_METRICS_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS))'
    properties.autoscaler.instancemetrics_db_connection_config.max_open_connections: '((AUTOSCALER_INSTANCE_METRICS_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS))'
    properties.autoscaler.lock_db.address: '"autoscaler-postgres-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.lock_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.lock_db_connection_config.connection_max_lifetime: '"((AUTOSCALER_LOCK_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME))"'
    properties.autoscaler.lock_db_connection_config.max_idle_connections: '((AUTOSCALER_LOCK_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS))'
    properties.autoscaler.lock_db_connection_config.max_open_connections: '((AUTOSCALER_LOCK_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS))'
    properties.autoscaler.metricscollector.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.metricscollector.collector.collect_interval: '"((AUTOSCALER_METRICS_COLLECTOR_COLLECTOR_COLLECT_INTERVAL))"'
    properties.autoscaler.metricscollector.collector.collect_method: '"((AUTOSCALER_METRICS_COLLECTOR_COLLECT_METHOD))"'
    properties.autoscaler.metricscollector.collector.refresh_interval: '"((AUTOSCALER_METRICS_COLLECTOR_COLLECTOR_REFRESH_INTERVAL))"'
    properties.autoscaler.metricscollector.collector.save_interval: '"((AUTOSCALER_METRICS_COLLECTOR_COLLECTOR_SAVE_INTERVAL))"'
    properties.autoscaler.metricscollector.logging.level: '"((LOG_LEVEL))"'
    properties.autoscaler.metricscollector.server_cert: '"((AUTOSCALER_ASMETRICS_SERVER_CERT))"'
    properties.autoscaler.metricscollector.server_key: '"((AUTOSCALER_ASMETRICS_SERVER_CERT_KEY))"'
    properties.autoscaler.operator.app_metrics_db.cutoff_days: '((AUTOSCALER_OPERATOR_APP_METRICS_DB_CUTOFF_DAYS))'
    properties.autoscaler.operator.app_metrics_db.refresh_interval: '"((AUTOSCALER_OPERATOR_APP_METRICS_DB_REFRESH_INTERVAL))"'
    properties.autoscaler.operator.app_sync_interval: '((AUTOSCALER_OPERATOR_APP_SYNC_INTERVAL))'
    properties.autoscaler.operator.enable_db_lock: '"((AUTOSCALER_OPERATOR_ENABLE_DB_LOCK))"'
    properties.autoscaler.operator.instance_metrics_db.cutoff_days: '((AUTOSCALER_OPERATOR_INSTANCE_METRICS_DB_CUTOFF_DAYS))'
    properties.autoscaler.operator.instance_metrics_db.refresh_interval: '"((AUTOSCALER_OPERATOR_INSTANCE_METRICS_DB_REFRESH_INTERVAL))"'
    properties.autoscaler.operator.lock.lock_retry_interval: '"((AUTOSCALER_OPERATOR_LOCK_RETRY_INTERVAL))"'
    properties.autoscaler.operator.lock.lock_ttl: '"((AUTOSCALER_OPERATOR_LOCK_TTL))"'
    properties.autoscaler.operator.logging.level: '"((LOG_LEVEL))"'
    properties.autoscaler.operator.scaling_engine.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.operator.scaling_engine.client_cert: '"((AUTOSCALER_SCALING_ENGINE_CLIENT_CERT))"'
    properties.autoscaler.operator.scaling_engine.client_key: '"((AUTOSCALER_SCALING_ENGINE_CLIENT_CERT_KEY))"'
    properties.autoscaler.operator.scaling_engine.host: '"autoscaler-scalingengine-scalingengine.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.operator.scaling_engine.sync_interval: '((AUTOSCALER_OPERATOR_SCALING_ENGINE_SYNC_INTERVAL))'
    properties.autoscaler.operator.scaling_engine_db.cutoff_days: '"((AUTOSCALER_OPERATOR_SCALING_ENGINE_DB_CUTOFF_DAYS))"'
    properties.autoscaler.operator.scaling_engine_db.refresh_interval: '"((AUTOSCALER_OPERATOR_SCALING_ENGINE_DB_FRESH_INTERVAL))"'
    properties.autoscaler.operator.scheduler.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.operator.scheduler.client_cert: '"((AUTOSCALER_SCHEDULER_CLIENT_CERT))"'
    properties.autoscaler.operator.scheduler.client_key: '"((AUTOSCALER_SCHEDULER_CLIENT_CERT_KEY))"'
    properties.autoscaler.operator.scheduler.host: '"autoscaler-scheduler-scheduler.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.operator.scheduler.sync_interval: '((AUTOSCALER_OPERATOR_SCHEDULER_SYNC_INTERVAL))'
    properties.autoscaler.policy_db.address: '"autoscaler-postgres-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.policy_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.policy_db_connection_config.connection_max_lifetime: '"((AUTOSCALER_POLICY_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME))"'
    properties.autoscaler.policy_db_connection_config.max_idle_connections: '((AUTOSCALER_POLICY_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS))'
    properties.autoscaler.policy_db_connection_config.max_open_connections: '((AUTOSCALER_POLICY_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS))'
    properties.autoscaler.scalingengine.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.scalingengine.defaultCoolDownSecs: '((AUTOSCALER_DEFAULT_COOLDOWN_SECS))'
    properties.autoscaler.scalingengine.health.emit_interval: '((AUTOSCALER_SCALING_ENGINE_HEALTH_EMIT_INTERVAL))'
    properties.autoscaler.scalingengine.lockSize: '"((AUTOSCALER_SCALING_ENGINE_LOCK_SIZE))"'
    properties.autoscaler.scalingengine.logging.level: '"((LOG_LEVEL))"'
    properties.autoscaler.scalingengine.server_cert: '"((AUTOSCALER_SCALING_ENGINE_SERVER_CERT))"'
    properties.autoscaler.scalingengine.server_key: '"((AUTOSCALER_SCALING_ENGINE_SERVER_CERT_KEY))"'
    properties.autoscaler.scalingengine_db.address: '"autoscaler-postgres-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.scalingengine_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.scalingengine_db_connection_config.connection_max_lifetime: '"((AUTOSCALER_SCALING_ENGINE_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME))"'
    properties.autoscaler.scalingengine_db_connection_config.max_idle_connections: '((AUTOSCALER_SCALING_ENGINE_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS))'
    properties.autoscaler.scalingengine_db_connection_config.max_open_connections: '((AUTOSCALER_SCALING_ENGINE_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS))'
    properties.autoscaler.scheduler.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.scheduler.job_reschedule_interval_millisecond: '"((AUTOSCALER_SCHEDULER_JOB_RESCHEDULE_INTERVAL_MILISECOND))"'
    properties.autoscaler.scheduler.job_reschedule_maxcount: '"((AUTOSCALER_SCHEDULER_JOB_RESCHEDULE_MAXCOUNT))"'
    properties.autoscaler.scheduler.notification_reschedule_maxcount: '"((AUTOSCALER_SCHEDULER_NOTIFICATION_RESCHEDULE_MAXCOUNT))"'
    properties.autoscaler.scheduler.scaling_engine.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.scheduler.scaling_engine.client_cert: '"((AUTOSCALER_SCALING_ENGINE_CLIENT_CERT))"'
    properties.autoscaler.scheduler.scaling_engine.client_key: '"((AUTOSCALER_SCALING_ENGINE_CLIENT_CERT_KEY))"'
    properties.autoscaler.scheduler.scaling_engine.host: '"autoscaler-scalingengine-scalingengine.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.scheduler.server_cert: '"((AUTOSCALER_SCHEDULER_SERVER_CERT))"'
    properties.autoscaler.scheduler.server_key: '"((AUTOSCALER_SCHEDULER_SERVER_CERT_KEY))"'
    properties.autoscaler.scheduler_db.address: '"autoscaler-postgres-postgres.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.scheduler_db.roles: '[{"name": "postgres", "password": "((AUTOSCALER_DB_PASSWORD))", "tag": "default"}]'
    properties.autoscaler.scheduler_db_connection_config.connection_max_lifetime: '"((AUTOSCALER_SCHEDULER_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME))"'
    properties.autoscaler.scheduler_db_connection_config.max_idle_connections: '((AUTOSCALER_SCHEDULER_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS))'
    properties.autoscaler.scheduler_db_connection_config.max_open_connections: '((AUTOSCALER_SCHEDULER_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS))'
    properties.autoscaler.service_broker.api_server.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.service_broker.api_server.client_cert: '"((AUTOSCALER_ASAPI_CLIENT_CERT))"'
    properties.autoscaler.service_broker.api_server.client_key: '"((AUTOSCALER_ASAPI_CLIENT_CERT_KEY))"'
    properties.autoscaler.service_broker.api_server.host: '"autoscaler-api-apiserver.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.autoscaler.service_broker.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.service_broker.dashboard_redirect_uri: '"https://scalerui.((DOMAIN))"'
    properties.autoscaler.service_broker.db_config.idle_timeout: '((AUTOSCALER_SERVICE_BROKER_DB_CONFIG_IDLE_TIMEOUT))'
    properties.autoscaler.service_broker.db_config.max_connections: '((AUTOSCALER_SERVICE_BROKER_DB_CONFIG_MAX_CONNECTIONS))'
    properties.autoscaler.service_broker.db_config.min_connections: '((AUTOSCALER_SERVICE_BROKER_DB_CONFIG_MIN_CONNECTIONS))'
    properties.autoscaler.service_broker.http_request_timeout: '((AUTOSCALER_SERVICE_BROKER_HTTP_REQUEST_TIMEOUT))'
    properties.autoscaler.service_broker.password: '"((AUTOSCALER_SERVICE_BROKER_PASSWORD))"'
    properties.autoscaler.service_broker.public_ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.autoscaler.service_broker.public_server_cert: '"((AUTOSCALER_ASAPI_PUBLIC_SERVER_CERT))"'
    properties.autoscaler.service_broker.public_server_key: '"((AUTOSCALER_ASAPI_PUBLIC_SERVER_CERT_KEY))"'
    properties.autoscaler.service_broker.server_cert: '"((AUTOSCALER_SERVICE_BROKER_SERVER_CERT))"'
    properties.autoscaler.service_broker.server_key: '"((AUTOSCALER_SERVICE_BROKER_SERVER_CERT_KEY))"'


    properties.bits-service.active_signing_key.secret: "((BITS_SERVICE_SECRET))"
    properties.bits-service.app_stash.webdav_config.ca_cert: "((INTERNAL_CA_CERT))"
    properties.bits-service.app_stash.webdav_config.password: "((BLOBSTORE_PASSWORD))"
    properties.bits-service.app_stash.webdav_config.private_endpoint: "https://blobstore-blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443"
    properties.bits-service.app_stash.webdav_config.public_endpoint: "https://blobstore.((DOMAIN))"
    properties.bits-service.buildpacks.webdav_config.ca_cert: ((INTERNAL_CA_CERT))
    properties.bits-service.buildpacks.webdav_config.password: ((BLOBSTORE_PASSWORD))
    properties.bits-service.buildpacks.webdav_config.private_endpoint: "https://blobstore-blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443"
    properties.bits-service.buildpacks.webdav_config.public_endpoint: "https://blobstore.((DOMAIN))"
    properties.bits-service.cc_updates.ca_cert: ((INTERNAL_CA_CERT))
    properties.bits-service.cc_updates.cc_url: "https://api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):((CC_PORT_PUBLIC_TLS))/internal/v4/packages"
    properties.bits-service.cc_updates.client_cert: ((CC_PUBLIC_TLS_CERT))
    properties.bits-service.cc_updates.client_key: ((CC_PUBLIC_TLS_CERT_KEY))
    properties.bits-service.droplets.webdav_config.ca_cert: ((INTERNAL_CA_CERT))
    properties.bits-service.droplets.webdav_config.password: ((BLOBSTORE_PASSWORD))
    properties.bits-service.droplets.webdav_config.private_endpoint: "https://blobstore-blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443"
    properties.bits-service.droplets.webdav_config.public_endpoint: "https://blobstore.((DOMAIN))"
    properties.bits-service.packages.webdav_config.ca_cert: ((INTERNAL_CA_CERT))
    properties.bits-service.packages.webdav_config.password: ((BLOBSTORE_PASSWORD))
    properties.bits-service.packages.webdav_config.private_endpoint: "https://blobstore-blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443"
    properties.bits-service.packages.webdav_config.public_endpoint: https://blobstore.((DOMAIN))
    properties.bits-service.private_endpoint: "https://bits-bits-service.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"
    properties.bits-service.public_endpoint: "https://bits.((DOMAIN))"
    properties.bits-service.signing_users: '[{"username": "admin", "password": "((BITS_ADMIN_USERS_PASSWORD))"}]'
    properties.bits-service.tls.cert: ((BITS_SERVICE_SSL_CERT))
    properties.bits-service.tls.key: ((BITS_SERVICE_SSL_CERT_KEY))

    properties.blobstore.admin_users: '[{"username": "blobstore_user", "password": "((BLOBSTORE_PASSWORD))"}]'
    properties.blobstore.internal_access_rules: '[((BLOBSTORE_ACCESS_RULES))]'
    properties.blobstore.max_upload_size: ((BLOBSTORE_MAX_UPLOAD_SIZE))m
    properties.blobstore.secure_link.secret: '"((BLOBSTORE_SECURE_LINK))"'
    properties.blobstore.tls.cert: '"((BLOBSTORE_TLS_CERT))"'
    properties.blobstore.tls.private_key: '"((BLOBSTORE_TLS_CERT_KEY))"'
    properties.build: '"((CLUSTER_BUILD))"'
    properties.capi.cc_uploader.cc.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.cc_uploader.cc.client_cert: '"((CC_SERVER_CRT))"'
    properties.capi.cc_uploader.cc.client_key: '"((CC_SERVER_CRT_KEY))"'
    properties.capi.cc_uploader.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.capi.cc_uploader.mutual_tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.cc_uploader.mutual_tls.server_cert: '"((CC_UPLOADER_CRT))"'
    properties.capi.cc_uploader.mutual_tls.server_key: '"((CC_UPLOADER_CRT_KEY))"'
    properties.capi.tps.bbs.api_location: diego-api-bbs.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.capi.tps.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.tps.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.capi.tps.bbs.client_key: '"((BBS_CLIENT_CRT_KEY))"'
    properties.capi.tps.cc.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.tps.cc.client_cert: '"((TPS_CC_CLIENT_CRT))"'
    properties.capi.tps.cc.client_key: '"((TPS_CC_CLIENT_CRT_KEY))"'
    properties.capi.tps.cc.internal_service_hostname: api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.capi.tps.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.capi.tps.traffic_controller_url: ws://log-api-loggregator-trafficcontroller.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8081
    properties.capi.tps.watcher.locket.api_location: '"locket-locket.((KUBERNETES_NAMESPACE)):8891"'
    properties.cc.allow_app_ssh_access: ((ALLOW_APP_SSH_ACCESS))
    properties.cc.allowed_cors_domains: ((ALLOWED_CORS_DOMAINS))
    properties.cc.app_bits_max_body_size: ((NGINX_MAX_REQUEST_BODY_SIZE))M
    properties.cc.app_bits_upload_grace_period_in_seconds: ((APP_TOKEN_UPLOAD_GRACE_PERIOD))

    properties.cc.bits_service.ca_cert: "((INTERNAL_CA_CERT))"
    properties.cc.bits_service.password: "((BITS_ADMIN_USERS_PASSWORD))"
    properties.cc.bits_service.private_endpoint: "https://bits-bits-service.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"
    properties.cc.bits_service.public_endpoint: "https://bits.((DOMAIN))"

    properties.cc.broker_client_timeout_seconds: '"((BROKER_CLIENT_TIMEOUT_SECONDS))"'
    properties.cc.buildpacks.cdn.uri: '"((CDN_URI))"'
    properties.cc.buildpacks.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.buildpacks.webdav_config.private_endpoint: https://blobstore-blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443
    properties.cc.buildpacks.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.bulk_api_password: '"((BULK_API_PASSWORD))"'
    properties.cc.database_encryption.current_key_label: '"((CC_DB_CURRENT_KEY_LABEL))"'
    properties.cc.database_encryption.keys: ((CC_DB_ENCRYPTION_KEYS))
    properties.cc.db_encryption_key: '"((DB_ENCRYPTION_KEY))"'
    properties.cc.default_app_disk_in_mb: '"((DEFAULT_APP_DISK_IN_MB))"'
    properties.cc.default_app_memory: '"((DEFAULT_APP_MEMORY))"'
    properties.cc.default_app_ssh_access: '"((DEFAULT_APP_SSH_ACCESS))"'
    properties.cc.default_stack: '"((DEFAULT_STACK))"'
    properties.cc.diego.bbs.url: https://diego-api-bbs.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.cc.diego.cc_uploader_https_url: https://cc-uploader-cc-uploader.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):9091
    properties.cc.diego.docker_staging_stack: '"((DEFAULT_STACK))"'
    properties.cc.diego.file_server_url: http://diego-access.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8080
    properties.cc.diego.insecure_docker_registry_list: '[((INSECURE_DOCKER_REGISTRIES))]'
    properties.cc.diego.use_privileged_containers_for_running: ((USE_DIEGO_PRIVILEGED_CONTAINERS))
    properties.cc.diego.use_privileged_containers_for_staging: ((USE_STAGER_PRIVILEGED_CONTAINERS))
    properties.cc.disable_custom_buildpacks: ((DISABLE_CUSTOM_BUILDPACKS))
    properties.cc.droplets.max_staged_droplets_stored: ((DROPLET_MAX_STAGED_STORED))
    properties.cc.droplets.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.droplets.webdav_config.private_endpoint: https://blobstore-blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443
    properties.cc.droplets.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.internal_api_password: '"((INTERNAL_API_PASSWORD))"'
    properties.cc.internal_service_hostname: api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.cc.logging_level: '"((LOG_LEVEL))"'
    properties.cc.loggregator.internal_url: http://log-api-loggregator-trafficcontroller.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8081
    properties.cc.maximum_app_disk_in_mb: ((MAX_APP_DISK_IN_MB))
    properties.cc.maximum_health_check_timeout: ((MAX_HEALTH_CHECK_TIMEOUT))
    properties.cc.mutual_tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.cc.mutual_tls.private_key: '"((CC_SERVER_CRT_KEY))"'
    properties.cc.mutual_tls.public_cert: '"((CC_SERVER_CRT))"'
    properties.cc.nginx_error_log_level: '"((NGINX_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.cc.opi.enabled: ((ENABLE_EIRINI))
    properties.cc.opi.opi_staging: ((ENABLE_EIRINI))
    properties.cc.opi.url: http://eirini-opi.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8085
    properties.cc.packages.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.packages.webdav_config.private_endpoint: https://blobstore-blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443
    properties.cc.packages.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.public_tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.cc.public_tls.certificate: '"((CC_PUBLIC_TLS_CERT))"'
    properties.cc.public_tls.port: '"((CC_PORT_PUBLIC_TLS))"'
    properties.cc.public_tls.private_key: '"((CC_PUBLIC_TLS_CERT_KEY))"'
    properties.cc.resource_pool.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.resource_pool.webdav_config.private_endpoint: https://blobstore-blobstore.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):4443
    properties.cc.resource_pool.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.security_event_logging.enabled: '"((ENABLE_SECURITY_EVENT_LOGGING))"'
    properties.cc.staging_timeout_in_seconds: ((STAGING_TIMEOUT))
    properties.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.cc.uaa.internal_url: ((KUBERNETES_NAMESPACE)).((UAA_HOST))
    properties.ccdb.address: mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.ccdb.roles: '[{"name": "ccadmin", "password": "((MYSQL_CCDB_ROLE_PASSWORD))", "tag": "admin"}]'
    properties.cf-sle12.trusted_certs: '"((ROOTFS_TRUSTED_CERTS))((#ROOTFS_TRUSTED_CERTS))\n((/ROOTFS_TRUSTED_CERTS))((INTERNAL_CA_CERT))"'
    properties.cf-usb.broker.external_url: '"https://cf-usb.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):24054"'
    properties.cf-usb.broker.password: '"((CF_USB_PASSWORD))"'
    properties.cf-usb.broker.server_cert: '"((CF_USB_BROKER_SERVER_CERT))"'
    properties.cf-usb.broker.server_key: '"((CF_USB_BROKER_SERVER_CERT_KEY))"'
    properties.cf-usb.management.uaa.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.cf-usb.mysql_address: 'mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))'
    properties.cf-usb.mysql_password: "((MYSQL_CF_USB_PASSWORD))"
    properties.cf.admin_password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.cf.api_url: https://api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):((CC_PORT_PUBLIC_TLS))
    properties.cf.insecure_api_url: http://api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):((CC_PORT_PUBLIC_INSECURE)) # For post-deployment-setup, because cf cli has no client certs.
    properties.cf_mysql.host: '"mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.cf_mysql.mysql.advertise_host: mysql-((KUBE_COMPONENT_INDEX)).mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.cf_mysql.mysql.seeded_databases: '[{"name":"ccdb","username":"ccadmin","password":"((MYSQL_CCDB_ROLE_PASSWORD))"},{"name":"diego","username":"diego","password":"((MYSQL_DIEGO_PASSWORD))"},{"name":"routing-api","username":"routing-api","password":"((MYSQL_ROUTING_API_PASSWORD))"},{"name":"usb","username":"usb","password":"((MYSQL_CF_USB_PASSWORD))"},{"name":"nfsvolume","username":"nfsvolume","password":"((MYSQL_PERSI_NFS_PASSWORD))"},{"name":"diego_locket","username":"diego_locket","password":"((MYSQL_DIEGO_LOCKET_PASSWORD))"},{"name":"credhub_user","username":"credhub_user","password":"((MYSQL_CREDHUB_USER_PASSWORD))"}]'
    properties.cflinuxfs2-rootfs.trusted_certs: '"((ROOTFS_TRUSTED_CERTS))((#ROOTFS_TRUSTED_CERTS))\n((/ROOTFS_TRUSTED_CERTS))((INTERNAL_CA_CERT))"'
    properties.cflinuxfs3-rootfs.trusted_certs: '"((ROOTFS_TRUSTED_CERTS))((#ROOTFS_TRUSTED_CERTS))\n((/ROOTFS_TRUSTED_CERTS))((INTERNAL_CA_CERT))"'
    properties.containers.trusted_ca_certificates: '((#TRUSTED_CERTS))[((TRUSTED_CERTS))]((/TRUSTED_CERTS))'
    properties.copilot.client_ca_file: ((INTERNAL_CA_CERT))
    # CLUSTER_DESCRIPTION is not wrapped in quotes because it has quotes in the dev env file.
    properties.description: ((CLUSTER_DESCRIPTION))
    properties.diego.auctioneer.bbs.api_location: diego-api-bbs.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.diego.auctioneer.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.auctioneer.bbs.client_key: '"((BBS_CLIENT_CRT_KEY))"'
    properties.diego.auctioneer.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.locket.api_location: '"locket-locket.((KUBERNETES_NAMESPACE)):8891"'
    properties.diego.auctioneer.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.auctioneer.rep.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.rep.client_cert: '"((AUCTIONEER_REP_CERT))"'
    properties.diego.auctioneer.rep.client_key: '"((AUCTIONEER_REP_CERT_KEY))"'
    properties.diego.auctioneer.server_cert: '"((AUCTIONEER_SERVER_CERT))"'
    properties.diego.auctioneer.server_key: '"((AUCTIONEER_SERVER_CERT_KEY))"'
    properties.diego.bbs.auctioneer.api_location: diego-brain-auctioneer.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):9016
    properties.diego.bbs.auctioneer.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.auctioneer.client_cert: '"((BBS_AUCTIONEER_CERT))"'
    properties.diego.bbs.auctioneer.client_key: '"((BBS_AUCTIONEER_CERT_KEY))"'
    properties.diego.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.encryption_keys: '[{"label": "active", "passphrase": "((BBS_ACTIVE_KEY_PASSPHRASE))"}]'
    properties.diego.bbs.locket.api_location: '"locket-locket.((KUBERNETES_NAMESPACE)):8891"'
    properties.diego.bbs.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.bbs.rep.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.rep.client_cert: '"((BBS_REP_CERT))"'
    properties.diego.bbs.rep.client_key: '"((BBS_REP_CERT_KEY))"'
    properties.diego.bbs.server_cert: '"((BBS_SERVER_CRT))"'
    properties.diego.bbs.server_key: '"((BBS_SERVER_CRT_KEY))"'
    properties.diego.bbs.sql.ca_cert: ((INTERNAL_CA_CERT))
    properties.diego.bbs.sql.db_host: mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.diego.bbs.sql.db_password: ((MYSQL_DIEGO_PASSWORD))
    properties.diego.executor.disk_capacity_mb: ((DIEGO_CELL_DISK_CAPACITY_MB))
    properties.diego.executor.memory_capacity_mb: ((DIEGO_CELL_MEMORY_CAPACITY_MB))
    properties.diego.file_server.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.locket.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.locket.sql.db_host: '"mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.diego.locket.sql.db_password: '"((MYSQL_DIEGO_LOCKET_PASSWORD))"'
    properties.diego.rep.bbs.api_location: diego-api-bbs.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.diego.rep.cell_id: ((HOSTNAME))
    properties.diego.rep.locket.api_location: locket-locket.((KUBERNETES_NAMESPACE)):8891
    properties.diego.rep.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.rep.placement_tags: "[((KUBE_PZ))]"
    properties.diego.rep.zone: '"((KUBE_AZ))"'
    properties.diego.route_emitter.bbs.api_location: diego-api-bbs.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.diego.route_emitter.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.route_emitter.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.route_emitter.bbs.client_key: '"((BBS_CLIENT_CRT_KEY))"'
    properties.diego.route_emitter.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.route_emitter.nats.machines: ((KUBE_NATS_CLUSTER_IPS))((#KUBE_SIZING_NATS_COUNT))((/KUBE_SIZING_NATS_COUNT))
    properties.diego.route_emitter.nats.password: '"((NATS_PASSWORD))"'
    properties.diego.ssh_proxy.bbs.api_location: diego-api-bbs.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8889
    properties.diego.ssh_proxy.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.ssh_proxy.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.ssh_proxy.bbs.client_key: '"((BBS_CLIENT_CRT_KEY))"'
    properties.diego.ssh_proxy.cc.internal_service_hostname: api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.diego.ssh_proxy.host_key: '"((APP_SSH_KEY))"'
    properties.diego.ssh_proxy.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.ssh_proxy.uaa.ca_cert: ((UAA_CA_CERT))
    properties.diego.ssh_proxy.uaa.port: ((UAA_PORT))
    properties.diego.ssh_proxy.uaa.url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST))
    properties.diego.ssh_proxy.uaa_secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.domain: '"((DOMAIN))"'
    properties.fissile.monit.password: '"((MONIT_PASSWORD))"'
    properties.garden.apparmor_profile: '"((GARDEN_APPARMOR_PROFILE))"' # Quoting needed to pass through empty string
    properties.garden.btrfs-active: "((^GARDEN_DISABLE_BTRFS))true((/GARDEN_DISABLE_BTRFS))"
    properties.garden.dns_servers: '[((GARDEN_LINUX_DNS_SERVER))]'
    properties.garden.docker_registry_endpoint: ((GARDEN_DOCKER_REGISTRY))((^GARDEN_DOCKER_REGISTRY))null((/GARDEN_DOCKER_REGISTRY))
    properties.garden.http_proxy: '"((HTTP_PROXY))"'
    properties.garden.https_proxy: '"((HTTPS_PROXY))"'
    properties.garden.image_plugin: "((^GARDEN_DISABLE_BTRFS))/var/vcap/packages/groot-btrfs/bin/groot-btrfs((/GARDEN_DISABLE_BTRFS))"
    properties.garden.image_plugin_extra_args: ((^GARDEN_DISABLE_BTRFS))["--config", "/var/vcap/jobs/groot-btrfs/config/groot-btrfs.yaml"]((/GARDEN_DISABLE_BTRFS))
    properties.garden.insecure_docker_registry_list: '[((INSECURE_DOCKER_REGISTRIES))]'
    properties.garden.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.garden.network_mtu: ((DIEGO_CELL_NETWORK_MTU))
    properties.garden.network_pool: '"((DIEGO_CELL_SUBNET))"'
    properties.garden.no_proxy: '"((NO_PROXY))"'
    properties.garden.privileged_image_plugin: "((^GARDEN_DISABLE_BTRFS))/var/vcap/packages/groot-btrfs/bin/groot-btrfs((/GARDEN_DISABLE_BTRFS))"
    properties.garden.privileged_image_plugin_extra_args: ((^GARDEN_DISABLE_BTRFS))["--config", "/var/vcap/jobs/groot-btrfs/config/groot-btrfs-privileged.yaml"]((/GARDEN_DISABLE_BTRFS))
    properties.grootfs.insecure_docker_registry_list: '[((INSECURE_DOCKER_REGISTRIES))]'
    # How to reach the capi.cc_uploader
    properties.internal_hostname: cc-uploader-cc-uploader.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))
    properties.locks.locket.hostname: locket-locket.((KUBERNETES_NAMESPACE))
    properties.loggregator.ca_cert: ((INTERNAL_CA_CERT))
    properties.loggregator.cert: ((LOGGREGATOR_CLIENT_CERT))
    properties.loggregator.key: ((LOGGREGATOR_CLIENT_CERT_KEY))
    properties.loggregator.tls.agent.cert: '"((LOGGREGATOR_AGENT_CERT))"'
    properties.loggregator.tls.agent.key: '"((LOGGREGATOR_AGENT_CERT_KEY))"'
    properties.loggregator.tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.loggregator.tls.cc_trafficcontroller.cert: ((TRAFFICCONTROLLER_CERT))
    properties.loggregator.tls.cc_trafficcontroller.key: ((TRAFFICCONTROLLER_CERT_KEY))
    properties.loggregator.tls.doppler.cert: '"((DOPPLER_CERT))"'
    properties.loggregator.tls.doppler.key: '"((DOPPLER_CERT_KEY))"'
    properties.loggregator.tls.reverse_log_proxy.cert: '"((SYSLOG_RLP_CERT))"'
    properties.loggregator.tls.reverse_log_proxy.key: '"((SYSLOG_RLP_CERT_KEY))"'
    properties.loggregator.tls.statsd_injector.cert: '"((CC_SERVER_CRT))"'
    properties.loggregator.tls.statsd_injector.key: '"((CC_SERVER_CRT_KEY))"'
    properties.loggregator.tls.trafficcontroller.cert: '"((TRAFFICCONTROLLER_CERT))"'
    properties.loggregator.tls.trafficcontroller.key: '"((TRAFFICCONTROLLER_CERT_KEY))"'
    properties.loggregator.uaa.client_secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
    properties.login.url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    # CLUSTER_NAME is not wrapped in quotes because it has quotes in the dev env file.
    properties.name: ((CLUSTER_NAME))
    properties.nats.machines: ((KUBE_NATS_CLUSTER_IPS))((#KUBE_SIZING_NATS_COUNT))((/KUBE_SIZING_NATS_COUNT))
    properties.nats.password: '"((NATS_PASSWORD))"'
    properties.nfsbroker.allowed_options: '"((PERSI_NFS_ALLOWED_OPTIONS))"'
    properties.nfsbroker.db_hostname: 'mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))'
    properties.nfsbroker.db_password: '"((MYSQL_PERSI_NFS_PASSWORD))"'
    properties.nfsbroker.default_options: '"((PERSI_NFS_DEFAULT_OPTIONS))"'
    properties.nfsbroker.password: '"((PERSI_NFS_BROKER_PASSWORD))"'
    properties.nfsbroker.url: 'http://nfs-broker-nfsbroker.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8999'
    properties.nfsv3driver.allowed-in-mount: '"((PERSI_NFS_DRIVER_ALLOWED_IN_MOUNT))"'
    properties.nfsv3driver.allowed-in-source: '"((PERSI_NFS_DRIVER_ALLOWED_IN_SOURCE))"'
    properties.nfsv3driver.default-in-mount: '"((PERSI_NFS_DRIVER_DEFAULT_IN_MOUNT))"'
    properties.nfsv3driver.default-in-source: '"((PERSI_NFS_DRIVER_DEFAULT_IN_SOURCE))"'
    properties.nfsv3driver.disable: '((PERSI_NFS_DRIVER_DISABLE))'
    properties.nfsv3driver.ldap_host: '"((PERSI_NFS_DRIVER_LDAP_HOST))"'
    properties.nfsv3driver.ldap_port: '"((PERSI_NFS_DRIVER_LDAP_PORT))"'
    properties.nfsv3driver.ldap_proto: '"((PERSI_NFS_DRIVER_LDAP_PROTOCOL))"'
    properties.nfsv3driver.ldap_svc_password: '"((PERSI_NFS_DRIVER_LDAP_PASSWORD))"'
    properties.nfsv3driver.ldap_svc_user: '"((PERSI_NFS_DRIVER_LDAP_USER))"'
    properties.nfsv3driver.ldap_user_fqdn: '"((PERSI_NFS_DRIVER_LDAP_USER_FQDN))"'
    properties.nfsv3driver.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.opensuse42-rootfs.trusted_certs: '"((ROOTFS_TRUSTED_CERTS))((#ROOTFS_TRUSTED_CERTS))\n((/ROOTFS_TRUSTED_CERTS))((INTERNAL_CA_CERT))"'

    properties.opi.cc_ca: "((INTERNAL_CA_CERT))"
    properties.opi.cc_cert: "((CC_SERVER_CRT))"
    properties.opi.cc_internal_api: "https://api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):9023"
    properties.opi.cc_key: "((CC_SERVER_CRT_KEY))"
    properties.opi.cc_uploader_ip: "((CC_UPLOADER_CC_UPLOADER_SERVICE_HOST))"
    properties.opi.eirini_address: "http://eirini-opi.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8085"
    properties.opi.kube_namespace: "((EIRINI_KUBE_NAMESPACE))"
    properties.opi.kube_service_host: "((KUBERNETES_SERVICE_HOST))"
    properties.opi.kube_service_port: "((KUBERNETES_SERVICE_PORT))"
    properties.opi.loggregator_address: "doppler-doppler.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8082"
    properties.opi.loggregator_ca: "((INTERNAL_CA_CERT))"
    properties.opi.loggregator_cert: "((DOPPLER_CERT))"
    properties.opi.loggregator_key: "((DOPPLER_CERT_KEY))"
    properties.opi.metrics_source_address: "((EIRINI_KUBE_HEAPSTER_ADDRESS))"
    # TODO: this needs to be fixed upstream - it should be an array
    properties.opi.nats_ip: "nats-0.nats-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"
    properties.opi.nats_password: "((NATS_PASSWORD))"
    properties.opi.registry_address: "registry.((DOMAIN))"
    properties.opi.stager_image: ((EIRINI_IMAGE))

    properties.router.balancing_algorithm: '"((ROUTER_BALANCING_ALGORITHM))"'
    properties.router.client_cert_validation: '"((ROUTER_CLIENT_CERT_VALIDATION))"'
    # We use mysql because it comes up without any other dependencies and its critical for the cluster
    properties.router.dns_health_check_host: 'mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)).'
    properties.router.force_forwarded_proto_https: ((FORCE_FORWARDED_PROTO_AS_HTTPS))
    properties.router.forwarded_client_cert: "((ROUTER_FORWARDED_CLIENT_CERT))"
    properties.router.logging_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.router.route_services_secret: '"((ROUTER_SERVICES_SECRET))"'
    properties.router.status.password: '"((ROUTER_STATUS_PASSWORD))"'
    properties.router.tls_pem: '((#ROUTER_TLS_PEM))((ROUTER_TLS_PEM))((/ROUTER_TLS_PEM))((^ROUTER_TLS_PEM))[{cert_chain: "((ROUTER_SSL_CERT))", private_key: "((ROUTER_SSL_CERT_KEY))"}]((/ROUTER_TLS_PEM))'
    properties.routing_api.locket.api_location: '"locket-locket.((KUBERNETES_NAMESPACE)):8891"'
    properties.routing_api.locket.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.routing_api.locket.client_cert: '"((DIEGO_CLIENT_CERT))"'
    properties.routing_api.locket.client_key: '"((DIEGO_CLIENT_CERT_KEY))"'
    properties.routing_api.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.routing_api.port: 3000((#KUBERNETES_NAMESPACE))((/KUBERNETES_NAMESPACE))
    properties.routing_api.router_groups: '[{"name":"default-tcp", "type":"tcp", "reservable_ports":"((KUBE_SIZING_TCP_ROUTER_PORTS_TCP_ROUTE_MIN))-((KUBE_SIZING_TCP_ROUTER_PORTS_TCP_ROUTE_MAX))"}]'
    properties.routing_api.sqldb.host: "mysql-set.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"
    properties.routing_api.sqldb.password: "((MYSQL_ROUTING_API_PASSWORD))"
    properties.routing_api.system_domain: '"((DOMAIN))"'
    properties.routing_api.uri: '"http://routing-api-routing-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.routing_api.url: '"http://routing-api-routing-api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN))"'
    properties.scalablesyslog.adapter.logs.addr: '"log-api-reverse-log-proxy.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8082"'
    properties.scalablesyslog.adapter.tls.ca: '"((INTERNAL_CA_CERT))"'
    properties.scalablesyslog.adapter.tls.cert: '"((SYSLOG_ADAPT_CERT))"'
    properties.scalablesyslog.adapter.tls.key: '"((SYSLOG_ADAPT_CERT_KEY))"'
    properties.scalablesyslog.adapter_rlp.tls.ca: '"((INTERNAL_CA_CERT))"'
    properties.scalablesyslog.adapter_rlp.tls.cert: '"((SYSLOG_ADAPT_CERT))"'
    properties.scalablesyslog.adapter_rlp.tls.key: '"((SYSLOG_ADAPT_CERT_KEY))"'
    properties.scalablesyslog.scheduler.api.url: https://api.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):9023
    properties.scalablesyslog.scheduler.tls.api.ca: '"((INTERNAL_CA_CERT))"'
    properties.scalablesyslog.scheduler.tls.api.cert: '"((SYSLOG_SCHED_CERT))"'
    properties.scalablesyslog.scheduler.tls.api.key: '"((SYSLOG_SCHED_CERT_KEY))"'
    properties.scalablesyslog.scheduler.tls.client.ca: '"((INTERNAL_CA_CERT))"'
    properties.scalablesyslog.scheduler.tls.client.cert: '"((SYSLOG_SCHED_CERT))"'
    properties.scalablesyslog.scheduler.tls.client.key: '"((SYSLOG_SCHED_CERT_KEY))"'

    properties.scf.eirini.cert_copier_image: "((EIRINI_CERT_COPIER_IMAGE))"
    properties.scf.eirini.doppler_address: "doppler-doppler.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8082"
    properties.scf.eirini.doppler_address_with_az: "doppler-doppler.((KUBERNETES_NAMESPACE)).svc.((KUBERNETES_CLUSTER_DOMAIN)):8082"
    properties.scf.eirini.enabled: ((ENABLE_EIRINI))
    properties.scf.eirini.fluentd_image: "((EIRINI_FLUENTD_IMAGE))"
    properties.scf.eirini.namespace: "((EIRINI_KUBE_NAMESPACE))"
    properties.scf.eirini.registry.address: "registry.((DOMAIN))"

    properties.scf.internal-ca-cert: '"((INTERNAL_CA_CERT))"'
    properties.scf.secrets_generation_name: "((KUBE_SECRETS_GENERATION_NAME))"
    properties.scf.uaa.internal-url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.scf.uaa.root-zone.url: https://((UAA_HOST)):((UAA_PORT))
    properties.scf_set_proxy.running_http_proxy: '"((HTTP_PROXY))"'
    properties.scf_set_proxy.running_https_proxy: '"((HTTPS_PROXY))"'
    properties.scf_set_proxy.running_no_proxy: '"((NO_PROXY))"'
    properties.scf_set_proxy.staging_http_proxy: '"((HTTP_PROXY))"'
    properties.scf_set_proxy.staging_https_proxy: '"((HTTPS_PROXY))"'
    properties.scf_set_proxy.staging_no_proxy: '"((NO_PROXY))"'
    properties.sle15-rootfs.trusted_certs: '"((ROOTFS_TRUSTED_CERTS))((#ROOTFS_TRUSTED_CERTS))\n((/ROOTFS_TRUSTED_CERTS))((INTERNAL_CA_CERT))"'
    properties.smoke_tests.api: '"api.((DOMAIN))"'
    properties.smoke_tests.apps_domain: '["((DOMAIN))"]'
    properties.smoke_tests.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.support_address: '"((SUPPORT_ADDRESS))"'
    properties.system_domain: '"((DOMAIN))"'
    properties.tcp_emitter.oauth_secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.tcp_router.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.tcp_router.oauth_secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.tls.cert: '"((DIEGO_CLIENT_CERT))"'
    properties.tls.key: '"((DIEGO_CLIENT_CERT_KEY))"'
    properties.uaa.admin.client_secret: '"((UAA_ADMIN_CLIENT_SECRET))"'
    properties.uaa.ca_cert: '"((UAA_CA_CERT))((^UAA_CA_CERT))((INTERNAL_CA_CERT))((/UAA_CA_CERT))"'
    properties.uaa.client_secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.uaa.clients.app_autoscaler.secret: ((AUTOSCALER_UAA_CLIENT_SECRET))
    properties.uaa.clients.cc-service-dashboards.secret: '"((UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET))"'
    properties.uaa.clients.cc_routing.secret: '"((UAA_CLIENTS_CC_ROUTING_SECRET))"'
    properties.uaa.clients.cc_service_key_client.secret: '"((UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET))"'
    properties.uaa.clients.cf-usb.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.uaa.clients.cf.redirect-uri: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))/login
    properties.uaa.clients.cloud_controller.secret: ((UAA_CC_CLIENT_SECRET))
    properties.uaa.clients.cloud_controller_username_lookup.secret: '"((UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET))"'
    properties.uaa.clients.credhub_user_cli.secret: '"((UAA_CLIENTS_CREDHUB_USER_CLI_SECRET))"'
    properties.uaa.clients.doppler.redirect-uri: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.uaa.clients.doppler.secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
    properties.uaa.clients.gorouter.secret: '"((UAA_CLIENTS_GOROUTER_SECRET))"'
    properties.uaa.clients.login.redirect-uri: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.uaa.clients.login.secret: '"((UAA_CLIENTS_LOGIN_SECRET))"'
    properties.uaa.clients.scf_auto_config.secret: '"((UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET))"'
    properties.uaa.clients.ssh-proxy.redirect-uri: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))/login
    properties.uaa.clients.ssh-proxy.secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.uaa.clients.tcp_emitter.secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.uaa.clients.tcp_router.secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.uaa.hostname: '((KUBERNETES_NAMESPACE)).((UAA_HOST))'
    properties.uaa.internal_url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT)) # For loggregator
    properties.uaa.port: ((UAA_PORT))
    properties.uaa.scim.users: '[{name: admin, password: ((CLUSTER_ADMIN_PASSWORD)), groups: [((CLUSTER_ADMIN_AUTHORITIES))]}]'
    properties.uaa.ssl.port: ((UAA_PORT))
    properties.uaa.tls_port: ((UAA_PORT))
    properties.uaa.token_endpoint: ((KUBERNETES_NAMESPACE)).((UAA_HOST))
    properties.uaa.url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.version: '"((CLUSTER_VERSION))"'
    # Really a loggregator_agent job property
    properties.zone: '"((KUBE_AZ))"'
variables:
- name: ACCEPTANCE_TEST_NODES
  options:
    default: 4
    description: >
      The number of parallel test executors to spawn for Cloud Foundry
      acceptance tests. The larger the number the higher the stress on the system.
- name: ALLOWED_CORS_DOMAINS
  options:
    default: []
    description: List of domains (including scheme) from which Cross-Origin requests
      will be accepted, a * can be used as a wildcard for any part of a domain.
    required: true
- name: ALLOW_APP_SSH_ACCESS
  options:
    default: true
    description: Allow users to change the value of the app-level allow_ssh attribute.
    required: true
- name: APP_SSH_KEY
  options:
    secret: true
    description: PEM encoded RSA private key used to identify host.
    required: true
  type: ssh
- name: APP_SSH_KEY_FINGERPRINT
  options:
    secret: true
    description: MD5 fingerprint of the host key of the SSH proxy that brokers connections
      to application instances.
    required: true
- name: APP_TOKEN_UPLOAD_GRACE_PERIOD
  options:
    default: 1200
    description: Extra token expiry time while uploading big apps, in seconds.
    required: true
- name: AUCTIONEER_REP_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    description: PEM-encoded certificate
    required: true
  type: certificate
- name: AUCTIONEER_REP_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key
    required: true
- name: AUCTIONEER_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    role_name: diego-brain-auctioneer
    description: PEM-encoded server certificate
    required: true
  type: certificate
- name: AUCTIONEER_SERVER_CERT_KEY
  options:
    secret: true
    description: PEM-encoded server key
    required: true
- name: AUTOSCALER_API_SERVER_CACHE_TTL
  options:
    default: 600
    description: "The TTL of credential cache for the Autoscaler custom metrics, in seconds"
- name: AUTOSCALER_API_SERVER_DB_CONFIG_IDLE_TIMEOUT
  options:
    default: 100
    description: Idle connection timeout for the Autoscaler API Server database, in
      seconds.
- name: AUTOSCALER_API_SERVER_DB_CONFIG_MAX_CONNECTIONS
  options:
    default: 10
    description: The maximum number of connections to the Autoscaler API Server database.
- name: AUTOSCALER_API_SERVER_DB_CONFIG_MIN_CONNECTIONS
  options:
    default: 0
    description: The minimum number of connections to the Autoscaler API Server database.
- name: AUTOSCALER_API_SERVER_INFO_BUILD
  options:
    default: beta
    description: The build version of Autoscaler. It should be defined when it is
      deployed to a product environment.
- name: AUTOSCALER_API_SERVER_INFO_DESCRIPTION
  options:
    default: autoscaler
    description: The description of Autoscaler. It should be defined when it is deployed
      to a product environment.
- name: AUTOSCALER_API_SERVER_INFO_NAME
  options:
    default: autoscalerapiserver
    description: The name of the Autoscaler API Server. It should be defined when
      it is deployed to a product environment.
- name: AUTOSCALER_API_SERVER_INFO_SUPPORT_URL
  options:
    default: ''
    description: The support url of autoscaler where the users could find support
      information. It should be defined when it is deployed to a product environment.
- name: AUTOSCALER_APPMETRICS_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME
  options:
    default: 60s
    description: The maximum age of a connection that can be reused for the Autoscaler
      appmetrics database.
- name: AUTOSCALER_APPMETRICS_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS
  options:
    default: 10
    description: The maximum number of connections to the Autoscaler appmetrics database.
- name: AUTOSCALER_APPMETRICS_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS
  options:
    default: 100
    description: The minimum number of connections to the Autoscaler appmetrics database.
- name: AUTOSCALER_ASAPI_CLIENT_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - as_api_client
    description: A PEM-encoded TLS certificate for clients to connect to the Autoscaler
      API. This includes the Autoscaler ApiServer and the Service Broker.
    required: true
  type: certificate
- name: AUTOSCALER_ASAPI_CLIENT_CERT_KEY
  options:
    secret: true
    description: A PEM-encoded TLS key for clients to connect to the Autoscaler API.
      This includes the Autoscaler ApiServer and the Service Broker.
    required: true
- name: AUTOSCALER_ASAPI_PUBLIC_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - autoscaler.{{.DOMAIN}}
    description: A PEM-encoded TLS certificate of the Autoscaler API public https
      server. This includes the Autoscaler ApiServer and the Service Broker.
    required: true
  type: certificate
- name: AUTOSCALER_ASAPI_PUBLIC_SERVER_CERT_KEY
  options:
    secret: true
    description: A PEM-encoded TLS key of the Autoscaler API public https server.
      This includes the Autoscaler ApiServer and the Service Broker.
    required: true
- name: AUTOSCALER_ASAPI_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - autoscaler-api-apiserver.{{.KUBERNETES_NAMESPACE}}.svc.{{.KUBERNETES_CLUSTER_DOMAIN}}
    description: A PEM-encoded TLS certificate of the Autoscaler API https server.
      This includes the Autoscaler ApiServer and the Service Broker.
    required: true
  type: certificate
- name: AUTOSCALER_ASAPI_SERVER_CERT_KEY
  options:
    secret: true
    description: A PEM-encoded TLS key of the Autoscaler API https server. This includes
      the Autoscaler ApiServer and the Service Broker.
    required: true
- name: AUTOSCALER_ASMETRICS_CLIENT_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - as_metrics_client
    description: A PEM-encoded TLS certificate for clients to connect to the Autoscaler
      Metrics. This includes the Autoscaler Metrics Collector and Event Generator.
    required: true
  type: certificate
- name: AUTOSCALER_ASMETRICS_CLIENT_CERT_KEY
  options:
    secret: true
    description: A PEM-encoded TLS key for clients to connect to the Autoscaler Metrics.
      This includes the Autoscaler Metrics Collector and Event Generator.
    required: true
- name: AUTOSCALER_ASMETRICS_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - autoscaler-metrics-metricscollector.{{.KUBERNETES_NAMESPACE}}.svc.{{.KUBERNETES_CLUSTER_DOMAIN}}
    description: A PEM-encoded TLS certificate of the Autoscaler Metrics https server.
      This includes the Autoscaler Metrics Collector.
    required: true
  type: certificate
- name: AUTOSCALER_ASMETRICS_SERVER_CERT_KEY
  options:
    secret: true
    description: A PEM-encoded TLS key of the Autoscaler Metrics https server. This
      includes the Autoscaler Metrics Collector.
    required: true
- name: AUTOSCALER_CF_SKIP_SSL_VALIDATION
  options:
    default: true
    description: Whether to skip ssl validation when Autoscaler components to communicate
      with CloudFoundry components.
- name: AUTOSCALER_DATABASE_MAX_CONNECTIONS
  options:
    default: 1000
    description: The maximum number of connections the Autoscaler postgres database
      server could serve.
- name: AUTOSCALER_DB_PASSWORD
  options:
    secret: true
    description: The password for the Autoscaler postgres database.
    required: true
  type: password
- name: AUTOSCALER_DEFAULT_BREACH_DURATION_SECS
  options:
    default: 300
    description: The default breach duration for the Autoscaler Event Generator, in
      seconds.The breach duration means the App Autoscaler won’t take the desired
      adjustment until the application has been breaching the Autoscaler policy for
      a period longer than breach_duration_secs setting.
- name: AUTOSCALER_DEFAULT_COOLDOWN_SECS
  options:
    default: 300
    description: The default cooldown duration between two scaling action for the
      Autoscaler Event Generator, in seconds.
- name: AUTOSCALER_DEFAULT_STAT_WINDOW_SECS
  options:
    default: 300
    description: The default statistic window duration between two scaling action
      for the Autoscaler Event Generator, in seconds.
- name: AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_APP_METRIC_CHANNEL_SIZE
  options:
    default: 1000
    description: The size of golang channel used by the Autoscaler Event Generator
      as a buffer to save metrics by batch.
- name: AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_APP_MONITOR_CHANNEL_SIZE
  options:
    default: 200
    description: The size of golang channel used by the Autoscaler Event Generator
      to exchange data.
- name: AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_EXECUTE_INTERVAL
  options:
    default: 40s
    description: The duration defines how long does Autoscaler Event Generator aggregate
      appmetrics.
- name: AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_METRIC_POLLER_COUNT
  options:
    default: 20
    description: The number of metricpollers in Autoscaler Event Generator.
- name: AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_POLICY_POLLER_INTERVAL
  options:
    default: 40s
    description: The duration defines how long does the Autoscaler Event Generator
      reload data from policy database.
- name: AUTOSCALER_EVENT_GENERATOR_AGGREGATOR_SAVE_INTERVAL
  options:
    default: 5s
    description: The duration defines how long does the Autoscaler Event Generator
      save appmetrics to database by batch.
- name: AUTOSCALER_EVENT_GENERATOR_CIRCUIT_BREAKER_BACK_OFF_INITIAL_INTERVAL
  options:
    default: 5m
    description: The initial exponential back off interval for the circuit breaker
      of the Autoscaler Event Generator.
- name: AUTOSCALER_EVENT_GENERATOR_CIRCUIT_BREAKER_BACK_OFF_MAX_INTERVAL
  options:
    default: 120m
    description: The maximum exponential back off interval for the circuit breaker
      of the Autoscaler Event Generator.
- name: AUTOSCALER_EVENT_GENERATOR_CIRCUIT_BREAKER_CONSECUTIVE_FAILURE_COUNT
  options:
    default: 3
    description: The number of consecutive failure to trip the circuit down for the
      circuit breaker of the Autoscaler Event Generator.
- name: AUTOSCALER_EVENT_GENERATOR_EVALUATOR_EVALUATION_MANAGER_EXECUTE_INTERVAL
  options:
    default: 40s
    description: The duration defines how long does the Autoscaler Event Generator
      evaluate appmetrics.
- name: AUTOSCALER_EVENT_GENERATOR_EVALUATOR_EVALUATOR_COUNT
  options:
    default: 20
    description: The number of evaluators in the Autoscaler Event Generator.
- name: AUTOSCALER_EVENT_GENERATOR_EVALUATOR_TRIGGER_ARRAY_CHANNEL_SIZE
  options:
    default: 200
    description: The size of golang channel used by the Autoscaler Event Generator
      App Evaluation Manager to pass triggers to evaluators.
- name: AUTOSCALER_INSTANCE_METRICS_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME
  options:
    default: 60s
    description: The maximum age of a connection that can be reused for the Autoscaler
      instance metrics database.
- name: AUTOSCALER_INSTANCE_METRICS_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS
  options:
    default: 10
    description: The maximum number of idle connections to the Autoscaler instance
      metrics database.
- name: AUTOSCALER_INSTANCE_METRICS_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS
  options:
    default: 100
    description: The maximum number of connections to the Autoscaler instance metrics
      database.
- name: AUTOSCALER_LOCK_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME
  options:
    default: 60s
    description: The maximum age of a connection that can be reused for the Autoscaler
      lock database.
- name: AUTOSCALER_LOCK_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS
  options:
    default: 10
    description: The maximum number of idle connections to the Autoscaler lock database.
- name: AUTOSCALER_LOCK_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS
  options:
    default: 100
    description: The maximum number of connections to the Autoscaler lock database.
- name: AUTOSCALER_METRICS_COLLECTOR_COLLECTOR_COLLECT_INTERVAL
  options:
    default: 30s
    description: The duration defines how long does the Autoscaler Metrics Collector
      aggregate collected instance metrics.
- name: AUTOSCALER_METRICS_COLLECTOR_COLLECTOR_REFRESH_INTERVAL
  options:
    default: 60s
    description: The duration defines how long does the Autoscaler Metrics Collector
      reload data from policy database.
- name: AUTOSCALER_METRICS_COLLECTOR_COLLECTOR_SAVE_INTERVAL
  options:
    default: 30s
    description: The duration defines how long does the Autoscaler Metrics Collector
      save instance metrics to database by batch.
- name: AUTOSCALER_METRICS_COLLECTOR_COLLECT_METHOD
  options:
    default: streaming
    description: >
      The method type of the Autoscaler Metrics Collector to fetch metrics
      from cloudfoundry: polling or streaming.
- name: AUTOSCALER_OPERATOR_APP_METRICS_DB_CUTOFF_DAYS
  options:
    default: 30
    description: The duration defines how many days of appmetrics data does the Autoscaler
      Operator kept for each pruning.
- name: AUTOSCALER_OPERATOR_APP_METRICS_DB_REFRESH_INTERVAL
  options:
    default: 24h
    description: The duration between two pruning opertions for appmetrics database
      in the Autoscaler Operator.
- name: AUTOSCALER_OPERATOR_APP_SYNC_INTERVAL
  options:
    description: "The interval of synchronizing applications information between AutoScaler
      policy database and Cloudfoundry."
    default: 24h
- name: AUTOSCALER_OPERATOR_ENABLE_DB_LOCK
  options:
    default: true
    description: Whether to enable the Autoscaler Operator's db lock. If there are more
      than one operators, the value should be true
- name: AUTOSCALER_OPERATOR_INSTANCE_METRICS_DB_CUTOFF_DAYS
  options:
    default: 30
    description: The duration defines how many days of instance metrics data does
      the Autoscaler Operator kept for each pruning.
- name: AUTOSCALER_OPERATOR_INSTANCE_METRICS_DB_REFRESH_INTERVAL
  options:
    default: 24h
    description: The duration between two pruning opertions for instance metrics database
      in the Autoscaler Operator.
- name: AUTOSCALER_OPERATOR_LOCK_RETRY_INTERVAL
  options:
    default: 10s
    description: The interval for each Autoscaler Operator instance to retry to get
      database lock.
- name: AUTOSCALER_OPERATOR_LOCK_TTL
  options:
    default: 15s
    description: The maximum duration of a Autoscaler Operator instance could hold the
      database lock.
- name: AUTOSCALER_OPERATOR_SCALING_ENGINE_DB_CUTOFF_DAYS
  options:
    default: 30
    description: The duration defines how many days of the scaling history data does
      the Autoscaler Operator kept for each pruning.
- name: AUTOSCALER_OPERATOR_SCALING_ENGINE_DB_FRESH_INTERVAL
  options:
    default: 24h
    description: The duration between two pruning opertions for scalingengine database
      in the Autoscaler Operator.
- name: AUTOSCALER_OPERATOR_SCALING_ENGINE_SYNC_INTERVAL
  options:
    description: "The interval of synchronizing the Autoscaler Scaling Engine active schedules with Autoscaler Scheduler."
    default: 600s
- name: AUTOSCALER_OPERATOR_SCHEDULER_SYNC_INTERVAL
  options:
    description: "The interval of synchronizing the Autoscaler Scheduler schedules with policy database."
    default: 600s
- name: AUTOSCALER_POLICY_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME
  options:
    default: 60s
    description: The maximum age of a connection that can be reused for the Autoscaler
      policy database.
- name: AUTOSCALER_POLICY_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS
  options:
    default: 10
    description: The maximum number of idle connections to the Autoscaler policy database.
- name: AUTOSCALER_POLICY_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS
  options:
    default: 100
    description: The maximum number of connections to the Autoscaler policy database.
- name: AUTOSCALER_SCALING_ENGINE_CLIENT_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - as_scheduler_client
    description: A PEM-encoded TLS certificate for clients to connect to the Autoscaler Scaling Engine.
    required: true
  type: certificate
- name: AUTOSCALER_SCALING_ENGINE_CLIENT_CERT_KEY
  options:
    secret: true
    description: A PEM-encoded TLS key for clients to connect to the Autoscaler Scaling Engine.
    required: true
- name: AUTOSCALER_SCALING_ENGINE_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME
  options:
    default: 60s
    description: The maximum age of a connection that can be reused for the Autoscaler
      Scaling Engine database.
- name: AUTOSCALER_SCALING_ENGINE_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS
  options:
    default: 10
    description: The maximum number of idle connections to the Autoscaler Scaling
      Engine database.
- name: AUTOSCALER_SCALING_ENGINE_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS
  options:
    default: 100
    description: The maximum number of connections to the Autoscaler Scaling Engine
      database.
- name: AUTOSCALER_SCALING_ENGINE_HEALTH_EMIT_INTERVAL
  options:
    description: The time interval to emit health metrics for the Autoscaler Scaling
      Engine."
    default: 15s
- name: AUTOSCALER_SCALING_ENGINE_LOCK_SIZE
  options:
    default: 32
    description: The lock number of the Autoscaler Scaling Engine to do synchronization
      for multiple scaling requests.
- name: AUTOSCALER_SCALING_ENGINE_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - autoscaler-scalingengine-scalingengine.{{.KUBERNETES_NAMESPACE}}.svc.{{.KUBERNETES_CLUSTER_DOMAIN}}
    description: A PEM-encoded TLS certificate of the Autoscaler Scaling Engine https server.
    required: true
  type: certificate
- name: AUTOSCALER_SCALING_ENGINE_SERVER_CERT_KEY
  options:
    secret: true
    description: A PEM-encoded TLS key of the Autoscaler Scaling Engine https server.
    required: true
- name: AUTOSCALER_SCHEDULER_CLIENT_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - as_scheduler_client
    description: A PEM-encoded TLS certificate for clients to connect to the Autoscaler Scheduler.
    required: true
  type: certificate
- name: AUTOSCALER_SCHEDULER_CLIENT_CERT_KEY
  options:
    secret: true
    description: A PEM-encoded TLS key for clients to connect to the Autoscaler Scheduler.
    required: true
- name: AUTOSCALER_SCHEDULER_DB_CONNECTION_CONFIG_CONNECTION_MAX_LIFETIME
  options:
    default: 60s
    description: The maximum age of a connection that can be reused for the Autoscaler
      Scheduler database.
- name: AUTOSCALER_SCHEDULER_DB_CONNECTION_CONFIG_MAX_IDLE_CONNECTIONS
  options:
    default: 10
    description: The maximum number of idle connections to the Autoscaler Scheduler
      database.
- name: AUTOSCALER_SCHEDULER_DB_CONNECTION_CONFIG_MAX_OPEN_CONNECTIONS
  options:
    default: 100
    description: The maximum number of connections to the Autoscaler Scaling Engine
      database.
- name: AUTOSCALER_SCHEDULER_JOB_RESCHEDULE_INTERVAL_MILISECOND
  options:
    default: 100
    description: Rescheduling interval for quartz job for the Autoscaler Scheduler,
      in milliseconds.
- name: AUTOSCALER_SCHEDULER_JOB_RESCHEDULE_MAXCOUNT
  options:
    default: 6
    description: Maximum number of jobs can be re-scheduled in the Autoscaler Scheduler.
- name: AUTOSCALER_SCHEDULER_NOTIFICATION_RESCHEDULE_MAXCOUNT
  options:
    default: 3
    description: Maximum number of notification sent to Autoscaler Scaling Engine
      for job re-schedule.
- name: AUTOSCALER_SCHEDULER_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - autoscaler-scheduler-scheduler.{{.KUBERNETES_NAMESPACE}}.svc.{{.KUBERNETES_CLUSTER_DOMAIN}}
    description: A PEM-encoded TLS certificate of the Autoscaler Scheduler https server.
    required: true
  type: certificate
- name: AUTOSCALER_SCHEDULER_SERVER_CERT_KEY
  options:
    secret: true
    description: A PEM-encoded TLS key of the Autoscaler Scheduler https server.
    required: true
- name: AUTOSCALER_SERVICE_BROKER_DB_CONFIG_IDLE_TIMEOUT
  options:
    default: 1000
    description: Idle connection timeout for the Autoscaler Service Broker database,
      in seconds.
- name: AUTOSCALER_SERVICE_BROKER_DB_CONFIG_MAX_CONNECTIONS
  options:
    default: 10
    description: The maximum number of connections to the Autoscaler Service Broker
      database.
- name: AUTOSCALER_SERVICE_BROKER_DB_CONFIG_MIN_CONNECTIONS
  options:
    default: 0
    description: The minimum number of connections to the Autoscaler Service Broker
      database.
- name: AUTOSCALER_SERVICE_BROKER_HTTP_REQUEST_TIMEOUT
  options:
    default: 5000
    description: The timeout in milliseconds for http request from Autoscaler Service
      Broker to other Autoscaler components.
- name: AUTOSCALER_SERVICE_BROKER_PASSWORD
  options:
    secret: true
    description: The password for the Autoscaler Service Broker.
    required: true
  type: password
- name: AUTOSCALER_SERVICE_BROKER_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - autoscaler-servicebroker-servicebroker.{{.KUBERNETES_NAMESPACE}}.svc.{{.KUBERNETES_CLUSTER_DOMAIN}}
    description: A PEM-encoded TLS certificate of the Autoscaler API https server.
      This includes the Autoscaler ApiServer and the Service Broker.
    required: true
  type: certificate
- name: AUTOSCALER_SERVICE_BROKER_SERVER_CERT_KEY
  options:
    secret: true
    description: A PEM-encoded TLS key of the Autoscaler API https server. This includes
      the Autoscaler ApiServer and the Service Broker.
    required: true
- name: AUTOSCALER_SERVICE_OFFERING_ENABLED
  options:
    default: false
    description: Whether Autoscaler is provided as a cloudfoundry service, default
      is false.
- name: AUTOSCALER_UAA_CLIENT_SECRET
  options:
    secret: true
    description: the uaa client secret used by Autoscaler.
  type: password
- name: AZ_LABEL_NAME
  options:
    default: ''
    description: The name of the metadata label to query on worker
      nodes to get AZ information. When set, the cells will query
      their worker node for AZ information and inject the result into
      cloudfoundry via the KUBE_AZ parameter. When left to the default
      no custom AZ processing is done.
    internal: true
- name: BBS_ACTIVE_KEY_PASSPHRASE
  options:
    secret: true
    immutable: true
    description: The password for access to the diego BBS database.
    required: true
  type: password
- name: BBS_AUCTIONEER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    description: PEM-encoded certificate
    required: true
  type: certificate
- name: BBS_AUCTIONEER_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key
    required: true
- name: BBS_CLIENT_CRT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    description: PEM-encoded client certificate.
    required: true
  type: certificate
- name: BBS_CLIENT_CRT_KEY
  options:
    secret: true
    description: PEM-encoded client key.
    required: true
- name: BBS_REP_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    description: PEM-encoded certificate
    required: true
  type: certificate
- name: BBS_REP_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key
    required: true
- name: BBS_SERVER_CRT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    role_name: diego-api-bbs
    description: PEM-encoded client certificate.
    required: true
  type: certificate
- name: BBS_SERVER_CRT_KEY
  options:
    secret: true
    description: PEM-encoded client key.
    required: true

- name: BITS_ADMIN_USERS_PASSWORD
  options:
    secret: true
    description: The basic auth password that the Cloud Controller uses to connect to the admin endpoint on webdav.
    required: true
  type: password
- name: BITS_SERVICE_SECRET
  options:
    secret: true
    description: This is the key secret Bits-Service uses and clients should use to generate signed URLs.
    required: true
  type: password
- name: BITS_SERVICE_SSL_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    role_name: bits
    description: PEM-encoded client certificate.
    required: true
    alternative_names:
    - bits-bits-service.{{.KUBERNETES_NAMESPACE}}.svc.{{.KUBERNETES_CLUSTER_DOMAIN}}
  type: certificate
- name: BITS_SERVICE_SSL_CERT_KEY
  options:
    secret: true
    description: PEM-encoded client key.
    required: true

- name: BLOBSTORE_ACCESS_RULES
  options:
    default: allow 10.0.0.0/8; allow 172.16.0.0/12; allow 192.168.0.0/16;
    description: List of allow / deny rules for the blobstore internal server. Will
      be followed by 'deny all'. Each entry must be follow by a semicolon.
    required: true
- name: BLOBSTORE_MAX_UPLOAD_SIZE
  options:
    default: 5000
    description: Maximal allowed file size for upload to blobstore, in megabytes.
    required: true
- name: BLOBSTORE_PASSWORD
  options:
    secret: true
    description: The basic auth password that Cloud Controller uses to connect to
      the blobstore server. Auto-generated if not provided. Passwords must be alphanumeric
      (URL-safe).
    required: true
  type: password
- name: BLOBSTORE_SECURE_LINK
  options:
    secret: true
    description: The secret used for signing URLs between Cloud Controller and blobstore.
    required: true
  type: password
- name: BLOBSTORE_TLS_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    role_name: blobstore-blobstore
    description: The PEM-encoded certificate (optionally as a certificate chain) for
      serving blobs over TLS/SSL.
    required: true
  type: certificate
- name: BLOBSTORE_TLS_CERT_KEY
  options:
    secret: true
    description: The PEM-encoded private key for signing TLS/SSL traffic.
    required: true
- name: BROKER_CLIENT_TIMEOUT_SECONDS
  options:
    default: '70'
    description: For requests to service brokers, this is the HTTP (open and read)
      timeout setting, in seconds.
- name: BULK_API_PASSWORD
  options:
    secret: true
    description: The password for the bulk api.
    required: true
  type: password
- name: CATS_SUITES
  options:
    internal: true
    description: The set of CAT test suites to run. If not specified it falls back
      to a hardwired set of suites.
- name: CC_DB_CURRENT_KEY_LABEL
  options:
    description: The key used to encrypt entries in the CC database
    default: ''
- name: CC_DB_ENCRYPTION_KEYS
  options:
    description: A map of labels and encryption keys
    secret: true
    default: "~"
- name: CC_PORT_PUBLIC_INSECURE
  options:
    default: 9022
    description: The CC port for plain HTTP communication.
- name: CC_PORT_PUBLIC_TLS
  options:
    default: 9024
    description: The CC port for TLS with gorouter.
- name: CC_PUBLIC_TLS_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - "api"
    - "api-set"
    - "api-set.{{ .KUBERNETES_NAMESPACE }}.svc.{{ .KUBERNETES_CLUSTER_DOMAIN }}"
    - "api.{{ .KUBERNETES_NAMESPACE }}.svc.{{ .KUBERNETES_CLUSTER_DOMAIN }}"
    description: The PEM-encoded certificate for secure TLS communication over external endpoints.
    required: true
  type: certificate
- name: CC_PUBLIC_TLS_CERT_KEY
  options:
    secret: true
    description: The PEM-encoded key for secure TLS communication over external endpoints.
    required: true
- name: CC_SERVER_CRT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    role_name: api
    description: The PEM-encoded certificate for internal cloud controller traffic.
    required: true
  type: certificate
- name: CC_SERVER_CRT_KEY
  options:
    secret: true
    description: The PEM-encoded private key for internal cloud controller traffic.
    required: true
- name: CC_UPLOADER_CC_UPLOADER_SERVICE_HOST
  options:
    type: environment
    description: IP of the cc uploader service. This is automatically set by Kubernetes.
      traffic.
- name: CC_UPLOADER_CRT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    role_name: cc-uploader-cc-uploader
    description: The PEM-encoded certificate for internal cloud controller uploader
      traffic.
    required: true
  type: certificate
- name: CC_UPLOADER_CRT_KEY
  options:
    secret: true
    description: The PEM-encoded private key for internal cloud controller uploader
      traffic.
    required: true
- name: CDN_URI
  options:
    default: ''
    description: URI for a CDN to use for buildpack downloads.
- name: CERT_EXPIRATION
  options:
    description: Expiration for generated certificates (in days)
    default: 10950
- name: CF_USB_BROKER_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    role_name: cf-usb
    description: PEM-encoded broker server certificate.
  type: certificate
- name: CF_USB_BROKER_SERVER_CERT_KEY
  options:
    secret: true
    description: PEM-encoded broker server key.
- name: CF_USB_PASSWORD
  options:
    secret: true
    example: password
    description: The password for access to the Universal Service Broker.
  type: password
- name: CLUSTER_ADMIN_AUTHORITIES
  options:
    default: scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,routing.router_groups.read,routing.router_groups.write
    description: The Oauth2 authorities available to the cluster administrator.
    required: true
- name: CLUSTER_ADMIN_PASSWORD
  options:
    secret: true
    description: The password for the cluster administrator.
    required: true
- name: CLUSTER_BUILD
  options:
    default: 2.0.2
    description: "'build' attribute in the /v2/info endpoint"
    required: true
- name: CLUSTER_DESCRIPTION
  options:
    default: SUSE Cloud Foundry
    description: "'description' attribute in the /v2/info endpoint"
    required: true
- name: CLUSTER_NAME
  options:
    default: SCF
    description: "'name' attribute in the /v2/info endpoint"
    required: true
- name: CLUSTER_VERSION
  options:
    default: 2
    description: "'version' attribute in the /v2/info endpoint"
    required: true
- name: CREDHUB_ENCRYPT_KEY
  options:
    secret: true
    immutable: true
    description: Credhub encryption key
    required: true
  type: password
- name: CREDHUB_LOG_LEVEL
  options:
    description: >
      The log level for credhub. This parameter is not supposed to be set
      by the user. To change the cluster's log level set the parameter
      `LOG_LEVEL` instead, from which this one is derived.
    type: environment
- name: CREDHUB_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - "credhub-set"
    - "server.dc1.{{.KUBERNETES_NAMESPACE}}.svc.{{.KUBERNETES_CLUSTER_DOMAIN}}"
    description: PEM-encoded server certificate
    required: true
  type: certificate
- name: CREDHUB_SERVER_CERT_KEY
  options:
    secret: true
    description: PEM-encoded server key
    required: true
- name: DB_ENCRYPTION_KEY
  options:
    secret: true
    immutable: true
    description: Key for encrypting sensitive values in the Cloud Controller database.
    required: true
  type: password
- name: DEFAULT_APP_DISK_IN_MB
  options:
    default: 1024
    description: The standard amount of disk (in MB) given to an application when
      not overriden by the user via manifest, command line, etc.
    required: true
- name: DEFAULT_APP_MEMORY
  options:
    default: 1024
    description: The standard amount of memory (in MB) given to an application when
      not overriden by the user via manifest, command line, etc.
    required: true
- name: DEFAULT_APP_SSH_ACCESS
  options:
    default: true
    description: If set apps pushed to spaces that allow SSH access will have SSH
      enabled by default.
    required: true
- name: DEFAULT_STACK
  options:
    default: *the-stack-name
    description: The default stack to use if no custom stack is specified by an app.
- name: DIEGO_CELL_DISK_CAPACITY_MB
  options:
    default: auto
    description: The container disk capacity the cell should manage. If this capacity
      is larger than the actual disk quota of the cell component, over-provisioning
      will occur.
    required: true
- name: DIEGO_CELL_MEMORY_CAPACITY_MB
  options:
    default: auto
    description: The memory capacity the cell should manage. If this capacity is larger
      than the actual memory of the cell component, over-provisioning will occur.
    required: true
- name: DIEGO_CELL_NETWORK_MTU
  options:
    default: '1400'
    description: Maximum network transmission unit length in bytes for application
      containers.
    required: true
- name: DIEGO_CELL_SUBNET
  options:
    default: 10.38.0.0/16
    description: A CIDR subnet mask specifying the range of subnets available to be
      assigned to containers.
    required: true
- name: DIEGO_CLIENT_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - locket-locket.{{.KUBERNETES_NAMESPACE}}
    - 127.0.0.1
    description: PEM-encoded client certificate
    required: true
  type: certificate
- name: DIEGO_CLIENT_CERT_KEY
  options:
    secret: true
    description: PEM-encoded client key
    required: true
- name: DISABLE_CUSTOM_BUILDPACKS
  options:
    default: false
    description: Disable external buildpacks. Only admin buildpacks and system buildpacks
      will be available to users.
    required: true
- name: DOMAIN
  options:
    example: my-scf-cluster.com
    required: true
    description: Base domain of the SCF cluster.
- name: DOPPLER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - doppler
    - log-cache
    - metron
    description: PEM-encoded certificate.
    required: true
  type: certificate
- name: DOPPLER_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key.
    required: true
- name: DROPLET_MAX_STAGED_STORED
  options:
    default: 5
    description: The number of versions of an application to keep. You will be able
      to rollback to this amount of versions.
    required: true

- name: EIRINI_CERT_COPIER_IMAGE
  options:
    default: 'splatform/eirini-cert-copier:1.0.0.4.gd8e7208'
    description: "The docker image used by Eirini to register the image registry CA cert with Docker, on each Kubernetes node"
- name: EIRINI_FLUENTD_IMAGE
  options:
    default: 'eirini/loggregator-fluentd:0.1.0'
    description: "The docker image used by Eirini to consume Kubernetes container logs"
- name: EIRINI_IMAGE
  options:
    default: 'eirini/recipe:ci-24.0.0'
    description: "Docker Image used for staging apps deployed using Eirini"
- name: EIRINI_KUBE_HEAPSTER_ADDRESS
  options:
    default: 'http://heapster.kube-system/apis/metrics/v1alpha1'
    description: "Address of Kubernetes' Heapster installation, used for reading Cloud Foundry app metrics."
- name: EIRINI_KUBE_NAMESPACE
  options:
    default: 'eirini'
    description: "The namespace used by Eirini for deploying applications."
- name: ENABLE_EIRINI
  options:
    default: 'false'
    description: "Whether to enable the Eirini component, which deploys applications on Kubernetes. This causes Diego to be disabled."

- name: ENABLE_SECURITY_EVENT_LOGGING
  options:
    default: 'false'
    description: "By default, Cloud Foundry does not enable Cloud Controller request
      logging. To enable this feature, you must set this property to \"true\". You
      can learn more about the format of the logs here https://docs.cloudfoundry.org/loggregator/cc-uaa-logging.html#cc
      \n"
- name: FORCE_FORWARDED_PROTO_AS_HTTPS
  options:
    default: false
    description: Enables setting the X-Forwarded-Proto header if SSL termination happened
      upstream and the header value was set incorrectly. When this property is set
      to true, the gorouter sets the header X-Forwarded-Proto to https. When this
      value set to false, the gorouter sets the header X-Forwarded-Proto to the protocol
      of the incoming request.
    required: true
- name: GARDEN_APPARMOR_PROFILE
  options:
    default: garden-default
    description: AppArmor profile name for garden-runc; set this to empty string to
      disable AppArmor support
- name: GARDEN_DISABLE_BTRFS
  options:
    default: ''
    description: An empty value means BTRFS is used. It's set to "true" by a script
      if GARDEN_ROOTFS_DRIVER is set to overlay-xfs.
    type: environment
- name: GARDEN_DOCKER_REGISTRY
  options:
    default: registry-1.docker.io
    description: URL pointing to the Docker registry used for fetching Docker images.
      If not set, the Docker service default is used.
    required: true
- name: GARDEN_LINUX_DNS_SERVER
  options:
    default: ''
    description: Override DNS servers to be used in containers; defaults to the same
      as the host.
- name: GARDEN_ROOTFS_DRIVER
  options:
    default: btrfs
    description: The filesystem driver to use (btrfs or overlay-xfs).
    required: true
    internal: true
- name: GO_LOG_LEVEL
  options:
    type: environment
    description: The log level for go components. This parameter is not supposed
      to be set by the user. To change the cluster's log level set the parameter
      `LOG_LEVEL` instead, from which this one is derived.
- name: HELM_IS_INSTALL
  options:
    type: environment
    description: >
      This is an environment variable built-in by fissile.
      It's set directly from the Release.IsInstall Helm property.
- name: HOSTNAME
  options:
    description: The host name of the container.  This should be automatic and should
      not be prompted.
    type: environment
- name: HTTPS_PROXY
  options:
    required: false
    description: Location of the proxy to use for secure web access.
- name: HTTP_PROXY
  options:
    required: false
    description: Location of the proxy to use for regular web access.
- name: INSECURE_DOCKER_REGISTRIES
  options:
    default: ''
    example: '"docker-registry.example.com:80", "hello.example.org:443"'
    description: >
      A comma-separated whitelist of insecure Docker registries in the
      form of '<HOSTNAME|IP>:PORT'. Each registry must be quoted separately.
- name: INTERNAL_API_PASSWORD
  options:
    secret: true
    description: Basic auth password for access to the Cloud Controller's internal
      API.
    required: true
  type: password
- name: INTERNAL_CA_CERT
  options:
    secret: true
    is_ca: true
    description: PEM-encoded CA certificate used to sign the TLS certificate used
      by all components to secure their communications.
    required: true
  type: certificate
- name: INTERNAL_CA_CERT_KEY
  options:
    secret: true
    description: PEM-encoded CA key.
    required: true
- name: KUBERNETES_CLUSTER_DOMAIN
  options:
    type: environment
    description: >
      The cluster domain used by Kubernetes.
      If left empty, each container will try to determine the correct value based on /etc/resolv.conf
      You can read more about it in the Kubernetes Documentation https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
- name: KUBERNETES_NAMESPACE
  options:
    type: environment
    description: The name of the kubernetes namespace all components will run in.
      This parameter cannot be set by the user. Its value is supplied by the kubernetes
      runtime.

- name: KUBERNETES_SERVICE_HOST
  options:
    type: environment
    description: >
      This is an environment variable set by Kubernetes.
      We have to pass it through the templating mechanism, because monit doesn't keep the entrypoint's environment.
- name: KUBERNETES_SERVICE_PORT
  options:
    type: environment
    description: >
      This is an environment variable set by Kubernetes.
      We have to pass it through the templating mechanism, because monit doesn't keep the entrypoint's environment.


- name: KUBERNETES_STORAGE_CLASS_PERSISTENT
  options:
    type: environment
    description: >
      Storage class used for SCF acceptance tests.
- name: KUBE_AZ
  options:
    type: environment
    default: z1
    description: >
      A string representing the availability zone a container is running in.
      Shouldn't be changed from its default value of z1.
- name: KUBE_COMPONENT_INDEX
  options:
    type: environment
    description: >
      This is an environment variable built-in by fissile.
      It's set to a numeric index for roles with multiple replicas.
- name: KUBE_NATS_CLUSTER_IPS
  options:
    type: environment
    description: A comma-separated list of IP addresses for the machines of the nats
      sub-cluster. This parameter cannot be set by the user. Its value is automatically
      computed during cluster setup.
- name: KUBE_PZ
  options:
    type: environment
    default: ''
    description: >
      A string representing the placement tag a container is running in.
- name: KUBE_SECRETS_GENERATION_COUNTER
  options:
    type: environment
    description: >
      This is an environment variable built-in by fissile.
      It's automatically set to the kube.secrets_generation_counter Helm value, which controls secret rotation.
- name: KUBE_SECRETS_GENERATION_NAME
  options:
    type: environment
    description: >
      This is an environment variable built-in by fissile.
      Its default value is 'secret-1' and cannot be set by the user.
- name: KUBE_SIZING_NATS_COUNT
  options:
    description: The number of nats replicas deployed. This value is set automatically
      by the helm charts of SCF.
- name: KUBE_SIZING_TCP_ROUTER_PORTS_TCP_ROUTE_MAX
  options:
    description: Highest internal TCP routing port. This value is set automatically
      by the helm charts of SCF.
- name: KUBE_SIZING_TCP_ROUTER_PORTS_TCP_ROUTE_MIN
  options:
    description: Lowest internal TCP routing port. This value is set automatically
      by the helm charts of SCF.

- name: LOGGREGATOR_AGENT_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - localhost
    - metron
    description: PEM-encoded certificate.
    required: true
  type: certificate
- name: LOGGREGATOR_AGENT_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key.
    required: true
- name: LOGGREGATOR_CLIENT_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    description: PEM-encoded client certificate for loggregator mutual authentication
    required: true
  type: certificate
- name: LOGGREGATOR_CLIENT_CERT_KEY
  options:
    secret: true
    description: PEM-encoded client key for loggregator mutual authentication
    required: true
- name: LOGGREGATOR_FORWARD_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    description: PEM-encoded client certificate for loggregator forwarder authentication
    required: true
  type: certificate
- name: LOGGREGATOR_FORWARD_CERT_KEY
  options:
    secret: true
    description: PEM-encoded client key for loggregator forwarder authentication
    required: true
- name: LOG_CACHE_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - log-cache
    description: PEM-encoded certificate.
    required: true
  type: certificate
- name: LOG_CACHE_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key.
    required: true
- name: LOG_LEVEL
  options:
    default: info
    description: >
      The cluster's log level: off, fatal, error, warn, info, debug, debug1, debug2.
    required: true
- name: MAX_APP_DISK_IN_MB
  options:
    default: 2048
    description: The maximum amount of disk a user can request for an application
      via manifest, command line, etc., in MB. See also DEFAULT_APP_DISK_IN_MB for
      the standard amount.
    required: true
- name: MAX_HEALTH_CHECK_TIMEOUT
  options:
    default: 180
    description: Maximum health check timeout that can be set for an app, in seconds.
    required: true
- name: MONIT_PASSWORD
  options:
    secret: true
    description: Password used for the monit API.
    required: true
  type: password
- name: MYSQL_ADMIN_PASSWORD
  options:
    secret: true
    description: The password for the MySQL server admin user.
    required: true
  type: password
- name: MYSQL_CCDB_ROLE_PASSWORD
  options:
    previous_names:
    - CCDB_ROLE_PASSWORD
    secret: true
    description: The password for access to the Cloud Controller database.
    required: true
  type: password
- name: MYSQL_CF_USB_PASSWORD
  options:
    secret: true
    example: password
    description: The password for access to the usb config database.
  type: password
- name: MYSQL_CLUSTER_HEALTH_PASSWORD
  options:
    secret: true
    description: The password for the cluster logger health user.
    required: true
  type: password
- name: MYSQL_CREDHUB_USER_PASSWORD
  options:
    secret: true
    description: The password for access to the credhub-user database.
    required: true
  type: password
- name: MYSQL_DIEGO_LOCKET_PASSWORD
  options:
    description: Database password for the diego locket service.
    secret: true
    required: true
  type: password
- name: MYSQL_DIEGO_PASSWORD
  options:
    secret: true
    description: The password for access to MySQL by diego.
    required: true
  type: password
- name: MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD
  options:
    secret: true
    description: Password used to authenticate to the MySQL Galera healthcheck endpoint.
    required: true
  type: password
- name: MYSQL_PERSI_NFS_PASSWORD
  options:
    description: Database password for storing broker state for the Persi NFS Broker
    secret: true
    required: true
  type: password
- name: MYSQL_PROXY_ADMIN_PASSWORD
  options:
    secret: true
    description: The password for Basic Auth used to secure the MySQL proxy API.
    required: true
  type: password
- name: MYSQL_PROXY_HEALTHCHECK_TIMEOUT
  options:
    default: 30000
    description: The time allowed for the MySQL server to respond to healthcheck queries,
      in milliseconds.
    required: true
- name: MYSQL_ROUTING_API_PASSWORD
  options:
    secret: true
    description: The password for access to MySQL by the routing-api
    required: true
  type: password
- name: NATS_PASSWORD
  options:
    secret: true
    description: The password for access to NATS.
    required: true
  type: password
- name: NGINX_LOG_LEVEL
  options:
    type: environment
    description: The log level for nginx. This parameter is not supposed to be set
      by the user. To change the cluster's log level set the parameter `LOG_LEVEL`
      instead, from which this one is derived.
- name: NGINX_MAX_REQUEST_BODY_SIZE
  options:
    default: 2048
    description: Sets the maximum allowed size of the client request body, specified
      in the “Content-Length” request header field, in megabytes. If the size in a
      request exceeds the configured value, the 413 (Request Entity Too Large) error
      is returned to the client. Please be aware that browsers cannot correctly display
      this error. Setting size to 0 disables checking of client request body size.
      This limits application uploads, buildpack uploads, etc.
    required: true
- name: NO_PROXY
  options:
    description: Comma separated list of IP addresses and domains which should not
      be directoed through a proxy, if any.
    required: false
- name: PERSI_NFS_ALLOWED_OPTIONS
  options:
    description: Comma separated list of white-listed options that may be set during
      create or bind operations.
    example: uid,gid,allow_root,allow_other,nfs_uid,nfs_gid,auto_cache,fsname,username,password
    default: uid,gid,auto_cache,username,password
- name: PERSI_NFS_BROKER_PASSWORD
  options:
    description: Basic auth password to verify on incoming Service Broker requests
    secret: true
    required: true
  type: password
- name: PERSI_NFS_DEFAULT_OPTIONS
  options:
    description: Comma separated list of default values for nfs mount options.  If
      a default is specified with an option not included in PERSI_NFS_ALLOWED_OPTIONS,  then
      this default value will be set and it won't be overridable.
- name: PERSI_NFS_DRIVER_ALLOWED_IN_MOUNT
  options:
    description: >
      Comma separated list of white-listed options that may be accepted
      in the mount_config options. Note a specific 'sloppy_mount:true' volume option
      tells the driver to ignore non-white-listed options, while a 'sloppy_mount:false'
      tells the driver to fail fast instead when receiving a non-white-listed option."
    example: allow_root,allow_other,nfs_uid,nfs_gid,auto_cache,sloppy_mount,fsname
    default: auto_cache
- name: PERSI_NFS_DRIVER_ALLOWED_IN_SOURCE
  options:
    description: Comma separated list of white-listed options that may be configured
      in supported in the  mount_config.source URL query params.
    example: uid,gid,auto-traverse-mounts,dircache
    default: uid,gid
- name: PERSI_NFS_DRIVER_DEFAULT_IN_MOUNT
  options:
    description: >
      Comma separated list default values for options that may be configured
      in the mount_config options, formatted as 'option:default'. If an option is
      not specified in the volume mount, or the option is not white-listed, then the
      specified default value will be used instead.
    example: allow_root:false,nfs_uid:2000,nfs_gid:2000,auto_cache:true,sloppy_mount:true
    default: auto_cache:true
- name: PERSI_NFS_DRIVER_DEFAULT_IN_SOURCE
  options:
    description: >
      Comma separated list of default values for options in the source
      URL query params, formatted as 'option:default'. If an option is not specified
      in the volume mount,  or the option is not white-listed, then the specified
      default value will be applied.
- name: PERSI_NFS_DRIVER_DISABLE
  options:
    description: Disable Persi NFS driver
    default: 'false'
- name: PERSI_NFS_DRIVER_LDAP_HOST
  options:
    description: LDAP server host name or ip address (required for LDAP integration
      only)
    default: ''
- name: PERSI_NFS_DRIVER_LDAP_PASSWORD
  options:
    description: LDAP service account password (required for LDAP integration only)
    default: "-"
    secret: true
- name: PERSI_NFS_DRIVER_LDAP_PORT
  options:
    description: LDAP server port (required for LDAP integration only)
    default: '389'
- name: PERSI_NFS_DRIVER_LDAP_PROTOCOL
  options:
    description: LDAP server protocol (required for LDAP integration only)
    default: tcp
- name: PERSI_NFS_DRIVER_LDAP_USER
  options:
    description: LDAP service account user name (required for LDAP integration only)
    default: ''
- name: PERSI_NFS_DRIVER_LDAP_USER_FQDN
  options:
    description: LDAP fqdn for user records we will search against when looking up
      user uids (required for LDAP integration only)
    example: cn=Users,dc=corp,dc=test,dc=com
    default: ''
- name: PZ_LABEL_NAME
  options:
    default: ''
    description: The name of the metadata label to query on worker
      nodes to get placement tag information, also known as isolation
      segments. When set, the cells will query their worker node for
      placement information and inject the result into cloudfoundry
      via the KUBE_PZ parameter. When left to the default no custom
      placement processing is done.
    internal: true
- name: REP_SERVER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    role_name: diego-cell
    alternative_names:
    - 127.0.0.1
    description: PEM-encoded server certificate
    required: true
  type: certificate
- name: REP_SERVER_CERT_KEY
  options:
    secret: true
    description: PEM-encoded server key
    required: true
- name: ROOTFS_TRUSTED_CERTS
  options:
    default: ''
    description: Certficates to add to the rootfs trust store. Multiple certs are
      possible by concatenating their definitions into one big block of text.
- name: ROUTER_BALANCING_ALGORITHM
  options:
    default: round-robin
    description: The algorithm used by the router to distribute requests for a route
      across backends. Supported values are round-robin and least-connection.
- name: ROUTER_CLIENT_CERT_VALIDATION
  options:
    description: How to handle client certificates. Supported values are none, request,
      or require. See https://docs.cloudfoundry.org/adminguide/securing-traffic.html#gorouter_mutual_auth
      for more information.
    default: request
- name: ROUTER_FORWARDED_CLIENT_CERT
  options:
    default: always_forward
    description: How to handle the x-forwarded-client-cert (XFCC) HTTP header. Supported
      values are always_forward, forward, and sanitize_set. See https://docs.cloudfoundry.org/concepts/http-routing.html
      for more information.
- name: ROUTER_SERVICES_SECRET
  options:
    secret: true
    description: Support for route services is disabled when no value is configured.
      A robust passphrase is recommended.
    required: true
  type: password
- name: ROUTER_SSL_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - "*.{{.DOMAIN}}"
    description: The public ssl cert for ssl termination. Will be ignored if ROUTER_TLS_PEM
      is set.
    required: true
  type: certificate
- name: ROUTER_SSL_CERT_KEY
  options:
    secret: true
    description: The private ssl key for ssl termination. Will be ignored if ROUTER_TLS_PEM
      is set.
    required: true
- name: ROUTER_STATUS_PASSWORD
  options:
    secret: true
    description: Password for HTTP basic auth to the varz/status endpoint.
    required: true
  type: password
- name: ROUTER_TLS_PEM
  options:
    description: Array of private keys and certificates used for TLS handshakes with
      downstream clients. Each element in the array is an object containing fields
      'private_key' and 'cert_chain', each of which supports a PEM block. This setting
      overrides ROUTER_SSL_CERT and ROUTER_SSL_KEY.
    example: |
      - cert_chain: |
          -----BEGIN CERTIFICATE-----
          -----END CERTIFICATE-----
          -----BEGIN CERTIFICATE-----
          -----END CERTIFICATE-----
        private_key: |
          -----BEGIN RSA PRIVATE KEY-----
          -----END RSA PRIVATE KEY-----
    secret: true
- name: SCF_LOG_HOST
  options:
    internal: true
    description: The log destination to talk to. This has to point to a syslog server.
- name: SCF_LOG_PORT
  options:
    internal: true
    description: The port used by rsyslog to talk to the log destination. It defaults
      to 514, the standard port of syslog.
    default: 514
- name: SCF_LOG_PROTOCOL
  options:
    internal: true
    default: tcp
    description: The protocol used by rsyslog to talk to the log destination. The
      allowed values are tcp, and udp. The default is tcp.
    required: true
- name: STAGING_TIMEOUT
  options:
    default: 900
    description: Timeout for staging an app, in seconds.
    required: true
- name: STAGING_UPLOAD_PASSWORD
  options:
    secret: true
    description: The password for access to the uploader of staged droplets.
    required: true
  type: password
- name: SUPPORT_ADDRESS
  options:
    default: support@example.com
    description: Support contact information for the cluster
    required: true
- name: SYSLOG_ADAPT_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - adapter
    description: PEM-encoded certificate
    required: true
  type: certificate
- name: SYSLOG_ADAPT_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key.
    required: true
- name: SYSLOG_RLP_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    alternative_names:
    - syslog_rlp
    - reverselogproxy
    description: PEM-encoded certificate
    required: true
  type: certificate
- name: SYSLOG_RLP_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key.
    required: true
- name: SYSLOG_SCHED_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    description: PEM-encoded certificate
    required: true
  type: certificate
- name: SYSLOG_SCHED_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key.
    required: true
- name: TCP_DOMAIN
  options:
    example: tcp.my-scf-cluster.com
    required: true
    description: TCP routing domain of the SCF cluster; only used for testing;
- name: TPS_CC_CLIENT_CRT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    description: PEM-encoded client certificate for internal communication between
      the cloud controller and TPS.
    required: true
  type: certificate
- name: TPS_CC_CLIENT_CRT_KEY
  options:
    secret: true
    description: PEM-encoded client key for internal communication between the cloud
      controller and TPS.
    required: true
- name: TRAFFICCONTROLLER_CERT
  options:
    secret: true
    ca: INTERNAL_CA_CERT
    description: PEM-encoded certificate for communication with the traffic controller
      of the log infra structure.
    required: true
  type: certificate
- name: TRAFFICCONTROLLER_CERT_KEY
  options:
    secret: true
    description: PEM-encoded key for communication with the traffic controller of
      the log infra structure.
    required: true
- name: TRUSTED_CERTS
  options:
    description: Concatenation of trusted CA certificates to be made available on
      the cell.
- name: UAA_ADMIN_CLIENT_SECRET
  options:
    secret: true
    description: The password of the admin client - a client named admin with uaa.admin
      as an authority.
    required: true
- name: UAA_CA_CERT
  options:
    description: The CA certificate for UAA
    secret: true
- name: UAA_CC_CLIENT_SECRET
  options:
    secret: true
    description: The password for UAA access by the Cloud Controller.
    required: true
  type: password
- name: UAA_CLIENTS_CC_ROUTING_SECRET
  options:
    secret: true
    description: The password for UAA access by the Routing API.
    required: true
  type: password
- name: UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET
  options:
    secret: true
    description: Used for third party service dashboard SSO.
  type: password
- name: UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET
  options:
    secret: true
    description: Used for fetching service key values from CredHub.
    required: true
  type: password
- name: UAA_CLIENTS_CF_USB_SECRET
  options:
    secret: true
    description: The password for UAA access by the Universal Service Broker.
  type: password
- name: UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET
  options:
    secret: true
    description: The password for UAA access by the Cloud Controller for fetching
      usernames.
    required: true
  type: password
- name: UAA_CLIENTS_CREDHUB_USER_CLI_SECRET
  options:
    secret: true
    description: The password for UAA access by the client for the user-accessible credhub
    required: true
  type: password
- name: UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET
  options:
    secret: true
    description: The password for UAA access by the SSH proxy.
    required: true
  type: password
- name: UAA_CLIENTS_DOPPLER_SECRET
  options:
    secret: true
    description: The password for UAA access by doppler.
    required: true
  type: password
- name: UAA_CLIENTS_GOROUTER_SECRET
  options:
    secret: true
    description: The password for UAA access by the gorouter.
    required: true
  type: password
- name: UAA_CLIENTS_LOGIN_SECRET
  options:
    secret: true
    description: The password for UAA access by the login client.
    required: true
  type: password
- name: UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET
  options:
    secret: true
    description: The password for UAA access by the task creating the cluster administrator
      user
    required: true
  type: password
- name: UAA_CLIENTS_TCP_EMITTER_SECRET
  options:
    secret: true
    description: The password for UAA access by the TCP emitter.
    required: true
  type: password
- name: UAA_CLIENTS_TCP_ROUTER_SECRET
  options:
    secret: true
    description: The password for UAA access by the TCP router.
    required: true
  type: password
- name: UAA_HOST
  options:
    description: The host name of the UAA server (root zone)
    required: true
- name: UAA_PORT
  options:
    default: 2793
    description: The tcp port the UAA server (root zone) listens on for requests.
- name: USE_DIEGO_PRIVILEGED_CONTAINERS
  options:
    default: false
    description: Whether or not to use privileged containers for buildpack based applications.
      Containers with a docker-image-based rootfs will continue to always be unprivileged.
    required: true
- name: USE_STAGER_PRIVILEGED_CONTAINERS
  options:
    default: false
    description: Whether or not to use privileged containers for staging tasks.
    required: true
- name: VCAP_HARD_NPROC
  options:
    description: The hard limit of the number of processes for the vcap user.
    internal: true
    required: false
- name: VCAP_SOFT_NPROC
  options:
    description: The soft limit of the number of processes for the vcap user.
    internal: true
    required: false
