---
properties:
  acceptance_tests:
    admin_user: admin
    skip_ssl_validation: true
    backend: diego
    include_diego_ssh: true
    include_diego_docker: true
    include_security_groups: true
    include_internet_dependent: true
    include_services: true
    cf_push_timeout: 300
    default_timeout: 300
  acceptance_tests_brain:
    user: 'admin'
    org: test-brain-org
    space: test-brain-space
  autoscaler_api:
    internal_auth:
      username: 'admin'
    scaling_service:
      name: 'app-autoscaler'
  autoscaler_server:
    internal_auth:
      username: 'admin'
  autoscaler_servicebroker:
    name: 'app-autoscaler'
    auth:
      username: 'admin'
  capi:
    nsync:
      lifecycle_bundles:
        - "buildpack/cflinuxfs2:buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
        - "buildpack/windows2012R2:windows_buildpack_app_lifecycle/windows_buildpack_app_lifecycle.tgz"
        - "buildpack/win2012r2:windows_buildpack_app_lifecycle/windows_buildpack_app_lifecycle.tgz"
        - "docker:docker_app_lifecycle/docker_app_lifecycle.tgz"
    stager:
      lifecycle_bundles:
        - "buildpack/cflinuxfs2:buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
        - "buildpack/windows2012R2:windows_buildpack_app_lifecycle/windows_buildpack_app_lifecycle.tgz"
        - "buildpack/win2012r2:windows_buildpack_app_lifecycle/windows_buildpack_app_lifecycle.tgz"
        - "docker:docker_app_lifecycle/docker_app_lifecycle.tgz"
  cc:
    broker_client_timeout_seconds: 70
    buildpacks:
      blobstore_type: webdav
      webdav_config:
        username: 'blobstore_user'
    client_max_body_size: 15M
    default_running_security_groups:
    - public_networks
    - dns
    default_staging_security_groups:
    - public_networks
    - dns
    default_to_diego_backend: true
    droplets:
      blobstore_type: webdav
      droplet_directory_key: cc-droplets
      webdav_config:
        username: 'blobstore_user'
    external_protocol: http
    install_buildpacks:
    - name: staticfile_buildpack
      package: staticfile-buildpack
    - name: java_buildpack
      package: java-buildpack
    - name: ruby_buildpack
      package: ruby-buildpack
    - name: nodejs_buildpack
      package: nodejs-buildpack
    - name: go_buildpack
      package: go-buildpack
    - name: python_buildpack
      package: python-buildpack
    - name: php_buildpack
      package: php-buildpack
    - name: binary_buildpack
      package: binary-buildpack
    - name: cf_iis_buildpack
      package: cf_iis_buildpack
    jobs:
      generic:
        number_of_workers: null
    newrelic:
      environment_name: null
      transaction_tracer:
        enabled: true
        record_sql: obfuscated
    packages:
      blobstore_type: webdav
      webdav_config:
        username: 'blobstore_user'
    quota_definitions:
      default:
        memory_limit: 10240
        non_basic_services_allowed: true
        total_routes: 1000
        total_services: 100
    resource_pool:
      blobstore_type: webdav
      webdav_config:
        username: 'blobstore_user'
    security_event_logging:
      enabled: null
    security_group_definitions:
    - name: public_networks
      rules:
      - destination: 0.0.0.0-9.255.255.255
        protocol: all
      - destination: 11.0.0.0-169.253.255.255
        protocol: all
      - destination: 169.255.0.0-172.15.255.255
        protocol: all
      - destination: 172.32.0.0-192.167.255.255
        protocol: all
      - destination: 192.169.0.0-255.255.255.255
        protocol: all
    - name: dns
      rules:
      - destination: 0.0.0.0/0
        ports: "53"
        protocol: tcp
      - destination: 0.0.0.0/0
        ports: "53"
        protocol: udp
    stacks:
    - name: cflinuxfs2
      description: Cloud Foundry Linux-based filesystem
    - name: win2012r2
      description: Windows Server 2012 R2
    - name: windows2012R2
      description: Windows Server 2012 R2
    staging_upload_user: staging_user
    system_hostnames:
    - api
    - blobstore
    - doppler
    - loggregator
    - login
    - uaa
    - usb
    thresholds:
      api:
        alert_if_above_mb: null
        restart_if_above_mb: null
        restart_if_consistently_above_mb: null
      worker:
        alert_if_above_mb: null
        restart_if_above_mb: null
        restart_if_consistently_above_mb: null
    core_file_pattern: false
    volume_services_enabled: true
  ccdb:
    databases:
    - name: ccdb
      tag: cc
    db_scheme: mysql
    port: 3306
  cf-usb:
    broker:
      username: broker-admin
      port: 24054
    management:
      dev_mode: true
      port: 24053
      uaa:
        client: cf-usb
  cf_mysql:
    mysql:
      database_startup_timeout: 300
      galera_healthcheck:
        endpoint_username: 'galera_healthcheck_bootstrap_user'
      max_open_files: 1500
    proxy:
      api_force_https: false
      api_username: 'mysql_proxy'
      healthcheck_timeout_millis: 30000
  consul:
    agent:
      domain: hcf
  couchdb:
    metric_prefix: couchdb-scalingmetric
    port: 5984
    username: admin
  diego:
    bbs:
      active_key_label: active
      etcd:
        machines: []
    executor:
      garden:
        address: 127.0.0.1:7777
        network: tcp
    file_server:
      static_directory: /var/vcap/packages/
    rep:
      evacuation_timeout_in_seconds: 60
      preloaded_rootfses:
        - cflinuxfs2:/var/vcap/packages/cflinuxfs2/rootfs
    route_emitter:
      nats:
        user: nats
    ssh_proxy:
      enable_cf_auth: true
  doppler:
    tls:
      enable: true
    locked_memory_limit: kernel
    port: 4443
  etcd:
    bootstrap_node: etcd-0
  garden:
    # By default we want to restrict all outbound access from containers
    # so they can't access the CF network, or other apps. Traffic to the
    # internet and services is configured using proper CF security group
    # rules.
    deny_networks: [0.0.0.0/0]
    # Garden should at least be able to cache the cflinuxfs2 rootfs
    # to avoid copy operations on every garden healthcheck from rep
    # when there is no app running with the healthcheck rootfs.
    graph_cleanup_threshold_in_mb: 3000
    listen_address: 0.0.0.0:7777
    listen_network: tcp
    persistent_image_list:
    - /var/vcap/packages/rootfs_cflinuxfs2/rootfs
  hcf:
    monit:
      user: "admin"
      port: 2289
    uaa:
      root-zone:
        url: 'https://uaa-int.hcf.svc:8443' # Not used in HCP; this is the UAA zone to bootrap the HCF-specific zone.
  hcf_sso:
    username: 'username'
  hcf_versions:
    blobstore:
      username: 'blobstore_user'
  hm9000:
    # Used in cc_ng and cc_worker
    url: https://this.is.unused
  localbroker:
    service-name: 'shared-volume'
    service-id: '3b640186-6429-4cbb-b346-bf96acba3fb9'
    plan-name: 'default'
    plan-id: '8ea4a4f1-ab4a-4bbb-a4a6-810d46713449'
    plan-desc: 'Default service plan'
    data-dir: /var/vcap/store/persibroker
    localdriver-url: "http://localhost:9089"
  localdriver:
    listen_addr: "127.0.0.1:9089"
    debug_addr: ""
    cell_mount_path: /var/vcap/persistore/servicevolumes
  logger_endpoint:
    port: 4443
  login:
    asset_base_url: null
    logout:
      redirect:
        url: /login?template=openstack
    saml:
      serviceProviderKeyPassword: ""
  metron_agent:
    deployment: hcf-deployment
  nats:
    port: 4222
    user: nats
  nfs_server:
    address: 0.0.0.3
  router:
    cipher_suites: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA:TLS_RSA_WITH_AES_128_CBC_SHA
    enable_ssl: true
    extra_headers_to_log: null
    logrotate:
      freq_min: 20
      rotate: 5
      size: 3M
    requested_route_registration_interval_in_seconds: null
    route_services_timeout: null
    secure_cookies: null
    ssl_skip_validation: null
    status:
      user: router_user
  routing_api:
    enabled: true
  smoke_tests:
    user: 'admin'
    org: smoke-test-org
    space: smoke-test-space
    skip_ssl_validation: true
  syslog_drain_binder:
    locked_memory_limit: kernel
  system_domain_organization: null
  tcp_emitter:
    debug_address: 0.0.0.0:17003
  traffic_controller:
    locked_memory_limit: kernel
  tomcat:
    http:
      autoscaler_api:
        port: 28861
      autoscaler_server:
        port: 28862
      autoscaler_servicebroker:
        port: 28863
  uaa:
    authentication:
      policy:
        countFailuresWithinSeconds: null
        lockoutAfterFailures: null
        lockoutPeriodSeconds: null
    clients: {} # Filled in from role manifest
    database:
      abandoned_timeout: 600
      remove_abandoned: true
    issuer: https://uaa.example.com
    require_https: null
  uaadb:
    databases:
    - name: uaadb
      tag: uaa
    db_scheme: mysql
    port: 3306
