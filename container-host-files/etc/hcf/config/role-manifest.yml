---
roles:
- name: nats
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: nats
    release_name: cf
  - name: nats_stream_forwarder
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: metron_agent
  - name: nats
  - name: nats_stream_forwarder
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 4
    exposed-ports:
      - name: 'nats'
        protocol: 'TCP'
        external: 4222
        internal: 4222
        public: false
      - name: 'nats-routes'
        protocol: 'TCP'
        external: 4223
        internal: 4223
        public: false
- name: consul
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_consul_server_name.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: consul-data
        size: 5
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'server-rpc'
        protocol: 'TCP'
        external: 8300
        internal: 8300
        public: false
      - name: 'serf-lan-tcp'
        protocol: 'TCP'
        external: 8301
        internal: 8301
        public: false
      - name: 'serf-lan-udp'
        protocol: 'UDP'
        external: 8301
        internal: 8301
        public: false
      - name: 'serf-wan-tcp'
        protocol: 'TCP'
        external: 8302
        internal: 8302
        public: false
      - name: 'serf-wan-udp'
        protocol: 'UDP'
        external: 8302
        internal: 8302
        public: false
      - name: 'cli-rpc'
        protocol: 'TCP'
        external: 8400
        internal: 8400
        public: false
      - name: 'http-api'
        protocol: 'TCP'
        external: 8500
        internal: 8500
        public: false
  configuration:
    templates:
      properties.consul.agent.mode: '"server"'
- name: mysql
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/create_mysql_data_tmp.sh
  - scripts/patches/fix_mysql_advertise_ip.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/enable_mysql_galera_bootstrap.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: mysql
    release_name: cf-mysql
  processes:
  - name: mariadb_ctrl
  - name: galera-healthcheck
  - name: gra-log-purger-executable
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: mysql-data
        size: 10
    shared-volumes: []
    memory: 3072
    virtual-cpus: 2
    exposed-ports:
      - name: 'mysql'
        protocol: 'TCP'
        external: 3306
        internal: 3306
        public: false
      - name: 'galera-tcp'
        protocol: 'TCP'
        external: 4567
        internal: 4567
        public: false
      - name: 'galera-udp'
        protocol: 'UDP'
        external: 4567
        internal: 4567
        public: false
      - name: 'galera-ist'
        protocol: 'TCP'
        external: 4568
        internal: 4568
        public: false
      - name: 'healthcheck'
        protocol: 'tcp'
        external: 9200
        internal: 9200
        public: false
      - name: 'xtrabackup'
        protocol: 'tcp'
        external: 4444
        internal: 4444
        public: false
  configuration:
    templates:
      properties.cf_mysql.mysql.cluster_health.password: '((MYSQL_CLUSTER_HEALTH_PASSWORD))'
      properties.cf_mysql.mysql.cluster_ips: '((MYSQL_HCF_CLUSTER_IPS))((#MYSQL_HCF_CLUSTER_CONFIG_REVISION))((/MYSQL_HCF_CLUSTER_CONFIG_REVISION))'
      properties.cf_mysql.proxy.proxy_ips: '["mysql-proxy-int.((HCP_SERVICE_DOMAIN_SUFFIX))"]'
      properties.cf_mysql.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.galera_healthcheck.db_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.external_host: "((DOMAIN))"
      properties.cf_mysql.proxy.api_password: "((MYSQL_PROXY_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.galera_healthcheck.endpoint_password: "((MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD))"
- name: mysql-proxy
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: proxy
    release_name: cf-mysql
  processes:
  - name: cf-mysql-route-registrar
  - name: switchboard
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'mysql-proxy'
        protocol: 'TCP'
        external: 3306
        internal: 3306
        public: false
      - name: 'api'
        protocol: 'TCP'
        external: 80
        internal: 80
        public: false
      - name: 'healthcheck'
        protocol: 'TCP'
        external: 1936
        internal: 1936
        public: false
  configuration:
    templates:
      properties.cf_mysql.mysql.cluster_ips: '((MYSQL_HCF_CLUSTER_IPS))((#MYSQL_HCF_CLUSTER_CONFIG_REVISION))((/MYSQL_HCF_CLUSTER_CONFIG_REVISION))'
      properties.cf_mysql.proxy.proxy_ips: '["mysql-proxy-int.((HCP_SERVICE_DOMAIN_SUFFIX))"]'
      properties.cf_mysql.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.external_host: "((DOMAIN))"
      properties.cf_mysql.proxy.api_password: "((MYSQL_PROXY_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.galera_healthcheck.endpoint_password: "((MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD))"
- name: diego-database
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  post_config_scripts:
  - scripts/set-rep-ca-cert-for-windows.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: rep-certstrap
    release_name: hcf
  - name: bbs
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: bbs
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: diego-database-data
        size: 10
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'cell-metrics'
        protocol: 'TCP'
        external: 5678
        internal: 5678
        public: false
      - name: 'cell-bbs-api'
        protocol: 'TCP'
        external: 8889
        internal: 8889
        public: false
      - name: 'cell-bbs-dbg'
        protocol: 'TCP'
        external: 17017
        internal: 17017
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"usb", "port": 24053, "uris":["usb.((DOMAIN))",  "*.usb.((DOMAIN))"], "registration_interval":"10s"}, {"name":"broker", "port": 24054, "uris":["brokers.((DOMAIN))", "*.brokers.((DOMAIN))"], "registration_interval":"10s"}]'
- name: router
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: gorouter
    release_name: routing
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: gorouter
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 4
    exposed-ports:
    - name: 'router'
      protocol: 'TCP'
      external: 80
      internal: 80
      public: true
    - name: 'router2'
      protocol: 'TCP'
      external: 443
      internal: 443
      public: true
    - name: 'router3'
      protocol: 'TCP'
      external: 4443
      internal: 443
      public: true
- name: tcp-router
  # XXX haproxy might be able to co-locate with one of the others
  # But this is a _different_ HAProxy from the one in the CF release.
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/patches/fix_haproxy_fd_requirements.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: tcp_router
    release_name: routing
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: tcp_router
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
    - name: 'healthcheck'
      protocol: TCP
      external: 2341
      internal: 80
      public: true
    - name: 'tcp-routing'
      protocol: TCP
      external: "20000-20008"
      internal: "20000-20008"
      public: true
  configuration:
    templates:
      properties.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
- name: routing-api
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: routing-api
    release_name: routing
  - name: tcp_emitter
    # TCP-emitter can be on a different role, it's just convenient here
    release_name: routing
  processes:
  - name: consul_agent
  - name: metron_agent
  - name: routing-api
  - name: tcp_emitter
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 512
    virtual-cpus: 4
    exposed-ports:
      - name: routing-api
        protocol: TCP
        external: 3000
        internal: 3000
        public: false
  configuration:
    templates:
      properties.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
- name: uaa
  tags: ['dev-only']
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_uaa_failure_to_interpolate.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: uaa
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: routing
  processes:
  - name: uaa
  - name: consul_agent
  - name: route_registrar
  - name: metron_agent
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 2048
    virtual-cpus: 2
    exposed-ports:
      - name: 'uaa'
        protocol: 'TCP'
        external: 8080
        internal: 8080
        public: false
      - name: 'uaa-ssl'
        protocol: 'TCP'
        external: 8443
        internal: 8443
        public: false
    docker-args: ['--network-alias', 'hcf.uaa-int.hcf.svc']
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"uaa", "port": 8080, "tags":{"component":"uaa"}, "uris":["uaa.((DOMAIN))", "*.uaa.((DOMAIN))", "login.((DOMAIN))", "*.login.((DOMAIN))"], "registration_interval":"10s"}]'
      # This is only used to create the custom zone and populate it
      properties.login.url: '"https://login.((DOMAIN))"'
      properties.uaa.clients: '{"default_zone_admin": {"secret": "((UAA_ADMIN_CLIENT_SECRET))", "authorized-grant-types": "client_credentials", "scope": "uaa.admin", "authorities": "uaa.admin"}}'
      properties.uaa.url: '"https://uaa.((DOMAIN))"'
      properties.uaa.zones.internal.hostnames: '["uaa-int.((HCP_SERVICE_DOMAIN_SUFFIX))","uaa.((DOMAIN))"]'
- name: api
  environment_scripts:
  - scripts/load-hcp-env.sh
  - scripts/authorize_internal_ca.sh
  - scripts/fetch_uaa_verification_key.sh
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/nginx_log_level.sh
  scripts:
  - scripts/patches/fix_nodejs_buildpack.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: cloud_controller_ng
    release_name: cf
  - name: statsd-injector
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: routing
  - name: go-buildpack
    release_name: cf
  - name: binary-buildpack
    release_name: cf
  - name: nodejs-buildpack
    release_name: cf
  - name: ruby-buildpack
    release_name: cf
  - name: php-buildpack
    release_name: cf
  - name: python-buildpack
    release_name: cf
  - name: staticfile-buildpack
    release_name: cf
  - name: java-buildpack
    release_name: cf
  - name: java-offline-buildpack
    release_name: cf
  - name: cf_iis_buildpack
    release_name: windows-runtime-release
  processes:
  - name: cloud_controller_ng
  - name: cloud_controller_worker_local_1
  - name: cloud_controller_worker_local_2
  - name: route_registrar
  - name: metron_agent
  - name: consul_agent
  - name: nginx_cc
  - name: statsd-injector
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 2560
    virtual-cpus: 4
    exposed-ports:
      - name: 'api'
        protocol: 'TCP'
        external: 9022
        internal: 9022
        public: false
      - name: 'statsd'
        protocol: 'TCP'
        external: 8125
        internal: 8125
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"api", "port":9022, "tags":{"component":"CloudController"}, "uris":["api.((DOMAIN))"], "registration_interval":"10s"}]'
- name: api-worker
  environment_scripts:
  - scripts/load-hcp-env.sh
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: cloud_controller_worker
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: cloud_controller_worker_1
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes:
    - path: '/var/vcap/nfs/shared'
      size: 100
      tag: 'api-data'
    memory: 512
    virtual-cpus: 2
    exposed-ports: []
- name: blobstore
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_chown_blobstore_packages.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: blobstore
    release_name: cf
  - name: route_registrar
    release_name: routing
  - name: metron_agent
    release_name: cf
  processes:
  - name: blobstore_nginx
  - name: blobstore_url_signer
  - name: route_registrar
  - name: metron_agent
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes:
    - path: /var/vcap/store
      tag: blobstore-data
      size: 100
    shared-volumes: []
    memory: 1536
    virtual-cpus: 2
    exposed-ports:
    - name: 'blobstore-ext'
      protocol: 'TCP'
      external: 8080
      internal: 8080
      public: false
    - name: 'blobstore-int'
      protocol: 'TCP'
      external: 4443
      internal: 4443
      public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"blobstore", "port":8080, "tags":{"component":"blobstore"}, "uris":["blobstore.((DOMAIN))"], "registration_interval":"10s"}]'
- name: clock-global
  environment_scripts:
  - scripts/load-hcp-env.sh
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: cloud_controller_clock
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: cloud_controller_clock
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 512
    virtual-cpus: 2
    exposed-ports: []
- name: cf-usb
  environment_scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/fetch_uaa_verification_key.sh
  - scripts/configure-HA-hosts.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: cf-usb
    release_name: cf-usb
  - name: consul_agent
    release_name: cf
  - name: route_registrar
    release_name: routing
  processes:
  - name: usb
  - name: route_registrar
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'usb'
        protocol: 'TCP'
        external: 24054
        internal: 24054
        public: false
      - name: 'usb2'
        protocol: 'TCP'
        external: 24053
        internal: 24053
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"usb", "port": 24053, "uris":["usb.((DOMAIN))", "*.usb.((DOMAIN))"], "registration_interval":"10s"}, {"name":"broker", "port": 24054, "uris":["brokers.((DOMAIN))", "*.brokers.((DOMAIN))"], "registration_interval":"10s"}]'
- name: doppler
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: doppler
    release_name: cf
  - name: syslog_drain_binder
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: doppler
  - name: metron_agent
  - name: syslog_drain_binder
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'doppler-in'
        protocol: 'TCP'
        external: 3456
        internal: 3456
        public: false
      - name: 'dropsnode-in'
        protocol: 'UDP'
        external: 3457
        internal: 3457
        public: false
      - name: 'doppler-tls'
        protocol: 'TCP'
        external: 3458
        internal: 3458
        public: false
      - name: 'doppler-ws'
        protocol: 'TCP'
        external: 8081
        internal: 8081
        public: false
      - name: 'doppler-grpc'
        protocol: 'TCP'
        external: 8082
        internal: 8082
        public: false
- name: etcd
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/patches/fix_etcd_bootstrap.sh
  - scripts/patches/fix_etcd_cluster_hostnames.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: etcd
    release_name: cf
  - name: etcd_metrics_server
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: etcd_metrics_server
  - name: etcd
  - name: metron_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        size: 10
        tag: cf-etcd-data
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'etcd-client'
        protocol: 'TCP'
        external: 4001
        internal: 4001
        public: false
      - name: 'etcd-peer'
        protocol: 'TCP'
        external: 7001
        internal: 7001
        public: false
  configuration:
    templates:
      # The default of null in the bosh release does not seem to
      # define the property properly. Setting it here does define the
      # property, with a value of null. Note, placement in the
      # opinions is blocked by the configuration validator,
      # complaining about it 'matching the default'. So, here it is.
      properties.etcd.cluster: null
- name: loggregator
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: loggregator_trafficcontroller
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: routing
  processes:
  - name: loggregator_trafficcontroller
  - name: metron_agent
  - name: route_registrar
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"loggregator", "port":8081, "uris":["doppler.((DOMAIN))"], "registration_interval":"10s"}, {"name":"loggregator_trafficcontroller", "port":8080, "uris":["loggregator.((DOMAIN))"], "registration_interval":"10s"}]'
      properties.uaa.url: '"((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))hcf.uaa-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8443((/HCP_IDENTITY_EXTERNAL_HOST))"'
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'loggregator'
        protocol: 'TCP'
        external: 8080
        internal: 8080
        public: false
      - name: 'loggregator-ws'
        protocol: 'TCP'
        external: 8081
        internal: 8081
        public: false
- name: diego-brain
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  post_config_scripts:
  - scripts/set-rep-ca-cert-for-windows.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: consul_agent
    release_name: cf
  - name: rep-certstrap
    release_name: hcf
  - name: auctioneer
    release_name: diego
  - name: metron_agent
    release_name: cf
  processes:
  - name: auctioneer
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 4
    exposed-ports:
      - name: 'diego-auction'
        protocol: 'TCP'
        external: 9016
        internal: 9016
        public: false
- name: diego-cc-bridge
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: stager
    release_name: cf
  - name: nsync
    release_name: cf
  - name: tps
    release_name: cf
  - name: cc_uploader
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: cc_uploader
  - name: stager
  - name: tps_listener
  - name: tps_watcher
  - name: nsync_listener
  - name: nsync_bulker
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 512
    virtual-cpus: 4
    exposed-ports:
      - name: 'nsync-listen'
        protocol: 'TCP'
        external: 8787
        internal: 8787
        public: false
      - name: 'nsync-dbg-l'
        protocol: 'TCP'
        external: 17006
        internal: 17006
        public: false
      - name: 'nsync-dbg-b'
        protocol: 'TCP'
        external: 17007
        internal: 17007
        public: false
      - name: 'stager-dbg'
        protocol: 'TCP'
        external: 17011
        internal: 17011
        public: false
      - name: 'stager-listen'
        protocol: 'TCP'
        external: 8888
        internal: 8888
        public: false
      - name: 'tps-listen'
        protocol: 'TCP'
        external: 1518
        internal: 1518
        public: false
      - name: 'tps-dbg-l'
        protocol: 'TCP'
        external: 17014
        internal: 17014
        public: false
      - name: 'tps-dbg-w'
        protocol: 'TCP'
        external: 17015
        internal: 17015
        public: false
      - name: 'cc-up-listen'
        protocol: 'TCP'
        external: 9090
        internal: 9090
        public: false
      - name: 'cc-up-dbg'
        protocol: 'TCP'
        external: 17018
        internal: 17018
        public: false
- name: diego-route-emitter
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: route_emitter
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: route_emitter
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports: []
- name: diego-access
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: ssh_proxy
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: file_server
    release_name: diego
  - name: windows_buildpack_app_lifecycle
    release_name: windows-runtime-release
  processes:
  - name: file_server
  - name: metron_agent
  - name: ssh_proxy
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'diego-ssh'
        protocol: 'TCP'
        external: 2222
        internal: 2222
        public: true
      - name: 'diego-files'
        protocol: 'TCP'
        external: 8080
        internal: 8080
        public: false
- name: diego-cell
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/set-diego-cell-memory-limits.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/configure-nested-net.sh
  - scripts/cleanup-garden-graph.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_persi_localdriver_permissions.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: rep
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: garden
    release_name: garden-runc
  - name: cflinuxfs2-rootfs-setup
    release_name: cflinuxfs2-rootfs
  - name: metron_agent
    release_name: cf
  - name: localdriver
    release_name: local-volume
  processes:
  - name: metron_agent
  - name: consul_agent
  - name: rep
  - name: garden
  - name: localdriver
  run:
    scaling:
      min: 1
      max: 254
    capabilities: ['ALL']
    persistent-volumes:
    - path: '/var/vcap/data/garden'
      tag: garden-graph
      size: 50
    shared-volumes:
    - path: '/var/vcap/persistore/servicevolumes/_volumes'
      size: 100
      tag: 'persistore'
    memory: 4096
    virtual-cpus: 4
    exposed-ports:
      - name: 'rep-server'
        protocol: 'TCP'
        external: 1801
        internal: 1801
        public: false
- name: sclr-api
  type: bosh
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/configgin-config-properties.sh
  - scripts/wait_for_couchdb.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: autoscaler_api
    release_name: cf-open-autoscaler
  - name: route_registrar
    release_name: routing
  processes:
  - name: tomcat
  - name: route_registrar
  run:
    flight-stage: flight
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1536
    virtual-cpus: 1
    exposed-ports:
      - name: 'api'
        protocol: 'TCP'
        external: 28861
        internal: 28861
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"autoscaler-api", "port":28861, "uris":["autoscaler-api.((DOMAIN))"], "registration_interval":"10s"}]'
- name: sclr-server
  type: bosh
  scripts:
  - scripts/configgin-config-properties.sh
  - scripts/wait_for_couchdb.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: autoscaler_server
    release_name: cf-open-autoscaler
  processes:
  - name: tomcat
  run:
    flight-stage: flight
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports:
      - name: 'server'
        protocol: 'TCP'
        external: 28862
        internal: 28862
        public: false
  configuration:
    templates:
      properties.couchdb.dbname: '"couchdb-scaling"'
- name: sclr-broker
  type: bosh
  scripts:
  - scripts/configgin-config-properties.sh
  - scripts/wait_for_couchdb.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: autoscaler_servicebroker
    release_name: cf-open-autoscaler
  processes:
  - name: tomcat
  run:
    flight-stage: flight
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1536
    virtual-cpus: 1
    exposed-ports:
      - name: 'broker'
        protocol: 'TCP'
        external: 28863
        internal: 28863
        public: false
  configuration:
    templates:
      properties.couchdb.dbname: '"couchdb-scalingbroker"'
- name: couchdb
  type: bosh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: couchdb
    release_name: cf-open-autoscaler
  scripts:
  - scripts/forward_logfiles.sh
  processes:
  - name: couchdb
  run:
    flight-stage: flight
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: couchdb-data
        size: 5
    shared-volumes: []
    memory: 256
    virtual-cpus: 1
    exposed-ports:
      - name: 'couchdb'
        protocol: 'TCP'
        external: 5984
        internal: 5984
        public: false
- name: acceptance-tests-autoscaler
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: acceptance-tests-autoscaler
    release_name: hcf
  run:
    scaling:
      min: 1
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: acceptance-tests-flight-recorder
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: acceptance-tests-flight-recorder
    release_name: hcf
  run:
    scaling:
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'acceptanceflightrecorder'
        protocol: 'TCP'
        source: 10514
        target: 10514
        public: false
- name: acceptance-tests
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/cf_acceptance_tests_suites.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: acceptance-tests
    release_name: cf
  run:
    scaling:
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
  configuration:
    templates:
      hcf.cats-suites: '"((CATS_SUITES))"'
- name: acceptance-tests-brain
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: acceptance-tests-brain
    release_name: hcf
  run:
    scaling:
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: smoke-tests
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: smoke-tests
    release_name: cf
  run:
    scaling:
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: post-deployment-setup
  type: bosh-task
  environment_scripts:
  - scripts/load-hcp-env.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: uaa-create-user
    release_name: hcf
  - name: cf-set-proxy
    release_name: hcf
  processes: []
  run:
    scaling:
      min: 1
      max: 1
    flight-stage: post-flight
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 1
    exposed-ports: []
- name: dev-dns
  type: docker
  tags: ['dev-only']
  run:
    env: []
    scaling:
      min: 1
      max: 1
    capabilities: ['NET_ADMIN']
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports:
      - name: 'dev-dns'
        protocol: 'UDP'
        external: 53
        internal: 8600
        public: true
      - name: 'dev-dns-tcp'
        protocol: 'TCP'
        external: 53
        internal: 8600
        public: true
- name: sso-create-service
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: sso-create-service
    release_name: hcf
  processes: []
  run:
    scaling:
      min: 1
      max: 1
    flight-stage: post-flight
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 1
    exposed-ports: []
- name: autoscaler-create-service
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: autoscaler-create-service
    release_name: hcf
  processes: []
  run:
    scaling:
      min: 1
      max: 1
    flight-stage: post-flight
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 1
    exposed-ports: []
- name: persi-create-service
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: persi-create-service
    release_name: hcf
  processes: []
  run:
    scaling:
      min: 1
      max: 1
    flight-stage: post-flight
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 1
    exposed-ports: []
- name: hcf-sso
  environment_scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/fetch_uaa_verification_key.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: hcf-sso
    release_name: hcf-sso
  - name: metron_agent
    release_name: cf
  processes:
  - name: hcf-sso
  - name: metron_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 128
    virtual-cpus: 1
    exposed-ports:
    - name: service-broker
      protocol: TCP
      external: 3000
      internal: 3000
      public: false
- name: hcf-versions
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: hcf-versions
    release_name: hcf-versions
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: routing
  processes:
  - name: hcf-versions
  - name: metron_agent
  - name: route_registrar
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 128
    virtual-cpus: 1
    exposed-ports:
    - name: 'hcf-versions-api'
      protocol: TCP
      external: 3000
      internal: 3000
      public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"hcf-versions-api", "port":3000, "uris":["hcf-versions-api.((DOMAIN))"], "registration_interval":"10s"}]'
- name: demophon
  environment_scripts:
  - scripts/inverted_skip_ssl.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/setup-demophon-env.sh
  - scripts/patches/fix_loggregator.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: demophon
    release_name: hcf
  - name: metron_agent
    release_name: cf
  processes:
  - name: demophon
  - name: metron_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 128
    virtual-cpus: 2
    exposed-ports:
      - name: 'demophon'
        protocol: 'TCP'
        external: 8443
        internal: 8443
        public: false
- name: persi-broker
  environment_scripts:
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: localdriver
    release_name: local-volume
  - name: localbroker
    release_name: local-volume
  - name: haproxy
    release_name: cf
  processes:
  - name: localdriver
  - name: localbroker
  - name: haproxy
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes:
    - path: /var/vcap/store
      tag:  persibroker-data
      size: 1
    shared-volumes:
    - path: '/var/vcap/persistore/servicevolumes/_volumes'
      size: 100
      tag: 'persistore'
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'persi-broker'
        protocol: 'TCP'
        external: 443
        internal: 443
        public: false
  configuration:
    templates:
      properties.localbroker.listen-addr: "127.0.0.1:8999"
      properties.router.servers: '["127.0.0.1"]'
      properties.router.port: 8999
      properties.ha_proxy.disable_http: true
      properties.ha_proxy.ssl_pem: '"((PERSI_BROKER_TLS_CERT_KEY))"'
      properties.cc.allow_app_ssh_access: false
configuration:
  variables:
  - name: ALLOWED_CORS_DOMAINS
    default: []
    description: List of domains (including scheme) from which Cross-Origin requests will be accepted, a * can be used as a wildcard for any part of a domain.
  - name: ALLOW_APP_SSH_ACCESS
    default: true
    description: Allow users to change the value of the app-level allow_ssh attribute.
  - name: BLOBSTORE_ACCESS_RULES
    default: 'allow 10.0.0.0/8; allow 172.16.0.0/12; allow 192.168.0.0/16;'
    description: List of allow / deny rules for the blobstore internal server. Will be followed by 'deny all'. Each entry must be follow by a semicolon.
  - name: BLOBSTORE_MAX_UPLOAD_SIZE
    default: 5000
    description: Maximal allowed file size for upload to blobstore, in megabytes.
  - name: BLOBSTORE_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The basic auth password that Cloud Controller uses to connect to the blobstore server. Auto-generated if not provided. Passwords must be alphanumeric (URL-safe).
  - name: BLOBSTORE_SECURE_LINK
    secret: true
    immutable: true
    generator:
      type: Password
    description: The secret used for signing URLs between Cloud Controller and blobstore.
  - name: AUTOSCALER_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The Autoscaler API password. Auto-generated if not provided. Passwords must be alphanumeric (URL-safe).
  - name: CDN_URI
    default: "''"
    description: URI for a CDN to use for buildpack downloads.
  - name: CONSUL_HCF_CLUSTER_CONFIG_REVISION
    default: 0
    description: An indicator to increment when changing the number of consul hosts in the cluster, to properly trigger HCP component restarts.
  - name: DIEGO_CELL_MEMORY_CAPACITY_MB
    default: auto
    description: The memory capacity the cell should manage. If this capacity is larger than the actual memory of the cell component, over-provisioning will occur.
  - name: USE_DIEGO_PRIVILEGED_CONTAINERS
    default: false
    description: Whether or not to use privileged containers for buildpack based applications. Containers with a docker-image-based rootfs will continue to always be unprivileged.
  - name: DISABLE_CUSTOM_BUILDPACKS
    default: false
    description: Disable external buildpacks. Only admin buildpacks and system buildpacks will be available to users.
  - name: DEFAULT_APP_DISK_IN_MB
    default: 1024
    description: The standard amount of disk (in MB) given to an application when not overriden by the user via manifest, command line, etc.
  - name: DEFAULT_APP_MEMORY
    default: 1024
    description: The standard amount of memory (in MB) given to an application when not overriden by the user via manifest, command line, etc.
  - name: DEFAULT_APP_SSH_ACCESS
    default: true
    description: If set apps pushed to spaces that allow SSH access will have SSH enabled by default.
  - name: DROPLET_MAX_STAGED_STORED
    default: 5
    description: The number of versions of an application to keep. You will be able to rollback to this amount of versions.
  - name: DNS_HEALTH_CHECK_HOST
    default: "127.0.0.1"
    description: The host to ping for confirmation of DNS resolution.
  - name: FORCE_FORWARDED_PROTO_AS_HTTPS
    default: false
    description: Enables setting the X-Forwarded-Proto header if SSL termination happened upstream and the header value was set incorrectly. When this property is set to true, the gorouter sets the header X-Forwarded-Proto to https. When this value set to false, the gorouter sets the header X-Forwarded-Proto to the protocol of the incoming request.
  - name: GARDEN_DOCKER_REGISTRY
    default: registry-1.docker.io
    description: URL pointing to the Docker registry used for fetching Docker images. If not set, the Docker service default is used.
  - name: GARDEN_INSECURE_DOCKER_REGISTRIES
    required: false
    default: ''
    description: Whitelist of IP:PORT tuples and CIDR subnet masks. Pulling from docker registries with self signed certificates will not be permitted if the registry's address is not listed here.
  - name: LOG_LEVEL
    default: info
    description: "The cluster's log level: off, fatal, error, warn, info, debug, debug1, debug2."
  - name: NATS_HCF_CLUSTER_CONFIG_REVISION
    default: 0
    description: An indicator to increment when changing the number of NATS hosts in the cluster, to properly trigger HCP component restarts.
  - name: NGINX_MAX_REQUEST_BODY_SIZE
    default: 1536
    description: Sets the maximum allowed size of the client request body, specified in the “Content-Length” request header field, in megabytes. If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client. Please be aware that browsers cannot correctly display this error. Setting size to 0 disables checking of client request body size. This limits application uploads, buildpack uploads, etc.
  - name: MAX_APP_DISK_IN_MB
    default: 2048
    description: The maximum amount of disk a user can request for an application via manifest, command line, etc., in MB. See also DEFAULT_APP_DISK_IN_MB for the standard amount.
  - name: MAX_HEALTH_CHECK_TIMEOUT
    default: 180
    description: Maximum health check timeout that can be set for an app, in seconds.
  - name: MYSQL_HCF_CLUSTER_CONFIG_REVISION
    default: 0
    description: An indicator to increment when changing the number of MySQL hosts in the cluster, to properly trigger HCP component restarts.
  - name: ETCD_HCF_CLUSTER_CONFIG_REVISION
    default: 0
    description: An indicator to increment when changing the number of etcd hosts in the cluster, to properly trigger HCP component restarts.
  - name: BULK_API_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for the bulk api.
  - name: CCDB_ROLE_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to the Cloud Controller database.
  - name: CF_USB_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    example: password
    description: The password for access to the Universal Service Broker.
  - name: MYSQL_CF_USB_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    example: password
    description: The password for access to the usb config database.
  - name: CLUSTER_ADMIN_AUTHORITIES
    default: scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,routing.router_groups.read
    description: The Oauth2 authorities available to the cluster administrator.
  - name: CLUSTER_ADMIN_PASSWORD
    secret: true
    immutable: true
    description: The password for the cluster administrator.
  - name: CLUSTER_BUILD
    default: 4.1.1
    description: "'build' attribute in the /v2/info endpoint"
  - name: CLUSTER_DESCRIPTION
    default: HPE Helion Cloud Foundry
    description: "'description' attribute in the /v2/info endpoint"
  - name: CLUSTER_NAME
    default: HCF
    description: "'name' attribute in the /v2/info endpoint"
  - name: CLUSTER_VERSION
    default: 2
    description: "'version' attribute in the /v2/info endpoint"
  - name: SUPPORT_ADDRESS
    default: stackato-support@hpe.com
    description: "Support contact information for the cluster"
  - name: CONSUL_ENCRYPTION_KEYS
    secret: true
    immutable: true
    generator:
      type: Password
    description: 'Part of: A list of passphrases that will be converted into encryption
      keys, the first key in the list is the active one.'
  - name: DB_ENCRYPTION_KEY
    secret: true
    immutable: true
    generator:
      type: Password
    description: key for encrypting sensitive values in the Cloud Controller database.
  - name: DOMAIN
    example: my-hcf-cluster.com
    required: true
    description: Base domain of the HCF cluster.
  - name: TCP_DOMAIN
    example: tcp.my-hcf-cluster.com
    required: false
    description: TCP routing domain of the HCF cluster.
  - name: RESERVABLE_PORTS
    default: "20000-20008"
    description: Modifying this value will break TCP port forwarding.
  - name: HCF_LOG_HOST
    default: ''
    required: false
    description: The log destination to talk to. If not set it defaults to flightrecorder.
  - name: HCF_LOG_PORT
    default: ''
    required: false
    description: The port used by rsyslog to talk to the log destination. If not set it defaults to the flightrecorder port. If that is not set we fall back to 514, the standard port of syslog.
  - name: HCF_LOG_PROTOCOL
    default: tcp
    description: The protocol used by rsyslog to talk to the log destination. The allowed values are tcp, and udp.
  - name: HCF_SSO_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to the HCF SSO service broker.
  - name: HCF_SSO_OAUTH_AUTHORIZE_URL
    description: The OAuth authorization URL for SSO; defaults to using the same UAA as HCF
    required: false
  - name: HCF_SSO_OAUTH_ID
    immutable: true
    default: hcf-sso
    description: The OAuth client id for SSO; defaults to the HCF-built-in client for UAA
    required: false
  - name: HCF_SSO_OAUTH_TOKEN_URL
    description: The OAuth token URL for SSO; defaults to using the same UAA as HCF
    required: false
  - name: HCF_SSO_OAUTH_VERIFICATION_KEY
    description: The OAuth verification key for SSO; defaults to using the same UAA as HCF
    secret: false
    required: false
  - name: PERSI_BROKER_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to the Persi service broker.
  - name: LOGGREGATOR_SHARED_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: Shared secret used to verify cryptographically signed dropsonde messages.
  - name: MONIT_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: Password used for the monit API.
  - name: NATS_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to NATS.
  - name: STAGING_UPLOAD_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to the uploader of staged droplets.
  - name: INTERNAL_API_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: Basic auth password for access to the Cloud Controller's internal API.
  - name: TRUSTED_CERTS
    required: false
    description: Concatenation of trusted CA certificates to be made available on the cell.
  - name: UAA_ADMIN_CLIENT_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password of the admin client - a client named admin with uaa.admin as an authority.
  - name: UAA_CC_CLIENT_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the Cloud Controller.
  - name: UAA_CLIENTS_DOPPLER_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by doppler.
  - name: UAA_CLIENTS_GOROUTER_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the gorouter.
  - name: UAA_CLIENTS_HCF_SSO_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The OAuth client secret for SSO; defaults to a randomly generated value
  - name: UAA_CLIENTS_LOGIN_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the login client.
  - name: UAA_CLIENTS_CC_ROUTING_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the Routing API.
  - name: UAA_CLIENTS_CC_SERVICE_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: Used for generating SSO clients for service brokers.
  - name: UAA_CLIENTS_CF_USB_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the Universal Service Broker.
  - name: UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the SSH proxy.
  - name: UAA_CLIENTS_HCF_AUTO_CONFIG_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the task creating the cluster administrator user
  - name: UAA_CLIENTS_TCP_EMITTER_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the TCP emitter.
  - name: UAA_CLIENTS_TCP_ROUTER_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the TCP router.
  - name: BBS_ACTIVE_KEY_PASSPHRASE
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to the diego BBS database.
  - name: MYSQL_ADMIN_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for the MySQL server admin user.
  - name: MYSQL_CLUSTER_HEALTH_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for the cluster logger health user.
  - name: MYSQL_PROXY_ADMIN_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for Basic Auth used to secure the MySQL proxy API.
  - name: MYSQL_DIEGO_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to MySQL by diego.
  - name: MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password used to contact the sidecar endpoints via Basic Auth.
  - name: UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the Cloud Controller for fetching usernames.
  - name: UAADB_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to the UAA database.
  - name: DIEGO_CELL_SUBNET
    default: 10.38.0.0/16
    description: A CIDR subnet mask specifying the range of subnets available to be assigned to containers.
  - name: DIEGO_CELL_NETWORK_MTU
    default: "1400"
    description: Maximum network transmission unit length in bytes for application containers.
  # Certificates
  - name: ETCD_PEER_KEY
    secret: true
    generator:
      id: "etcd_peer_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded peer key.
  - name: ETCD_PEER_CRT
    secret: true
    generator:
      id: "etcd_peer_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded peer certificate.
  - name: ETCD_SERVER_KEY
    secret: true
    generator:
      id: "etcd_server_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded server key.
  - name: ETCD_CLIENT_KEY
    secret: true
    generator:
      id: "etcd_client_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded client key.
  - name: ETCD_SERVER_CRT
    secret: true
    generator:
      id: "etcd_server_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded server certificate.
  - name: ETCD_CLIENT_CRT
    secret: true
    generator:
      id: "etcd_client_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded client certificate.
  - name: DOPPLER_CERT
    secret: true
    generator:
      id: "doppler_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate.
  - name: DOPPLER_KEY
    secret: true
    generator:
      id: "doppler_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key.
  - name: AUCTIONEER_SERVER_CERT
    secret: true
    generator:
      id: "auctioneer_server_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded server certificate
  - name: AUCTIONEER_SERVER_KEY
    secret: true
    generator:
      id: "auctioneer_server_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded server key
  - name: AUCTIONEER_REP_CERT
    secret: true
    generator:
      id: "auctioneer_rep_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
  - name: AUCTIONEER_REP_KEY
    secret: true
    generator:
      id: "auctioneer_rep_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key
  - name: BBS_AUCTIONEER_CERT
    secret: true
    generator:
      id: "bbs_auctioneer_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
  - name: BBS_AUCTIONEER_KEY
    secret: true
    generator:
      id: "bbs_auctioneer_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key
  - name: BBS_REP_CERT
    secret: true
    generator:
      id: "bbs_rep_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
  - name: BBS_REP_KEY
    secret: true
    generator:
      id: "bbs_rep_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key
  - name: REP_SERVER_CERT
    secret: true
    generator:
      id: "rep_server_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded server certificate
  - name: REP_SERVER_KEY
    secret: true
    generator:
      id: "rep_server_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded server key
  - name: METRON_KEY
    secret: true
    generator:
      id: "metron_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key.
  - name: METRON_CERT
    secret: true
    generator:
      id: "metron_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate.
  - name: SAML_SERVICEPROVIDER_CERT
    secret: true
    generator:
      id: "saml_serviceprovider_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
  - name: SAML_SERVICEPROVIDER_KEY
    secret: true
    generator:
      id: "saml_serviceprovider_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key.
  - name: TRAFFICCONTROLLER_CERT
    secret: true
    generator:
      id: "trafficcontroller_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
  - name: TRAFFICCONTROLLER_KEY
    secret: true
    generator:
      id: "trafficcontroller_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key.
  - name: BBS_SERVER_KEY
    secret: true
    generator:
      id: "bbs_server_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded client key.
  - name: BBS_CLIENT_KEY
    secret: true
    generator:
      id: "bbs_client_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded client key.
  - name: BBS_SERVER_CRT
    secret: true
    generator:
      id: "bbs_server_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded client certificate.
  - name: BBS_CLIENT_CRT
    secret: true
    generator:
      id: "bbs_client_cert"
      type: Certificate
      value_type: certificate
    description: PEM-encoded client certificate.
  - name: APP_SSH_KEY
    secret: true
    generator:
      id: "app_ssh"
      type: SSH
      value_type: private_key
      key_length: 4096
    description: PEM encoded RSA private key used to identify host.
  - name: APP_SSH_KEY_FINGERPRINT
    secret: true
    generator:
      id: "app_ssh"
      type: SSH
      value_type: fingerprint
    description: MD5 fingerprint of the host key of the SSH proxy that brokers connections to application instances.
  - name: ROOTFS_TRUSTED_CERTS
    default: ''
    required: false
    description: Certficates to add to the rootfs trust store. Multiple certs are possible by concatenating their definitions into one big block of text.
  - name: ROUTER_BALANCING_ALGORITHM
    default: 'round-robin'
    description: The algorithm used by the router to distribute requests for a route across backends. Supported values are round-robin and least-connection.
  - name: ROUTER_CIPHER_SUITES
    default: 'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384'
    description: An ordered list of supported SSL cipher suites containing golang tls constants separated by colons.The cipher suite will be chosen according to this order during SSL handshake
  - name: ROUTER_MAX_IDLE_CONNECTIONS
    default: 0
    description: Maximum total idle keepalive connections to backends. When 0, support for keepalive connections is disabled. Maximum idle connections per backend is 100.
  - name: ROUTER_SERVICES_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: Support for route services is disabled when no value is configured. A robust passphrase is recommended.
  - name: ROUTER_SSL_CERT
    secret: true
    generator:
      id: "router_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
      subject_alt_names:
        - parameter: DOMAIN
          wildcard: false
        - parameter: DOMAIN
          wildcard: true
    description: The public ssl cert for ssl termination.
  - name: ROUTER_SSL_KEY
    secret: true
    generator:
      id: "router_cert"
      type: Certificate
      value_type: private_key
    description: The private ssl key for ssl termination.
  - name: HAPROXY_SSL_CERT_KEY
    secret: true
    generator:
      id: "router_cert"
      type: Certificate
      value_type: cert_private_key
    description: SSL certificate (PEM file).
  - name: ROUTER_STATUS_PASSWORD
    secret: true
    immutable: true
    generator:
      id: "router_status_password"
      type: Password
    description: Password for HTTP basic auth to the varz/status endpoint.
  - name: UAA_SERVER_KEY
    secret: true
    generator:
      id: "uaa_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: The server's ssl private key. Only passphrase-less keys are supported.
  - name: UAA_SERVER_CERT
    secret: true
    generator:
      id: "uaa_cert"
      type: Certificate
      value_type: certificate
    description: The server's ssl certificate. The default is a self-signed certificate and should always be replaced for production deployments.
  - name: BLOBSTORE_TLS_CERT
    secret: true
    generator:
      id: "blobstore_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
      subject_alt_names:
        - parameter: DOMAIN
          wildcard: false
        - parameter: DOMAIN
          wildcard: true
    description: The PEM-encoded certificate (optionally as a certificate chain) for serving blobs over TLS/SSL.
  - name: BLOBSTORE_TLS_KEY
    secret: true
    generator:
      id: "blobstore_cert"
      type: Certificate
      value_type: private_key
    description: The PEM-encoded private key for signing TLS/SSL traffic.
  - name: CONSUL_AGENT_CERT
    secret: true
    generator:
      id: "consul_agent_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
    description: PEM-encoded agent certificate.
  - name: CONSUL_AGENT_KEY
    secret: true
    generator:
      id: "consul_agent_cert"
      type: Certificate
      value_type: private_key
    description: PEM-encoded client key.
  - name: CONSUL_SERVER_CERT
    secret: true
    generator:
      id: "consul_server_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
      subject_alt_names:
        - static: server.dc1.hcf
          wildcard: false
    description: PEM-encoded server certificate.
  - name: CONSUL_SERVER_KEY
    secret: true
    generator:
      id: "consul_server_cert"
      type: Certificate
      value_type: private_key
    description: PEM-encoded server key.
  - name: DEMOPHON_SERVER_CERT
    secret: true
    generator:
      id: "demophon_server_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
    description: PEM-encoded server certificate.
  - name: DEMOPHON_SERVER_KEY
    secret: true
    generator:
      id: "demophon_server_cert"
      type: Certificate
      value_type: private_key
    description: PEM-encoded server key.
  - name: PERSI_BROKER_TLS_CERT_KEY
    secret: true
    generator:
      id: "persi_broker_cert"
      type: Certificate
      value_type: cert_private_key
    description: TLS certificate and key (PEM file).
  - name: SKIP_CERT_VERIFY_INTERNAL
    default: false
    example: false
    description: Determines whether dashboard verifies SSL certificates when communicating with Cloud Controller and UAA.
  - name: SKIP_CERT_VERIFY_EXTERNAL
    default: false
    description: Skip TLS verification when communicating with UAA system domain.
  - name: GARDEN_LINUX_DNS_SERVER
    default: ""
    required: false
    description: 'Override DNS servers to be used in containers; defaults to the same as the host.'
  - name: INTERNAL_CA_CERT
    secret: true
    generator:
      id: "cacert"
      type: CACertificate
      value_type: certificate
    description: PEM-encoded CA certificate used to sign TLS certificate hosted by Diego BBS.
  - name: SSO_ROUTE_CERT
    secret: true
    generator:
      id: "sso_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
    description: Certificate for the SSO service.
  - name: SSO_ROUTE_KEY
    secret: true
    generator:
      id: "sso_cert"
      type: Certificate
      value_type: private_key
    description: Key for the SSO service.
  - name: STAGER_INSECURE_DOCKER_REGISTRIES
    default: ''
    required: false
    example: '"docker-registry.example.com:80", "hello.example.org:443"'
    description: >
      A comma-separated list of insecure Docker registries in the form of '<HOSTNAME|IP>:PORT'.
      Each registry must be quoted separately.
  - name: USE_STAGER_PRIVILEGED_CONTAINERS
    default: false
    description: Whether or not to use privileged containers for staging tasks.
  - name: STAGING_TIMEOUT
    default: 900
    description: Timeout for staging an app, in seconds.
  - name: CF_USB_BROKER_SERVER_CERT
    secret: true
    generator:
      id: "usb_broker_server_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
    description: PEM-encoded broker server certificate.
  - name: CF_USB_BROKER_SERVER_KEY
    secret: true
    generator:
      id: "usb_broker_server_cert"
      type: Certificate
      value_type: private_key
    description: PEM-encoded broker server key.
  - name: AUTOSCALER_COUCHDB_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: the password.
  - name: UAA_CLIENTS_CF_AUTOSCALER_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the Autoscaler.
  - name: APP_TOKEN_UPLOAD_GRACE_PERIOD
    default: 1200
    description: Extra token expiry time while uploading big apps, in seconds.
  templates:
    az: '"((HCP_AZ))"'
    id: '"((HCP_COMPONENT_NAME))((#HCP_INSTANCE_ID))-((HCP_COMPONENT_INDEX))((/HCP_INSTANCE_ID))-int"'
    index: "((HCP_COMPONENT_INDEX))((^HCP_COMPONENT_INDEX))0((/HCP_COMPONENT_INDEX))"
    networks.default.dns_record_name: '"((#HCP_COMPONENT_NAME))((HCP_COMPONENT_NAME))-int((/HCP_COMPONENT_NAME))((^HCP_COMPONENT_NAME))((DNS_RECORD_NAME))((/HCP_COMPONENT_NAME))"'
    networks.default.ip: '"((IP_ADDRESS))"'
    properties.acceptance_tests.admin_password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.acceptance_tests.api: '"api.((DOMAIN))"'
    properties.acceptance_tests.apps_domain: '"((DOMAIN))"'
    properties.acceptance_tests_brain.domain: '"((DOMAIN))"'
    properties.acceptance_tests_brain.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.acceptance_tests_brain.tcp_domain: '"((TCP_DOMAIN))"'
    properties.app_domains: '["((DOMAIN))"]'
    properties.app_ssh.host_key_fingerprint: '"((APP_SSH_KEY_FINGERPRINT))"'
    properties.autoscaler.autoscaler_api.host: '"sclr-api-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.autoscaler.autoscaler_server.host: '"sclr-server-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.autoscaler.couchdb.host: '"couchdb-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.autoscaler_api.internal_auth.password: '"((AUTOSCALER_PASSWORD))"'
    properties.autoscaler_server.internal_auth.password: '"((AUTOSCALER_PASSWORD))"'
    properties.autoscaler_servicebroker.auth.password: '"((AUTOSCALER_PASSWORD))"'
    properties.autoscaler_servicebroker.host: '"sclr-broker-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.bbs.api_location: 'diego-database-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8889'
    properties.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.blobstore.admin_users:  '[{"username": "blobstore_user", "password": "((BLOBSTORE_PASSWORD))"}]'
    properties.blobstore.internal_access_rules: '[((BLOBSTORE_ACCESS_RULES))]'
    properties.blobstore.max_upload_size: '((BLOBSTORE_MAX_UPLOAD_SIZE))m'
    properties.blobstore.secure_link.secret: '"((BLOBSTORE_SECURE_LINK))"'
    properties.blobstore.tls.cert: '"((BLOBSTORE_TLS_CERT))"'
    properties.blobstore.tls.private_key: '"((BLOBSTORE_TLS_KEY))"'
    properties.build: '"((CLUSTER_BUILD))"'
    properties.capi.cc_uploader.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.capi.nsync.bbs.api_location: 'diego-database-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8889'
    properties.capi.nsync.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.nsync.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.capi.nsync.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.capi.nsync.cc.base_url: '"http://api-int.((HCP_SERVICE_DOMAIN_SUFFIX)):9022"'
    properties.capi.nsync.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.capi.nsync.diego_privileged_containers: '((USE_DIEGO_PRIVILEGED_CONTAINERS))'
    properties.capi.nsync.file_server_url: "http://diego-access-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8080"
    properties.capi.nsync.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.capi.stager.bbs.api_location: 'diego-database-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8889'
    properties.capi.stager.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.stager.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.capi.stager.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.capi.stager.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.capi.stager.cc.internal_service_hostname: '"api-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.capi.stager.cc_uploader_url: "http://diego-cc-bridge-int.((HCP_SERVICE_DOMAIN_SUFFIX)):9090"
    properties.capi.stager.diego_privileged_containers: '((USE_STAGER_PRIVILEGED_CONTAINERS))'
    properties.capi.stager.file_server_url: "http://diego-access-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8080"
    properties.capi.stager.insecure_docker_registry_list: '[((STAGER_INSECURE_DOCKER_REGISTRIES))]'
    properties.capi.stager.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.capi.stager.staging_task_callback_url: "http://diego-cc-bridge-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8888"
    properties.capi.tps.bbs.api_location: '"diego-database-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8889"'
    properties.capi.tps.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.tps.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.capi.tps.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.capi.tps.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.capi.tps.cc.internal_service_hostname: '"api-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.capi.tps.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.capi.tps.traffic_controller_url: "ws://loggregator-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8081"
    properties.cc.allow_app_ssh_access: '((ALLOW_APP_SSH_ACCESS))'
    properties.cc.allowed_cors_domains: '((ALLOWED_CORS_DOMAINS))'
    properties.cc.app_bits_max_body_size: '((NGINX_MAX_REQUEST_BODY_SIZE))M'
    properties.cc.app_bits_upload_grace_period_in_seconds: '((APP_TOKEN_UPLOAD_GRACE_PERIOD))'
    properties.cc.buildpacks.cdn.uri: '"((CDN_URI))"'
    properties.cc.buildpacks.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.buildpacks.webdav_config.private_endpoint: '"https://blobstore-int.((HCP_SERVICE_DOMAIN_SUFFIX)):4443"'
    properties.cc.buildpacks.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.bulk_api_password: '"((BULK_API_PASSWORD))"'
    properties.cc.db_encryption_key: '"((DB_ENCRYPTION_KEY))"'
    properties.cc.default_app_disk_in_mb: '"((DEFAULT_APP_DISK_IN_MB))"'
    properties.cc.default_app_memory: '"((DEFAULT_APP_MEMORY))"'
    properties.cc.default_app_ssh_access: '"((DEFAULT_APP_SSH_ACCESS))"'
    properties.cc.diego.nsync_url: "http://diego-cc-bridge-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8787"
    properties.cc.diego.stager_url: "http://diego-cc-bridge-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8888"
    properties.cc.diego.tps_url: "http://diego-cc-bridge-int.((HCP_SERVICE_DOMAIN_SUFFIX)):1518"
    properties.cc.disable_custom_buildpacks: '((DISABLE_CUSTOM_BUILDPACKS))'
    properties.cc.droplets.max_staged_droplets_stored: '((DROPLET_MAX_STAGED_STORED))'
    properties.cc.droplets.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.droplets.webdav_config.private_endpoint: '"https://blobstore-int.((HCP_SERVICE_DOMAIN_SUFFIX)):4443"'
    properties.cc.droplets.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.internal_api_password: '"((INTERNAL_API_PASSWORD))"'
    properties.cc.internal_service_hostname: '"api-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.cc.logging_level: '"((LOG_LEVEL))"'
    properties.cc.maximum_app_disk_in_mb: '((MAX_APP_DISK_IN_MB))'
    properties.cc.maximum_health_check_timeout: '((MAX_HEALTH_CHECK_TIMEOUT))'
    properties.cc.nginx_error_log_level: '"((NGINX_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.cc.packages.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.packages.webdav_config.private_endpoint: '"https://blobstore-int.((HCP_SERVICE_DOMAIN_SUFFIX)):4443"'
    properties.cc.packages.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.resource_pool.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.resource_pool.webdav_config.private_endpoint: '"https://blobstore-int.((HCP_SERVICE_DOMAIN_SUFFIX)):4443"'
    properties.cc.resource_pool.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.srv_api_uri: '"http://api-int.((HCP_SERVICE_DOMAIN_SUFFIX)):9022"'
    properties.cc.staging_timeout_in_seconds: '((STAGING_TIMEOUT))'
    properties.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.cc.uaa.internal_url: '"((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))hcf.uaa-int.((HCP_SERVICE_DOMAIN_SUFFIX))((/HCP_IDENTITY_EXTERNAL_HOST))"'
    properties.ccdb.address: 'mysql-proxy-int.((HCP_SERVICE_DOMAIN_SUFFIX))'
    properties.ccdb.roles: '[{"name": "ccadmin", "password": "((CCDB_ROLE_PASSWORD))", "tag": "admin"}]'
    properties.cf-usb.broker.external_url: '"https://cf-usb-int.((HCP_SERVICE_DOMAIN_SUFFIX)):24054"'
    properties.cf-usb.broker.password: '"((CF_USB_PASSWORD))"'
    properties.cf-usb.broker.server_cert: '"((CF_USB_BROKER_SERVER_CERT))"'
    properties.cf-usb.broker.server_key: '"((CF_USB_BROKER_SERVER_KEY))"'
    properties.cf-usb.management.public_key: '"((JWT_SIGNING_PUB))"'
    properties.cf-usb.management.uaa.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.cf-usb.mysql_password: "((MYSQL_CF_USB_PASSWORD))"
    properties.cf-usb.mysql_address: 'mysql-proxy-int.((HCP_SERVICE_DOMAIN_SUFFIX))'
    properties.cf.skip_ssl_validation: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.cf_mysql.mysql.advertise_host: '((#HCP_COMPONENT_NAME))"((HCP_COMPONENT_NAME))-((HCP_COMPONENT_INDEX))-int.((HCP_SERVICE_DOMAIN_SUFFIX))"((/HCP_COMPONENT_NAME))((^HCP_COMPONENT_NAME))nil((/HCP_COMPONENT_NAME))'
    properties.cf_mysql.mysql.seeded_databases: '[{"name":"ccdb", "username":"ccadmin", "password": "((CCDB_ROLE_PASSWORD))"}, {"name":"uaadb", "username": "uaaadmin", "password":"((UAADB_PASSWORD))"}, {"name":"diego", "username": "diego", "password":"((MYSQL_DIEGO_PASSWORD))"},{"name":"usb", "username": "usb", "password":"((MYSQL_CF_USB_PASSWORD))"}]'
    properties.cflinuxfs2-rootfs.trusted_certs: '"((ROOTFS_TRUSTED_CERTS))"'
    properties.consul.agent.log_level: '"((CONSUL_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.consul.agent.servers.lan: '((CONSUL_HCF_CLUSTER_IPS))((#CONSUL_HCF_CLUSTER_CONFIG_REVISION))((/CONSUL_HCF_CLUSTER_CONFIG_REVISION))'
    properties.consul.agent_cert: '"((CONSUL_AGENT_CERT))"'
    properties.consul.agent_key: '"((CONSUL_AGENT_KEY))"'
    properties.consul.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.consul.encrypt_keys: '["((CONSUL_ENCRYPTION_KEYS))"]'
    properties.consul.server_cert: '"((CONSUL_SERVER_CERT))"'
    properties.consul.server_key: '"((CONSUL_SERVER_KEY))"'
    properties.couchdb.host: '"couchdb-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.couchdb.password: '"((AUTOSCALER_COUCHDB_PASSWORD))"'
    # CLUSTER_DESCRIPTION is not wrapped in quotes because it has quotes in the dev env file.
    properties.description: '((CLUSTER_DESCRIPTION))'
    properties.diego.auctioneer.bbs.api_location: 'diego-database-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8889'
    properties.diego.auctioneer.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.auctioneer.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.auctioneer.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.auctioneer.rep.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.rep.client_cert: '"((AUCTIONEER_REP_CERT))"'
    properties.diego.auctioneer.rep.client_key: '"((AUCTIONEER_REP_KEY))"'
    properties.diego.auctioneer.rep.require_tls: '((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))'
    properties.diego.auctioneer.server_cert: '"((AUCTIONEER_SERVER_CERT))"'
    properties.diego.auctioneer.server_key: '"((AUCTIONEER_SERVER_KEY))"'
    properties.diego.bbs.auctioneer.api_location: 'diego-brain-int.((HCP_SERVICE_DOMAIN_SUFFIX)):9016'
    properties.diego.bbs.auctioneer.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.auctioneer.client_cert: '"((BBS_AUCTIONEER_CERT))"'
    properties.diego.bbs.auctioneer.client_key: '"((BBS_AUCTIONEER_KEY))"'
    properties.diego.bbs.auctioneer.require_tls: '((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))'
    properties.diego.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.encryption_keys: '[{"label": "active", "passphrase": "((BBS_ACTIVE_KEY_PASSPHRASE))"}]'
    properties.diego.bbs.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.diego.bbs.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.diego.bbs.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.bbs.rep.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.rep.client_cert: '"((BBS_REP_CERT))"'
    properties.diego.bbs.rep.client_key: '"((BBS_REP_KEY))"'
    properties.diego.bbs.rep.require_tls: '((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))'
    properties.diego.bbs.server_cert: '"((BBS_SERVER_CRT))"'
    properties.diego.bbs.server_key: '"((BBS_SERVER_KEY))"'
    properties.diego.bbs.sql.db_connection_string: '"((={{ }}=))diego:{{MYSQL_DIEGO_PASSWORD}}@tcp(mysql-proxy-int.{{HCP_SERVICE_DOMAIN_SUFFIX}}:3306)/diego{{=(( ))=}}"'
    properties.diego.executor.memory_capacity_mb: '((DIEGO_CELL_MEMORY_CAPACITY_MB))'
    properties.diego.file_server.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.rep.advertise_domain: '((HCP_SERVICE_DOMAIN_SUFFIX))'
    properties.diego.rep.bbs.api_location: 'diego-database-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8889'
    properties.diego.rep.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.rep.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.rep.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.rep.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.rep.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.rep.require_tls: '((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))'
    properties.diego.rep.server_cert: '"((REP_SERVER_CERT))"'
    properties.diego.rep.server_key: '"((REP_SERVER_KEY))"'
    properties.diego.rep.trusted_certs: '"((TRUSTED_CERTS))"'
    properties.diego.rep.zone: '"((HCP_AZ))"'
    properties.diego.route_emitter.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.route_emitter.bbs.api_location: 'diego-database-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8889'
    properties.diego.route_emitter.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.route_emitter.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.route_emitter.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.route_emitter.nats.machines: '((NATS_HCF_CLUSTER_IPS))((#NATS_HCF_CLUSTER_CONFIG_REVISION))((/NATS_HCF_CLUSTER_CONFIG_REVISION))'
    properties.diego.route_emitter.nats.password: '"((NATS_PASSWORD))"'
    properties.diego.ssh_proxy.bbs.api_location: 'diego-database-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8889'
    properties.diego.ssh_proxy.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.ssh_proxy.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.ssh_proxy.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.ssh_proxy.cc.internal_service_hostname: '"api-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.diego.ssh_proxy.host_key: '"((APP_SSH_KEY))"'
    properties.diego.ssh_proxy.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.ssh_proxy.uaa_secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.diego.ssh_proxy.uaa_token_url: '"((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))hcf.uaa-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8443((/HCP_IDENTITY_EXTERNAL_HOST))/oauth/token"'
    properties.diego.ssl.skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.domain: '"((DOMAIN))"'
    properties.doppler.addr: '"((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.doppler.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.doppler.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.doppler.syslog_skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.doppler_endpoint.shared_secret: '"((LOGGREGATOR_SHARED_SECRET))"'
    properties.etcd.advertise_urls_dns_suffix: '"((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.etcd.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
    properties.etcd.machines: '((ETCD_HCF_CLUSTER_IPS))((#ETCD_HCF_CLUSTER_CONFIG_REVISION))((/ETCD_HCF_CLUSTER_CONFIG_REVISION))'
    properties.etcd.peer_ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.garden.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.garden.docker_registry_endpoint: '((GARDEN_DOCKER_REGISTRY))((^GARDEN_DOCKER_REGISTRY))null((/GARDEN_DOCKER_REGISTRY))'
    properties.garden.insecure_docker_registry_list: '[((GARDEN_INSECURE_DOCKER_REGISTRIES))]'
    properties.hcf.hcp_flightrecorder_host: '"((HCP_FLIGHTRECORDER_HOST)).((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.hcf.hcp_flightrecorder_port: '"((HCP_FLIGHTRECORDER_PORT))"'
    properties.hcf.hcp_service_domain_suffix: '"((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.etcd.peer_cert: '"((ETCD_PEER_CRT))"'
    properties.etcd.peer_key: '"((ETCD_PEER_KEY))"'
    # Include SKIP_CERT_VERIFY_INTERNAL so our detection algorithm includes it in the HCP SDL
    properties.etcd.peer_require_ssl: '((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))'
    # Include SKIP_CERT_VERIFY_INTERNAL so our detection algorithm includes it in the HCP SDL
    properties.etcd.require_ssl: '((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))'
    properties.etcd.server_cert: '"((ETCD_SERVER_CRT))"'
    properties.etcd.server_key: '"((ETCD_SERVER_KEY))"'
    properties.etcd_metrics_server.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.etcd_metrics_server.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.etcd_metrics_server.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.etcd_metrics_server.etcd.dns_suffix: '"((HCP_SERVICE_DOMAIN_SUFFIX))"'
    # Include SKIP_CERT_VERIFY_INTERNAL so our detection algorithm includes it in the HCP SDL
    properties.etcd_metrics_server.etcd.require_ssl: '((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))'
    properties.garden.dns_servers: '[((GARDEN_LINUX_DNS_SERVER))]'
    properties.garden.http_proxy: '"((HTTP_PROXY))"'
    properties.garden.https_proxy: '"((HTTPS_PROXY))"'
    properties.garden.network_mtu: '((DIEGO_CELL_NETWORK_MTU))'
    properties.garden.network_pool: '"((DIEGO_CELL_SUBNET))"'
    properties.garden.no_proxy: '"((NO_PROXY))"'
    properties.ha_proxy.ssl_pem: '"((HAPROXY_SSL_CERT_KEY))"'
    properties.hcf.demophon.server_cert: '"((DEMOPHON_SERVER_CERT))"'
    properties.hcf.demophon.server_key: '"((DEMOPHON_SERVER_KEY))"'
    properties.hcf.demophon.skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.hcf.demophon.config: '[{"name":"CONSUL_HOST","value":"consul-int.((HCP_SERVICE_DOMAIN_SUFFIX))"},{"name":"CONSUL_ENCRYPTION_KEYS","value":"((CONSUL_ENCRYPTION_KEYS))"},{"name":"CONSUL_CA_CERT","value":"((INTERNAL_CA_CERT))"},{"name":"CONSUL_AGENT_CERT","value":"((CONSUL_AGENT_CERT))"},{"name":"CONSUL_AGENT_KEY","value":"((CONSUL_AGENT_KEY))"},{"name":"BBS_CA_CRT","value":"((INTERNAL_CA_CERT))"},{"name":"BBS_CLIENT_CRT","value":"((BBS_CLIENT_CRT))"},{"name":"BBS_CLIENT_KEY","value":"((BBS_CLIENT_KEY))"},{"name":"METRON_CA_CERT","value":"((INTERNAL_CA_CERT))"},{"name":"METRON_CERT","value":"((METRON_CERT))"},{"name":"METRON_KEY","value":"((METRON_KEY))"},{"name":"DIEGO_DATABASE_HOST","value":"diego-database-int.((HCP_SERVICE_DOMAIN_SUFFIX))"},{"name":"ETCD_HOST","value":"etcd-int.((HCP_SERVICE_DOMAIN_SUFFIX))"},{"name":"LOGGREGATOR_SHARED_SECRET","value":"((LOGGREGATOR_SHARED_SECRET))"},{"name":"SKIP_CERT_VERIFY_INTERNAL","value":"((SKIP_CERT_VERIFY_INTERNAL))"},{"name":"ETCD_CA_CRT","value":"((INTERNAL_CA_CERT))"},{"name":"ETCD_CLIENT_CRT","value":"((ETCD_CLIENT_CRT))"},{"name":"ETCD_CLIENT_KEY","value":"((ETCD_CLIENT_KEY))"},{"name":"REP_CA_CERT","value":"((INTERNAL_CA_CERT))"},{"name":"REP_SERVER_CERT","value":"((REP_SERVER_CERT))"},{"name":"REP_SERVER_KEY","value":"((REP_SERVER_KEY))"}]'
    properties.hcf.internal-ca-cert: '"((INTERNAL_CA_CERT))"'
    properties.hcf.monit.password: '"((MONIT_PASSWORD))"'
    properties.hcf.rep-certstrap.rep_ca_key: '"((REP_SERVER_KEY))"'
    properties.hcf.uaa.internal-url: '"((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))hcf.uaa-int.((HCP_SERVICE_DOMAIN_SUFFIX)):8443((/HCP_IDENTITY_EXTERNAL_HOST))"'
    properties.hcf.skip_cert_verify_external: '((SKIP_CERT_VERIFY_EXTERNAL))'
    properties.hcf_set_proxy.running_http_proxy: '"((HTTP_PROXY))"'
    properties.hcf_set_proxy.running_https_proxy: '"((HTTPS_PROXY))"'
    properties.hcf_set_proxy.running_no_proxy: '"((NO_PROXY))"'
    properties.hcf_set_proxy.staging_http_proxy: '"((HTTP_PROXY))"'
    properties.hcf_set_proxy.staging_https_proxy: '"((HTTPS_PROXY))"'
    properties.hcf_set_proxy.staging_no_proxy: '"((NO_PROXY))"'
    properties.hcf_sso.host: '"hcf-sso-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.hcf_sso.oauth.authorize_url: '"((HCF_SSO_OAUTH_AUTHORIZE_URL))((^HCF_SSO_OAUTH_AUTHORIZE_URL))((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))hcf.login.((DOMAIN))((/HCP_IDENTITY_EXTERNAL_HOST))/oauth/authorize((/HCF_SSO_OAUTH_AUTHORIZE_URL))"'
    properties.hcf_sso.oauth.id: '"((HCF_SSO_OAUTH_ID))"'
    properties.hcf_sso.oauth.secret: '"((UAA_CLIENTS_HCF_SSO_SECRET))"'
    properties.hcf_sso.oauth.token_url: '"((HCF_SSO_OAUTH_TOKEN_URL))((^HCF_SSO_OAUTH_TOKEN_URL))((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))hcf.login.((DOMAIN))((/HCP_IDENTITY_EXTERNAL_HOST))/oauth/token((/HCF_SSO_OAUTH_TOKEN_URL))"'
    properties.hcf_sso.oauth.verification_key: '"((HCF_SSO_OAUTH_VERIFICATION_KEY))((^HCF_SSO_OAUTH_VERIFICATION_KEY))((JWT_SIGNING_PUB))((/HCF_SSO_OAUTH_VERIFICATION_KEY))"'
    properties.hcf_sso.password: '"((HCF_SSO_PASSWORD))"'
    properties.hcf_sso.server_cert: '"((SSO_ROUTE_CERT))"'
    properties.hcf_sso.server_key: '"((SSO_ROUTE_KEY))"'
    properties.hcf_sso.skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.hcf_versions.blobstore.password: '"((BLOBSTORE_PASSWORD))"'
    properties.hcf_versions.blobstore.private_endpoint: '"https://blobstore-int.((HCP_SERVICE_DOMAIN_SUFFIX)):4443"'
    properties.hcf_versions.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
    properties.hcf_versions.skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.localbroker.password: '"((PERSI_BROKER_PASSWORD))"'
    properties.loggregator.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.loggregator.etcd.machines: '((ETCD_HCF_CLUSTER_IPS))((#ETCD_HCF_CLUSTER_CONFIG_REVISION))((/ETCD_HCF_CLUSTER_CONFIG_REVISION))'
    # Include SKIP_CERT_VERIFY_INTERNAL so our detection algorithm includes it in the HCP SDL
    properties.loggregator.etcd.require_ssl: '((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))'
    properties.loggregator.tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.loggregator.tls.doppler.cert: '"((DOPPLER_CERT))"'
    properties.loggregator.tls.doppler.key: '"((DOPPLER_KEY))"'
    properties.loggregator.tls.metron.cert: '"((METRON_CERT))"'
    properties.loggregator.tls.metron.key: '"((METRON_KEY))"'
    properties.loggregator.tls.trafficcontroller.cert: '"((TRAFFICCONTROLLER_CERT))"'
    properties.loggregator.tls.trafficcontroller.key: '"((TRAFFICCONTROLLER_KEY))"'
    properties.login.saml.serviceProviderCertificate: '"((SAML_SERVICEPROVIDER_CERT))"'
    properties.login.saml.serviceProviderKey: '"((SAML_SERVICEPROVIDER_KEY))"'
    properties.login.url: '"((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))hcf.uaa.((DOMAIN))((/HCP_IDENTITY_EXTERNAL_HOST))"'
    properties.loggregator.uaa.client_secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
    properties.metron_endpoint.shared_secret: '"((LOGGREGATOR_SHARED_SECRET))"'
    # CLUSTER_NAME is not wrapped in quotes because it has quotes in the dev env file.
    properties.name: '((CLUSTER_NAME))'
    properties.nats.machines: '((NATS_HCF_CLUSTER_IPS))((#NATS_HCF_CLUSTER_CONFIG_REVISION))((/NATS_HCF_CLUSTER_CONFIG_REVISION))'
    properties.nats.password: '"((NATS_PASSWORD))"'
    properties.router.balancing_algorithm: '"((ROUTER_BALANCING_ALGORITHM))"'
    properties.router.cipher_suites: '"((ROUTER_CIPHER_SUITES))"'
    properties.router.max_idle_connections: '"((ROUTER_MAX_IDLE_CONNECTIONS))"'
    properties.router.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
    properties.router.force_forwarded_proto_https: '((FORCE_FORWARDED_PROTO_AS_HTTPS))'
    properties.router.logging_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.router.route_services_secret: '"((ROUTER_SERVICES_SECRET))"'
    properties.router.servers: '["router-int.((HCP_SERVICE_DOMAIN_SUFFIX))"]'
    properties.router.ssl_cert: '"((ROUTER_SSL_CERT))"'
    properties.router.ssl_key: '"((ROUTER_SSL_KEY))"'
    properties.router.ssl_skip_validation: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.router.status.password: '"((ROUTER_STATUS_PASSWORD))"'
    properties.routing_api.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.routing_api.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.routing_api.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    # Include SKIP_CERT_VERIFY_INTERNAL so our detection algorithm includes it in the HCP SDL
    properties.routing_api.etcd.require_ssl: '((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))'
    properties.routing_api.etcd.servers: '((ETCD_HCF_CLUSTER_IPS))((#ETCD_HCF_CLUSTER_CONFIG_REVISION))((/ETCD_HCF_CLUSTER_CONFIG_REVISION))'
    properties.routing_api.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.routing_api.router_groups: '[{"name":"default-tcp", "type":"tcp", "reservable_ports":"((RESERVABLE_PORTS))"}]'
    properties.routing_api.system_domain: '"((DOMAIN))"'
    properties.routing_api.uri: http://routing-api-int.((HCP_SERVICE_DOMAIN_SUFFIX))
    properties.skip_ssl_validation: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.smoke_tests.api: '"api.((DOMAIN))"'
    properties.smoke_tests.apps_domain: '["((DOMAIN))"]'
    properties.smoke_tests.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.ssl.skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.support_address: '"((SUPPORT_ADDRESS))"'
    properties.syslog_drain_binder.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.syslog_drain_binder.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.system_domain: '"((DOMAIN))"'
    properties.tcp_emitter.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.tcp_emitter.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.tcp_emitter.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.tcp_emitter.oauth_secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.tcp_router.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.tcp_router.oauth_secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.tomcat.http.autoscaler_api.route: '"sclr-api-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.tomcat.http.autoscaler_server.route: '"sclr-server-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.traffic_controller.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.traffic_controller.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.uaa.admin.client_secret: '"((UAA_ADMIN_CLIENT_SECRET))"'
    properties.uaa.ca_cert: '"((HCP_CA_CERT))((^HCP_CA_CERT))((INTERNAL_CA_CERT))((/HCP_CA_CERT))"'
    properties.uaa.clients: ((UAA_CLIENTS))((^UAA_CLIENTS)){}((/UAA_CLIENTS)) # This is _not_ quoted to let the JSON expand in configgin
    properties.uaa.clients.cc-service-dashboards.secret: '"((UAA_CLIENTS_CC_SERVICE_SECRET))"'
    properties.uaa.clients.cc_routing.secret: '"((UAA_CLIENTS_CC_ROUTING_SECRET))"'
    properties.uaa.clients.cf-autoscaler-client.secret: '"((UAA_CLIENTS_CF_AUTOSCALER_SECRET))"'
    properties.uaa.clients.cf-usb.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.uaa.clients.cloud_controller.secret: "((UAA_CC_CLIENT_SECRET))"
    properties.uaa.clients.cloud_controller_username_lookup.secret: '"((UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET))"'
    properties.uaa.clients.doppler.secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
    properties.uaa.clients.gorouter.secret: '"((UAA_CLIENTS_GOROUTER_SECRET))"'
    properties.uaa.clients.hcf-sso.secret: '"((UAA_CLIENTS_HCF_SSO_SECRET))"'
    properties.uaa.clients.login.redirect-uri: '"((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))login.((DOMAIN))((/HCP_IDENTITY_EXTERNAL_HOST))"'
    properties.uaa.clients.login.secret: '"((UAA_CLIENTS_LOGIN_SECRET))"'
    properties.uaa.clients.ssh-proxy.secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.uaa.clients.tcp_emitter.secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.uaa.clients.tcp_router.secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.uaa.clients.hcf_auto_config.secret: '"((UAA_CLIENTS_HCF_AUTO_CONFIG_SECRET))"'
    properties.uaa.jwt.signing_key: '"((JWT_SIGNING_PEM))"'
    properties.uaa.jwt.verification_key: '"((JWT_SIGNING_PUB))"'
    properties.uaa.scim.users: '[{name: admin, password: ((CLUSTER_ADMIN_PASSWORD)), groups: [((CLUSTER_ADMIN_AUTHORITIES))]}]'
    properties.uaa.ssl.port: ((HCP_IDENTITY_EXTERNAL_PORT))((^HCP_IDENTITY_EXTERNAL_PORT))8443((/HCP_IDENTITY_EXTERNAL_PORT))
    properties.uaa.sslCertificate: '"((UAA_SERVER_CERT))"'
    properties.uaa.sslPrivateKey: '"((UAA_SERVER_KEY))"'
    properties.uaa.tls_port: '"((HCP_IDENTITY_EXTERNAL_PORT))((^HCP_IDENTITY_EXTERNAL_PORT))8443((/HCP_IDENTITY_EXTERNAL_PORT))"'
    properties.uaa.token_endpoint: '"((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))hcf.uaa-int.((HCP_SERVICE_DOMAIN_SUFFIX))((/HCP_IDENTITY_EXTERNAL_HOST))"'
    properties.uaa.url: '"((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))hcf.uaa.((DOMAIN))((/HCP_IDENTITY_EXTERNAL_HOST))"'
    properties.uaa.user.authorities: ((UAA_USER_AUTHORITIES)) # This is _not_ quoted to let the JSON expand in configgin
    properties.uaadb.address: 'mysql-proxy-int.((HCP_SERVICE_DOMAIN_SUFFIX))'
    properties.uaadb.roles: '[{"name": "uaaadmin", "password": "((UAADB_PASSWORD))", "tag": "admin"}]'
    properties.version: '"((CLUSTER_VERSION))"'
auth:
  # This maps to properties.uaa.clients / properties.uaa.user.authorities;
  # there is no mustache expansion here.
  clients:
    # Note that these clients are overridden in the dev-only UAA role; that is
    # instead used to bootstrap the default zone, whereas all of these clients
    # go into the HCF zone.
    cf-autoscaler-client:
      authorities: cloud_controller.read,cloud_controller.admin
      authorized-grant-types: client_credentials
    cf-usb:
      authorities: cloud_controller.admin,usb.management.admin
      authorized-grant-types: client_credentials
      scope: usb.management.admin
    cc-service-dashboards:
      authorities: clients.read,clients.write,clients.admin
      authorized-grant-types: client_credentials
      scope: openid,cloud_controller_service_permissions.read
    cc_routing:
      authorities: routing.router_groups.read
      authorized-grant-types: client_credentials
    cf:
      access-token-validity: 600
      authorities: uaa.none
      authorized-grant-types: implicit,password,refresh_token
      autoapprove: true
      override: true
      refresh-token-validity: 2592000
      scope: cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose,uaa.user,routing.router_groups.read
    cloud_controller:
      authorized-grant-types: client_credentials
      authorities: scim.read,scim.write,password.write
      access-token-validity: 604800
    cloud_controller_username_lookup:
      authorities: scim.userids
      authorized-grant-types: client_credentials
    doppler:
      authorities: uaa.resource
      authorized-grant-types: authorization_code,refresh_token
      override: true
    gorouter:
      authorities: clients.read,clients.write,clients.admin,route.admin,route.advertise,routing.routes.read
      authorized-grant-types: client_credentials,refresh_token
      scope: openid,cloud_controller_service_permissions.read
    hcf_auto_config:
      access-token-validity: 600
      # Due to CAPS-969, our UAA clients are missing `autoapprove` and `redirect-uri` configs
      # we need clients.admin to make the necessary changes to UAA
      # cloud_controller.admin is needed for hcf-release/hcf-set-proxy job
      authorities: scim.read,scim.write,clients.admin,cloud_controller.admin
      authorized-grant-types: client_credentials
    hcf-sso:
      access-token-validity: 3600
      authorized-grant-types: authorization_code
      scope: scim.me
      autoapprove: true
    login:
      authorities: oauth.login,scim.write,clients.read,notifications.write,critical_notifications.write,emails.write,scim.userids,password.write
      authorized-grant-types: authorization_code,client_credentials,refresh_token
      autoapprove: true
      override: true
      redirect-uri: https://login.example.com
      scope: openid,oauth.approvals
    ssh-proxy:
      authorized-grant-types: authorization_code
      autoapprove: true
      override: true
      redirect-uri: /login
      scope: openid,cloud_controller.read,cloud_controller.write,cloud_controller.admin
    tcp_emitter:
      authorities: routing.routes.write,routing.routes.read
      authorized-grant-types: client_credentials,refresh_token
    tcp_router:
      authorities: routing.routes.read
      authorized-grant-types: client_credentials,refresh_token
  authorities:
    - openid
    - scim.me
    - cloud_controller.read
    - cloud_controller.write
    - cloud_controller_service_permissions.read
    - password.write
    - uaa.user
    - approvals.me
    - oauth.approvals
    - notification_preferences.read
    - notification_preferences.write
    - profile
    - roles
    - user_attributes
    - routing.router_groups.read
