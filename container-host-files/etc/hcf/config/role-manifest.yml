---
roles:
- name: nats
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: nats
    release_name: cf
  - name: nats_stream_forwarder
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: metron_agent
  - name: nats
  - name: nats_stream_forwarder
  run:
    scaling:
      indexed: 3
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 4
    exposed-ports:
      - name: 'nats'
        protocol: 'TCP'
        external: 4222
        internal: 4222
        public: false
      - name: 'nats-routes'
        protocol: 'TCP'
        external: 4223
        internal: 4223
        public: false
- name: consul
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 3
      min: 1
      max: 3
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: consul-data
        size: 5
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'server-rpc'
        protocol: 'TCP'
        external: 8300
        internal: 8300
        public: false
      - name: 'serf-lan-tcp'
        protocol: 'TCP'
        external: 8301
        internal: 8301
        public: false
      - name: 'serf-lan-udp'
        protocol: 'UDP'
        external: 8301
        internal: 8301
        public: false
      - name: 'serf-wan-tcp'
        protocol: 'TCP'
        external: 8302
        internal: 8302
        public: false
      - name: 'serf-wan-udp'
        protocol: 'UDP'
        external: 8302
        internal: 8302
        public: false
      - name: 'cli-rpc'
        protocol: 'TCP'
        external: 8400
        internal: 8400
        public: false
      - name: 'http-api'
        protocol: 'TCP'
        external: 8500
        internal: 8500
        public: false
  configuration:
    templates:
      properties.consul.agent.mode: '"server"'
- name: mysql
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/patches/fix_mysql_advertise_ip.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: mysql
    release_name: cf-mysql
  processes:
  - name: mariadb_ctrl
  - name: galera-healthcheck
  - name: gra-log-purger-executable
  run:
    scaling:
      indexed: 3
      min: 1
      max: 3
      duplicate: false
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: mysql-data
        size: 10
    shared-volumes: []
    memory: 3072
    virtual-cpus: 2
    exposed-ports:
      - name: 'mysql'
        protocol: 'TCP'
        external: 3306
        internal: 3306
        public: false
      - name: 'galera'
        protocol: 'TCP'
        external: 4567
        internal: 4567
        public: false
      - name: 'healthcheck'
        protocol: 'tcp'
        external: 9200
        internal: 9200
        public: false
      - name: 'xtrabackup'
        protocol: 'tcp'
        external: 4444
        internal: 4444
        public: false
  configuration:
    templates:
      properties.cf_mysql.mysql.cluster_ips: '((MYSQL_CLUSTER_IPS))((#MYSQL_CLUSTER_CONFIG_REVISION))((/MYSQL_CLUSTER_CONFIG_REVISION))'
      properties.cf_mysql.mysql.database_startup_timeout: '300'
      properties.network_name: 'default'
      properties.cf_mysql.proxy.api_username: 'mysql_proxy'
      properties.cf_mysql.proxy.proxy_ips: '["((MYSQL_PROXY_HOST))"]'
      properties.cf_mysql.mysql.bootstrap_endpoint.username: 'bootstrap_user'
      properties.cf_mysql.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.external_host: "((DOMAIN))"
      properties.cf_mysql.proxy.api_password: "((MYSQL_PROXY_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.bootstrap_endpoint.password: "((MYSQL_BOOTSTRAP_ENDPOINT_PASSWORD))"
- name: mysql-proxy
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/patches/fix_mysql_proxy_host_list.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: proxy
    release_name: cf-mysql
  processes:
  - name: route-registrar
  - name: switchboard
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'mysql-proxy'
        protocol: 'TCP'
        external: 3306
        internal: 3306
        public: false
      - name: 'api'
        protocol: 'TCP'
        external: 80
        internal: 80
        public: false
      - name: 'healthcheck'
        protocol: 'TCP'
        external: 1936
        internal: 1936
        public: false
  configuration:
    templates:
      properties.cf_mysql.mysql.cluster_ips: '((MYSQL_CLUSTER_IPS))((#MYSQL_CLUSTER_CONFIG_REVISION))((/MYSQL_CLUSTER_CONFIG_REVISION))'
      properties.cf_mysql.mysql.database_startup_timeout: 300
      properties.network_name: 'default'
      properties.cf_mysql.proxy.api_username: 'mysql_proxy'
      properties.cf_mysql.proxy.proxy_ips: '["((MYSQL_PROXY_HOST))"]'
      properties.cf_mysql.mysql.bootstrap_endpoint.username: 'bootstrap_user'
      properties.cf_mysql.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.external_host: "((DOMAIN))"
      properties.cf_mysql.proxy.api_password: "((MYSQL_PROXY_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.bootstrap_endpoint.password: "((MYSQL_BOOTSTRAP_ENDPOINT_PASSWORD))"
      # TODO: Take this out, and place our generated CA cert
      # into the appropriate /usr/share/ca-certificates folders
      # and call update-ca-certificates at container startup
      properties.cf_mysql.proxy.api_force_https: 'false'
- name: diego-database
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: bbs
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: bbs
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: diego-database-data
        size: 10
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'cell-metrics'
        protocol: 'TCP'
        external: 5678
        internal: 5678
        public: false
      - name: 'cell-bbs-api'
        protocol: 'TCP'
        external: 8889
        internal: 8889
        public: false
      - name: 'cell-bbs-dbg'
        protocol: 'TCP'
        external: 17017
        internal: 17017
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"usb", "port": 24053, "uris":["usb.((DOMAIN))",  "*.usb.((DOMAIN))"], "registration_interval":"10s"}, {"name":"broker", "port": 24054, "uris":["brokers.((DOMAIN))", "*.brokers.((DOMAIN))"], "registration_interval":"10s"}]'
- name: ha-proxy
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: haproxy
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: consul_template
  - name: haproxy
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'ha-proxy'
        protocol: 'TCP'
        external: 80
        internal: 80
        public: true
      - name: 'ha-proxy2'
        protocol: 'TCP'
        external: 443
        internal: 443
        public: true
      - name: 'ha-proxy3'
        protocol: 'TCP'
        external: 4443
        internal: 4443
        public: true
      - name: 'app-ssh'
        protocol: 'TCP'
        external: 2222
        internal: 2222
        public: true
- name: router
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/patches/router_internal_host_names.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: gorouter
    release_name: routing
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: gorouter
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 4
    exposed-ports:
      - name: 'router'
        protocol: 'TCP'
        external: 80
        internal: 80
        public: false
- name: routing-ha-proxy
  # XXX This might be able to co-locate with one of the others
  # But this is a _different_ HAProxy from the one in the CF release.
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/patches/router_internal_host_names.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: haproxy
    release_name: routing
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: router_configurer
    release_name: routing
  processes:
  - name: haproxy
  - name: metron_agent
  - name: consul_agent
  - name: router_configurer
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
    - name: 'healthcheck'
      protocol: TCP
      external: 2341
      internal: 80
      public: true
    - name: 'tcp-routing'
      protocol: TCP
      external: "20000-20008"
      internal: "20000-20008"
      public: true
  configuration:
    templates:
      properties.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
- name: routing-api
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/patches/router_internal_host_names.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: consul_agent
    release_name: cf
  - name: etcd
    release_name: etcd
  - name: metron_agent
    release_name: cf
  - name: routing-api
    release_name: routing
  - name: tcp_emitter
    # TCP-emitter can be on a different role, it's just convenient here
    release_name: routing
  processes:
  - name: consul_agent
  - name: etcd
  - name: metron_agent
  - name: routing-api
  - name: tcp_emitter
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 512
    virtual-cpus: 4
    exposed-ports:
      - name: route-etcd
        protocol: 'TCP'
        external: 4001
        internal: 4001
        public: false
      - name: route-etcd-peer
        protocol: 'TCP'
        external: 7001
        internal: 7001
        public: false
      - name: routing-api
        protocol: TCP
        external: 3000
        internal: 3000
        public: false
  configuration:
    templates:
      properties.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
- name: uaa
  tags: ['dev-only']
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/patches/fix_uaa_hostnames_in_uaa_yml.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: uaa
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: routing
  processes:
  - name: uaa
  - name: consul_agent
  - name: route_registrar
  - name: metron_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 2048
    virtual-cpus: 2
    exposed-ports:
      - name: 'uaa'
        protocol: 'TCP'
        external: 8080
        internal: 8080
        public: false
      - name: 'uaa-ssl'
        protocol: 'TCP'
        external: 8443
        internal: 8443
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"uaa", "port": 8080, "tags":{"component":"uaa"}, "uris":["uaa.((DOMAIN))", "*.uaa.((DOMAIN))", "login.((DOMAIN))", "*.login.((DOMAIN))"], "registration_interval":"10s"}]'
- name: api
  environment_scripts:
  - scripts/fetch_uaa_verification_key.sh
  - scripts/configure-HA-hosts.sh
  scripts:
  # Do not apply fake_spec_index_on_hcp.sh here because we need an index 0
  # to run migrations from
  - scripts/perform_nfs_test.sh
  - scripts/patches/cloud_controller_v2_droplet_count.sh
  - scripts/patches/fix_buildpack_install.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: cloud_controller_ng
    release_name: cf
  - name: statsd-injector
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: routing
  - name: go-buildpack
    release_name: cf
  - name: binary-buildpack
    release_name: cf
  - name: nodejs-buildpack
    release_name: cf
  - name: ruby-buildpack
    release_name: cf
  - name: php-buildpack
    release_name: cf
  - name: python-buildpack
    release_name: cf
  - name: staticfile-buildpack
    release_name: cf
  - name: java-buildpack
    release_name: cf
  - name: cf_iis_buildpack
    release_name: windows-runtime-release
  processes:
  - name: cloud_controller_ng
  - name: cloud_controller_worker_local_1
  - name: cloud_controller_worker_local_2
  - name: route_registrar
  - name: metron_agent
  - name: consul_agent
  - name: nginx_cc
  - name: statsd-injector
  run:
    scaling:
      indexed: 2
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes:
    - path: '/var/vcap/nfs/shared'
      tag: api-data
      size: 100
    memory: 2560
    virtual-cpus: 4
    exposed-ports:
      - name: 'api'
        protocol: 'TCP'
        external: 9022
        internal: 9022
        public: false
      - name: 'statsd'
        protocol: 'TCP'
        external: 8125
        internal: 8125
        public: false
  configuration:
    templates:
      properties.etcd.machines: '((ETCD_CLUSTER_IPS))((#ETCD_CLUSTER_CONFIG_REVISION))((/ETCD_CLUSTER_CONFIG_REVISION))'
      properties.route_registrar.routes: '[{"name":"api", "port":9022, "tags":{"component":"CloudController"}, "uris":["api.((DOMAIN))"], "registration_interval":"10s"}]'
- name: api-worker
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: cloud_controller_worker
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: cloud_controller_worker_1
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes:
    - path: '/var/vcap/nfs/shared'
      size: 100
      tag: 'api-data'
    memory: 512
    virtual-cpus: 2
    exposed-ports: []
- name: blobstore
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: blobstore
    release_name: cf
  - name: route_registrar
    release_name: routing
  - name: metron_agent
    release_name: cf
  post_config_scripts:
  - /var/vcap/jobs/blobstore/bin/pre-start
  processes:
  - name: blobstore_nginx
  - name: blobstore_url_signer
  - name: route_registrar
  - name: metron_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes:
    - path: /var/vcap/store
      tag: blobstore-data
      size: 100
    shared-volumes: []
    memory: 1536
    virtual-cpus: 2
    exposed-ports:
    - name: 'blobstore-ext'
      protocol: 'TCP'
      external: 8080
      internal: 8080
      public: false
    - name: 'blobstore-int'
      protocol: 'TCP'
      external: 4443
      internal: 4443
      public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"blobstore", "port":8080, "tags":{"component":"blobstore"}, "uris":["blobstore.((DOMAIN))"], "registration_interval":"10s"}]'
- name: clock-global
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: cloud_controller_clock
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: cloud_controller_clock
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 512
    virtual-cpus: 2
    exposed-ports: []
- name: cf-usb
  environment_scripts:
  - scripts/fetch_uaa_verification_key.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: cf-usb
    release_name: cf-usb
  - name: consul_agent
    release_name: cf
  - name: route_registrar
    release_name: routing
  processes:
  - name: usb
  - name: route_registrar
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes:
    - path: '/var/vcap/nfs'
      size: 10
      tag: 'cf-usb-data'
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'usb'
        protocol: 'TCP'
        external: 24054
        internal: 24054
        public: false
      - name: 'usb2'
        protocol: 'TCP'
        external: 24053
        internal: 24053
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"usb", "port": 24053, "uris":["usb.((DOMAIN))", "*.usb.((DOMAIN))"], "registration_interval":"10s"}, {"name":"broker", "port": 24054, "uris":["brokers.((DOMAIN))", "*.brokers.((DOMAIN))"], "registration_interval":"10s"}]'
- name: doppler
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: doppler
    release_name: cf
  - name: syslog_drain_binder
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: doppler
  - name: metron_agent
  - name: syslog_drain_binder
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'doppler-in'
        protocol: 'TCP'
        external: 3456
        internal: 3456
        public: false
      - name: 'dropsnode-in'
        protocol: 'TCP'
        external: 3457
        internal: 3457
        public: false
      - name: 'doppler-tls'
        protocol: 'TCP'
        external: 3458
        internal: 3458
        public: false
- name: etcd
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/patches/fix_etcd_bootstrap.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: etcd
    release_name: cf
  - name: etcd_metrics_server
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: etcd_metrics_server
  - name: etcd
  - name: metron_agent
  run:
    scaling:
      indexed: 3
      min: 1
      max: 3
      duplicate: false
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        size: 10
        tag: cf-etcd-data
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'etcd-client'
        protocol: 'TCP'
        external: 4001
        internal: 4001
        public: false
      - name: 'etcd-peer'
        protocol: 'TCP'
        external: 7001
        internal: 7001
        public: false
  configuration:
    templates:
      properties.etcd.peer_require_ssl: 'false'
      properties.etcd.require_ssl: 'false'
      properties.etcd.cluster: 'null'
      properties.etcd.peer_key: 'null'
      properties.etcd.peer_cert: 'null'
      properties.etcd.peer_ca_cert: 'null'
      properties.etcd.server_key: 'null'
      properties.etcd.client_key: 'null'
      properties.etcd.server_cert: 'null'
      properties.etcd.client_cert: 'null'
      properties.etcd.ca_cert: 'null'
      properties.etcd.machines: '((ETCD_CLUSTER_IPS))((#ETCD_CLUSTER_CONFIG_REVISION))((/ETCD_CLUSTER_CONFIG_REVISION))'
      properties.etcd.bootstrap_node: 'etcd-0'
- name: loggregator
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: loggregator_trafficcontroller
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: routing
  processes:
  - name: loggregator_trafficcontroller
  - name: metron_agent
  - name: route_registrar
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"loggregator", "port":8081, "uris":["doppler.((DOMAIN))"], "registration_interval":"10s"}, {"name":"loggregator_trafficcontroller", "port":8080, "uris":["loggregator.((DOMAIN))"], "registration_interval":"10s"}]'
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'loggregator'
        protocol: 'TCP'
        external: 8080
        internal: 8080
        public: false
      - name: 'loggregator-ws'
        protocol: 'TCP'
        external: 8081
        internal: 8081
        public: false
- name: diego-brain
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: consul_agent
    release_name: cf
  - name: auctioneer
    release_name: diego
  - name: metron_agent
    release_name: cf
  processes:
  - name: auctioneer
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 4
    exposed-ports:
      - name: 'diego-auction'
        protocol: 'TCP'
        external: 9016
        internal: 9016
        public: false
- name: diego-cc-bridge
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: stager
    release_name: cf
  - name: nsync
    release_name: cf
  - name: tps
    release_name: cf
  - name: cc_uploader
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: cc_uploader
  - name: stager
  - name: tps_listener
  - name: tps_watcher
  - name: nsync_listener
  - name: nsync_bulker
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 512
    virtual-cpus: 4
    exposed-ports:
      - name: 'nsync-listen'
        protocol: 'TCP'
        external: 8787
        internal: 8787
        public: false
      - name: 'nsync-dbg-l'
        protocol: 'TCP'
        external: 17006
        internal: 17006
        public: false
      - name: 'nsync-dbg-b'
        protocol: 'TCP'
        external: 17007
        internal: 17007
        public: false
      - name: 'stager-dbg'
        protocol: 'TCP'
        external: 17011
        internal: 17011
        public: false
      - name: 'stager-listen'
        protocol: 'TCP'
        external: 8888
        internal: 8888
        public: false
      - name: 'tps-listen'
        protocol: 'TCP'
        external: 1518
        internal: 1518
        public: false
      - name: 'tps-dbg-l'
        protocol: 'TCP'
        external: 17014
        internal: 17014
        public: false
      - name: 'tps-dbg-w'
        protocol: 'TCP'
        external: 17015
        internal: 17015
        public: false
      - name: 'cc-up-listen'
        protocol: 'TCP'
        external: 9090
        internal: 9090
        public: false
      - name: 'cc-up-dbg'
        protocol: 'TCP'
        external: 17018
        internal: 17018
        public: false
- name: diego-route-emitter
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: route_emitter
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: route_emitter
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports: []
- name: diego-access
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: ssh_proxy
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: file_server
    release_name: diego
  - name: windows_buildpack_app_lifecycle
    release_name: windows-runtime-release
  processes:
  - name: file_server
  - name: metron_agent
  - name: ssh_proxy
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
      - name: 'diego-ssh'
        protocol: 'TCP'
        external: 2222
        internal: 2222
        public: false
      - name: 'diego-files'
        protocol: 'TCP'
        external: 8080
        internal: 8080
        public: false
- name: diego-cell
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/prevent_apparmor_disable.sh
  - scripts/configure-nested-net.sh
  - scripts/cleanup-garden-graph.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: rep
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: garden
    release_name: garden-linux
  - name: cflinuxfs2-rootfs-setup
    release_name: cflinuxfs2-rootfs
  - name: metron_agent
    release_name: cf
  processes:
  - name: metron_agent
  - name: consul_agent
  - name: rep
  - name: garden
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: ['ALL']
    persistent-volumes:
    - path: '/var/vcap/data/garden'
      tag: garden-graph
      size: 50
    shared-volumes: []
    memory: 4096
    virtual-cpus: 4
    exposed-ports: []
- name: sclr-api
  type: bosh
  scripts:
  - scripts/configgin-config-properties.sh
  - scripts/wait_for_couchdb.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: autoscaler_api
    release_name: cf-open-autoscaler
  - name: route_registrar
    release_name: routing
  processes:
  - name: tomcat
  - name: route_registrar
  run:
    flight-stage: flight
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1536
    virtual-cpus: 1
    exposed-ports:
      - name: 'api'
        protocol: 'TCP'
        external: 28861
        internal: 28861
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"autoscaler-api", "port":28861, "uris":["autoscaler-api.((DOMAIN))"], "registration_interval":"10s"}]'
- name: sclr-server
  type: bosh
  scripts:
  - scripts/configgin-config-properties.sh
  - scripts/wait_for_couchdb.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: autoscaler_server
    release_name: cf-open-autoscaler
  processes:
  - name: tomcat
  run:
    flight-stage: flight
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports:
      - name: 'server'
        protocol: 'TCP'
        external: 28862
        internal: 28862
        public: false
  configuration:
    templates:
      properties.couchdb.dbname: '"couchdb-scaling"'
- name: sclr-broker
  type: bosh
  scripts:
  - scripts/configgin-config-properties.sh
  - scripts/wait_for_couchdb.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: autoscaler_servicebroker
    release_name: cf-open-autoscaler
  processes:
  - name: tomcat
  run:
    flight-stage: flight
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1536
    virtual-cpus: 1
    exposed-ports:
      - name: 'broker'
        protocol: 'TCP'
        external: 28863
        internal: 28863
        public: false
  configuration:
    templates:
      properties.couchdb.dbname: '"couchdb-scalingbroker"'
- name: couchdb
  type: bosh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: couchdb
    release_name: cf-open-autoscaler
  scripts:
  - scripts/forward_logfiles.sh
  processes:
  - name: couchdb
  run:
    flight-stage: flight
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 1
    exposed-ports:
      - name: 'couchdb'
        protocol: 'TCP'
        external: 5984
        internal: 5984
        public: false
- name: acceptance-tests-flight-recorder
  type: bosh-task
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: acceptance-tests-flight-recorder
    release_name: hcf
  run:
    scaling:
      indexed: 1
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'acceptanceflightrecorder'
        protocol: 'TCP'
        source: 10514
        target: 10514
        public: false
- name: acceptance-tests
  type: bosh-task
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: acceptance-tests
    release_name: cf
  run:
    scaling:
      indexed: 1
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: smoke-tests
  type: bosh-task
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: smoke-tests
    release_name: cf
  run:
    scaling:
      indexed: 1
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: diego-debugger
  type: docker
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 128
    virtual-cpus: 1
    exposed-ports: []
- name: post-deployment-setup
  type: bosh-task
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: uaa-create-user
    release_name: hcf
  - name: cf-set-proxy
    release_name: hcf
  processes: []
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    flight-stage: post-flight
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 1
    exposed-ports: []
- name: dev-dns
  type: docker
  tags: ['dev-only']
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: ['NET_ADMIN']
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports:
      - name: 'dev-dns'
        protocol: 'UDP'
        external: 53
        internal: 8600
        public: true
      - name: 'dev-dns-tcp'
        protocol: 'TCP'
        external: 53
        internal: 8600
        public: true
- name: sso-create-service
  type: bosh-task
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: sso-create-service
    release_name: hcf
  processes: []
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    flight-stage: post-flight
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 1
    exposed-ports: []
- name: autoscaler-create-service
  type: bosh-task
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: autoscaler-create-service
    release_name: hcf
  processes: []
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    flight-stage: post-flight
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 1
    exposed-ports: []
- name: hcf-sso
  environment_scripts:
  - scripts/fetch_uaa_verification_key.sh
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: hcf-sso
    release_name: hcf-sso
  - name: metron_agent
    release_name: cf
  processes:
  - name: hcf-sso
  - name: metron_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 128
    virtual-cpus: 1
    exposed-ports:
    - name: service-broker
      protocol: TCP
      external: 3000
      internal: 3000
      public: false
- name: hcf-versions
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: hcf-versions
    release_name: hcf-versions
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: routing
  processes:
  - name: hcf-versions
  - name: metron_agent
  - name: route_registrar
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 128
    virtual-cpus: 1
    exposed-ports:
    - name: 'hcf-versions-api'
      protocol: TCP
      external: 3000
      internal: 3000
      public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"hcf-versions-api", "port":3000, "uris":["hcf-versions-api.((DOMAIN))"], "registration_interval":"10s"}]'
- name: status-route
  tags:
  - dev-only
  scripts:
  - scripts/forward_logfiles.sh
  post_config_scripts:
  - scripts/status-route-start.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: route_registrar
    release_name: routing
  processes:
  - name: route_registrar
  - name: gotty
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    docker-volumes:
    - host: /var/run/docker.sock
      container: /var/run/docker.sock
    - host: /home/vagrant/hcf/container-host-files
      container: /container-host-files
    memory: 512
    virtual-cpus: 1
    exposed-ports:
      - name: 'status-route'
        protocol: 'TCP'
        external: 9052
        internal: 9052
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"status-route", "port": 9052, "uris":["status.((DOMAIN))"], "registration_interval":"10s"}]'
- name: demophon
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/fake_spec_index_on_hcp.sh
  - scripts/forward_logfiles.sh
  - scripts/setup-demophon-env.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: demophon
    release_name: hcf
  - name: metron_agent
    release_name: cf
  processes:
  - name: demophon
  - name: metron_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 128
    virtual-cpus: 2
    exposed-ports:
      - name: 'demophon'
        protocol: 'TCP'
        external: 8443
        internal: 8443
        public: false
configuration:
  variables:
  - name: API_HOST
    default: "api-int"
  - name: API_HA_HOST
    required: false
  - name: BLOBSTORE_HOST
    default: "blobstore-int"
  - name: BLOBSTORE_HTTPS_PORT
    default: 4443
  - name: BLOBSTORE_PASSWORD
    secret: true
    generator:
      type: Password
  - name: BLOBSTORE_SECURE_LINK
    secret: true
    generator:
      type: Password
  - name: AUTOSCALER_API_HOST
    default: "sclr-api-int"
  - name: AUTOSCALER_SERVER_HOST
    default: "sclr-server-int"
  - name: AUTOSCALER_SERVICE_BROKER_HOST
    default: "sclr-broker-int"
  - name: AUTOSCALER_PASSWORD
    secret: true
    generator:
      type: Password
  - name: DIEGO_DATABASE_HOST
    default: "diego-database-int"
  - name: DIEGO_DATABASE_HA_HOST_1
    required: false
  - name: DIEGO_DATABASE_HA_HOST_2
    required: false
  - name: DIEGO_ACCESS_HOST
    default: "diego-access-int"
  - name: DIEGO_CC_BRIDGE_HOST
    default: "diego-cc-bridge-int"
  - name: DIEGO_BRAIN_HOST
    default: "diego-brain-int"
  - name: DIEGO_CELL_MEMORY_CAPACITY_MB
    default: auto
  - name: DROPLET_MAX_STAGED_STORED
    default: 5
  - name: DNS_HEALTH_CHECK_HOST
    default: "127.0.0.1"
  - name: DNS_RECORD_NAME
    required: false
  - name: NATS_HOST
    default: "nats-int"
  - name: NATS_HA_HOST_1
    required: false
  - name: NATS_HA_HOST_2
    required: false
  - name: MYSQL_PROXY_HOST
    default: "mysql-proxy-int"
  - name: MYSQL_HOST
    default: "mysql-int"
  - name: ETCD_HOST
    default: "etcd-int"
  - name: CONSUL_HOST
    default: "consul-int"
  - name: CONSUL_HA_HOST_1
    required: false
  - name: CONSUL_HA_HOST_2
    required: false
  - name: ROUTER_HOST
    default: "router-int"
  - name: ROUTING_API_HOST
    default: "routing-api-int"
  - name: ROUTING_API_HA_HOST_1
    required: false
  - name: ROUTING_API_HA_HOST_2
    required: false
  - name: LOGGREGATOR_HOST
    default: "loggregator-int"
  - name: UAA_HOST
    default: "uaa-int"
  - name: CF_USB_BROKER_HOST
    default: "cf-usb-int"
  - name: BULK_API_PASSWORD
    secret: true
    generator:
      type: Password
  - name: CCDB_ROLE_PASSWORD
    secret: true
    generator:
      type: Password
  - name: DROPLET_DIRECTORY_KEY
    default: "cc-droplets"
  - name: BUILDPACK_DIRECTORY_KEY
    default: "cc-buildpacks"
  - name: APP_PACKAGE_DIRECTORY_KEY
    default: "cc-packages"
  - name: RESOURCE_DIRECTORY_KEY
    default: "cc-resources"
  - name: CF_USB_PASSWORD
    secret: true
    generator:
      type: Password
  - name: CLUSTER_ADMIN_AUTHORITIES
    default: scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,routing.router_groups.read
  - name: CLUSTER_ADMIN_PASSWORD
    secret: true
  - name: CONSUL_ENCRYPTION_KEYS
    secret: true
    generator:
      type: Password
  - name: DB_ENCRYPTION_KEY
    secret: true
    generator:
      type: Password
  - name: DNS_SUFFIX
    default: ""
    required: false
  - name: DOMAIN
    example: "192.168.77.77.nip.io"
    required: true
  - name: HCF_SSO_HOST
    default: hcf-sso-int
  - name: HCF_SSO_PASSWORD
    secret: true
    generator:
      type: Password
  - name: LOGGREGATOR_SHARED_SECRET
    secret: true
    generator:
      type: Password
  - name: MONIT_PASSWORD
    secret: true
    generator:
      type: Password
  - name: NATS_PASSWORD
    secret: true
    generator:
      type: Password
  - name: STAGING_UPLOAD_PASSWORD
    secret: true
    generator:
      type: Password
  - name: INTERNAL_API_PASSWORD
    secret: true
    generator:
      type: Password
  - name: IP_ADDRESS
    required: false
  - name: TRUSTED_CERTS
    required: false
  - name: UAA_ADMIN_CLIENT_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CC_CLIENT_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_APP_DIRECT_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_DEVELOPER_CONSOLE_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_DOPPLER_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_GOROUTER_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_HCF_SSO_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_LOGIN_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_NOTIFICATIONS_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_CC_ROUTING_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_CC_SERVICE_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_CF_USB_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_TCP_EMITTER_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_TCP_ROUTER_SECRET
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_UAA_CREATE_FIRST_USER_SECRET
    secret: true
    generator:
      type: Password
  - name: BBS_ACTIVE_KEY_LABEL
    default: key1
  - name: BBS_ACTIVE_KEY_PASSPHRASE
    secret: true
    generator:
      type: Password
  - name: MYSQL_ADMIN_PASSWORD
    secret: true
    generator:
      type: Password
  - name: MYSQL_PROXY_ADMIN_PASSWORD
    secret: true
    generator:
      type: Password
  - name: MYSQL_DIEGO_PASSWORD
    secret: true
    generator:
      type: Password
  - name: MYSQL_BOOTSTRAP_ENDPOINT_PASSWORD
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET
    secret: true
    generator:
      type: Password
  - name: UAADB_PASSWORD
    secret: true
    generator:
      type: Password
  - name: DIEGO_CELL_SUBNET
    default: 10.38.0.0/16
  # Certificates
  - name: ETCD_PEER_KEY
    secret: true
    generator:
      id: "etcd_peer_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
  - name: ETCD_PEER_CRT
    secret: true
    generator:
      id: "etcd_peer_cert"
      type: Certificate
      value_type: certificate
  - name: ETCD_SERVER_KEY
    secret: true
    generator:
      id: "etcd_server_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
  - name: ETCD_CLIENT_KEY
    secret: true
    generator:
      id: "etcd_client_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
  - name: ETCD_SERVER_CRT
    secret: true
    generator:
      id: "etcd_server_cert"
      type: Certificate
      value_type: certificate
  - name: ETCD_CLIENT_CRT
    secret: true
    generator:
      id: "etcd_client_cert"
      type: Certificate
      value_type: certificate
  - name: BBS_SERVER_KEY
    secret: true
    generator:
      id: "bbs_server_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
  - name: BBS_CLIENT_KEY
    secret: true
    generator:
      id: "bbs_client_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
  - name: BBS_SERVER_CRT
    secret: true
    generator:
      id: "bbs_server_cert"
      type: Certificate
      value_type: certificate
  - name: BBS_CLIENT_CRT
    secret: true
    generator:
      id: "bbs_client_cert"
      type: Certificate
      value_type: certificate
  - name: BBS_ADVERTISEMENT_BASE_HOSTNAME
    default: bbs.service.cf.internal
  - name: SSH_KEY
    secret: true
    generator:
      id: "app_ssh"
      type: SSH
      value_type: private_key
      key_length: 4096
  - name: APP_SSH_HOST_KEY_FINGERPRINT
    secret: true
    generator:
      id: "app_ssh"
      type: SSH
      value_type: fingerprint
  - name: ROUTER_SERVICES_SECRET
    secret: true
    generator:
      type: Password
  - name: ROUTER_SSL_CERT
    secret: true
    generator:
      id: "router_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
      subject_alt_names:
        - parameter: DOMAIN
          wildcard: false
        - parameter: DOMAIN
          wildcard: true
  - name: ROUTER_SSL_KEY
    secret: true
    generator:
      id: "router_cert"
      type: Certificate
      value_type: private_key
  - name: HAPROXY_SSL_CERT_KEY
    secret: true
    generator:
      id: "router_cert"
      type: Certificate
      value_type: cert_private_key
  - name: ROUTER_STATUS_PASSWORD
    secret: true
    generator:
      id: "router_status_password"
      type: Password
  - name: UAA_PRIVATE_KEY
    secret: true
    generator:
      id: "uaa_cert"
      type: Certificate
      value_type: private_key
      key_length: 4096
  - name: UAA_CERTIFICATE
    secret: true
    generator:
      id: "uaa_cert"
      type: Certificate
      value_type: certificate
  - name: BLOBSTORE_TLS_CERT
    secret: true
    generator:
      id: "blobstore_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
      subject_alt_names:
        - parameter: DOMAIN
          wildcard: false
        - parameter: DOMAIN
          wildcard: true
  - name: BLOBSTORE_TLS_KEY
    secret: true
    generator:
      id: "blobstore_cert"
      type: Certificate
      value_type: private_key
  - name: CONSUL_AGENT_CERT
    secret: true
    generator:
      id: "consul_agent_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
  - name: CONSUL_AGENT_KEY
    secret: true
    generator:
      id: "consul_agent_cert"
      type: Certificate
      value_type: private_key
  - name: CONSUL_SERVER_CERT
    secret: true
    generator:
      id: "consul_server_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
      subject_alt_names:
        - static: server.dc1.hcf
          wildcard: false
  - name: CONSUL_SERVER_KEY
    secret: true
    generator:
      id: "consul_server_cert"
      type: Certificate
      value_type: private_key
  - name: DEMOPHON_SERVER_CERT
    secret: true
    generator:
      id: "demophon_server_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
  - name: DEMOPHON_SERVER_KEY
    secret: true
    generator:
      id: "demophon_server_cert"
      type: Certificate
      value_type: private_key
  - name: SKIP_CERT_VERIFY_INTERNAL
    default: true
  - name: SKIP_CERT_VERIFY_EXTERNAL
    default: true
  - name: GARDEN_LINUX_DNS_SERVER
    default: ""
  - name: INTERNAL_CA_CERT
    secret: true
    generator:
      id: "cacert"
      type: CACertificate
      value_type: certificate
  - name: SSO_ROUTE_CERT
    secret: true
    generator:
      id: "sso_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
  - name: SSO_ROUTE_KEY
    secret: true
    generator:
      id: "sso_cert"
      type: Certificate
      value_type: private_key
  - name: CF_USB_BROKER_SERVER_CERT
    secret: true
    generator:
      id: "usb_broker_server_cert"
      type: Certificate
      value_type: certificate
      key_length: 4096
  - name: CF_USB_BROKER_SERVER_KEY
    secret: true
    generator:
      id: "usb_broker_server_cert"
      type: Certificate
      value_type: private_key
  - name: AUTOSCALER_COUCHDB_PASSWORD
    secret: true
    generator:
      type: Password
  - name: UAA_CLIENTS_CF_AUTOSCALER_SECRET
    secret: true
    generator:
      type: Password
  templates:
    bootstrap: "((HCF_BOOTSTRAP))((^HCF_BOOTSTRAP))true((/HCF_BOOTSTRAP))"
    index: "((HCF_ROLE_INDEX))((^HCF_ROLE_INDEX))((HCP_COMPONENT_INDEX))((^HCP_COMPONENT_INDEX))0((/HCP_COMPONENT_INDEX))((/HCF_ROLE_INDEX))"
    networks.default.dns_record_name: '"((#HCP_COMPONENT_NAME))((HCP_COMPONENT_NAME))((HCP_HOSTNAME_SUFFIX))((/HCP_COMPONENT_NAME))((^HCP_COMPONENT_NAME))((DNS_RECORD_NAME))((/HCP_COMPONENT_NAME))"'
    networks.default.ip: '"((IP_ADDRESS))"'
    properties.hcf.hcp_service_domain_suffix: '"((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.acceptance_tests.admin_password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.acceptance_tests.api: '"https://api.((DOMAIN))"'
    properties.acceptance_tests.apps_domain: '"((DOMAIN))"'
    properties.acceptance_tests.cloud_controller.skip_ssl_validation: '((SKIP_CERT_VERIFY_EXTERNAL))'
    properties.acceptance_tests.uaa.skip_ssl_validation: '((SKIP_CERT_VERIFY_EXTERNAL))'
    properties.app_domains: '["((DOMAIN))"]'
    properties.app_ssh.host_key_fingerprint: '"((APP_SSH_HOST_KEY_FINGERPRINT))"'
    properties.autoscaler.autoscaler_api.host: '"((AUTOSCALER_API_HOST))"'
    properties.autoscaler.autoscaler_server.host: '"((AUTOSCALER_SERVER_HOST))"'
    properties.autoscaler.couchdb.host: '"couchdb-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.autoscaler_api.internal_auth.password: '"((AUTOSCALER_PASSWORD))"'
    properties.autoscaler_server.internal_auth.password: '"((AUTOSCALER_PASSWORD))"'
    properties.autoscaler_servicebroker.auth.password: '"((AUTOSCALER_PASSWORD))"'
    properties.autoscaler_servicebroker.host: '"((AUTOSCALER_SERVICE_BROKER_HOST))"'
    properties.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.blobstore.admin_users:  '[{"username": "blobstore_user", "password": "((BLOBSTORE_PASSWORD))"}]'
    properties.blobstore.secure_link.secret: '"((BLOBSTORE_SECURE_LINK))"'
    properties.blobstore.tls.cert: '"((BLOBSTORE_TLS_CERT))"'
    properties.blobstore.tls.private_key: '"((BLOBSTORE_TLS_KEY))"'
    properties.capi.nsync.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.capi.nsync.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.nsync.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.capi.nsync.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.capi.nsync.cc.base_url: '"https://((API_HOST)).((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.capi.nsync.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.capi.nsync.file_server_url: "http://((DIEGO_ACCESS_HOST)):8080"
    properties.capi.stager.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.capi.stager.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.stager.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.capi.stager.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.capi.stager.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.capi.stager.cc.internal_service_hostname: '"((API_HA_HOST))((^API_HA_HOST))((API_HOST))((/API_HA_HOST))"'
    properties.capi.stager.cc_uploader_url: "http://((DIEGO_CC_BRIDGE_HOST)):9090"
    properties.capi.stager.file_server_url: "http://((DIEGO_ACCESS_HOST)):8080"
    properties.capi.stager.staging_task_callback_url: "http://((DIEGO_CC_BRIDGE_HOST)):8888"
    properties.capi.tps.bbs.api_location: '"((DIEGO_DATABASE_HOST)):8889"'
    properties.capi.tps.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.tps.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.capi.tps.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.capi.tps.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.capi.tps.cc.internal_service_hostname: '"((API_HA_HOST))((^API_HA_HOST))((API_HOST))((/API_HA_HOST))"'
    properties.capi.tps.traffic_controller_url: "ws://((LOGGREGATOR_HOST)):8081"
    properties.cc.buildpacks.buildpack_directory_key: '"((BUILDPACK_DIRECTORY_KEY))"'
    properties.cc.buildpacks.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.buildpacks.webdav_config.private_endpoint: '"https://((BLOBSTORE_HOST)):((BLOBSTORE_HTTPS_PORT))"'
    properties.cc.buildpacks.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.bulk_api_password: '"((BULK_API_PASSWORD))"'
    properties.cc.db_encryption_key: '"((DB_ENCRYPTION_KEY))"'
    properties.cc.diego.nsync_url: "http://((DIEGO_CC_BRIDGE_HOST)):8787"
    properties.cc.diego.stager_url: "http://((DIEGO_CC_BRIDGE_HOST)):8888"
    properties.cc.diego.tps_url: "http://((DIEGO_CC_BRIDGE_HOST)):1518"
    properties.cc.droplets.droplet_directory_key: '"((DROPLET_DIRECTORY_KEY))"'
    properties.cc.droplets.max_staged_droplets_stored: '((DROPLET_MAX_STAGED_STORED))'
    properties.cc.droplets.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.droplets.webdav_config.private_endpoint: '"https://((BLOBSTORE_HOST)):((BLOBSTORE_HTTPS_PORT))"'
    properties.cc.droplets.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.internal_api_password: '"((INTERNAL_API_PASSWORD))"'
    properties.cc.internal_service_hostname: '"((API_HA_HOST))((^API_HA_HOST))((API_HOST))((/API_HA_HOST))"'
    properties.cc.packages.app_package_directory_key: '"((APP_PACKAGE_DIRECTORY_KEY))"'
    properties.cc.packages.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.packages.webdav_config.private_endpoint: '"https://((BLOBSTORE_HOST)):((BLOBSTORE_HTTPS_PORT))"'
    properties.cc.packages.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.resource_pool.resource_directory_key: '"((RESOURCE_DIRECTORY_KEY))"'
    properties.cc.resource_pool.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.resource_pool.webdav_config.private_endpoint: '"https://((BLOBSTORE_HOST)):((BLOBSTORE_HTTPS_PORT))"'
    properties.cc.resource_pool.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.srv_api_uri: '"http://((API_HOST)).((HCP_SERVICE_DOMAIN_SUFFIX)):9022"'
    properties.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.ccdb.address: '((MYSQL_PROXY_HOST))'
    properties.ccdb.roles: '[{"name": "ccadmin", "password": "((CCDB_ROLE_PASSWORD))", "tag": "admin"}]'
    properties.cf-usb.broker.external_url: '"https://((CF_USB_BROKER_HOST)):24054"'
    properties.cf-usb.broker.password: '"((CF_USB_PASSWORD))"'
    properties.cf-usb.broker.server_cert: '"((CF_USB_BROKER_SERVER_CERT))"'
    properties.cf-usb.broker.server_key: '"((CF_USB_BROKER_SERVER_KEY))"'
    properties.cf-usb.management.public_key: '"((JWT_SIGNING_PUB))"'
    properties.cf-usb.management.uaa.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.cf.skip_ssl_validation: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.cf_mysql.mysql.advertise_host: '((#HCP_COMPONENT_NAME))"((HCP_COMPONENT_NAME))((HCP_HOSTNAME_SUFFIX))"((/HCP_COMPONENT_NAME))((^HCP_COMPONENT_NAME))nil((/HCP_COMPONENT_NAME))'
    properties.cf_mysql.mysql.seeded_databases: '[{"name":"ccdb", "username":"ccadmin", "password": "((CCDB_ROLE_PASSWORD))"}, {"name":"uaadb", "username": "uaaadmin", "password":"((UAADB_PASSWORD))"}, {"name":"diego", "username": "diego", "password":"((MYSQL_DIEGO_PASSWORD))"}]'
    properties.consul.agent.servers.lan: '["((CONSUL_HOST))"((#CONSUL_HA_HOST_1)), "((CONSUL_HA_HOST_1))"((/CONSUL_HA_HOST_1))((#CONSUL_HA_HOST_2)), "((CONSUL_HA_HOST_2))"((/CONSUL_HA_HOST_2))]'
    properties.consul.agent_cert: '"((CONSUL_AGENT_CERT))"'
    properties.consul.agent_key: '"((CONSUL_AGENT_KEY))"'
    properties.consul.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.consul.encrypt_keys: '["((CONSUL_ENCRYPTION_KEYS))"]'
    properties.consul.server_cert: '"((CONSUL_SERVER_CERT))"'
    properties.consul.server_key: '"((CONSUL_SERVER_KEY))"'
    properties.couchdb.host: '"couchdb-int.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.couchdb.password: '"((AUTOSCALER_COUCHDB_PASSWORD))"'
    properties.diego.auctioneer.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.auctioneer.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.auctioneer.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.bbs.active_key_label: '"((BBS_ACTIVE_KEY_LABEL))"'
    properties.diego.bbs.advertisement_base_hostname: '"((BBS_ADVERTISEMENT_BASE_HOSTNAME))"'
    properties.diego.bbs.auctioneer.api_url: 'http://((DIEGO_BRAIN_HOST)):9016'
    properties.diego.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.encryption_keys: '[{"label": "((BBS_ACTIVE_KEY_LABEL))", "passphrase": "((BBS_ACTIVE_KEY_PASSPHRASE))"}]'
    properties.diego.bbs.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.diego.bbs.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.diego.bbs.server_cert: '"((BBS_SERVER_CRT))"'
    properties.diego.bbs.server_key: '"((BBS_SERVER_KEY))"'
    properties.diego.bbs.sql.db_connection_string: '"((={{ }}=))diego:{{MYSQL_DIEGO_PASSWORD}}@tcp({{MYSQL_HOST}}:3306)/diego{{=(( ))=}}"'
    properties.diego.executor.memory_capacity_mb: '((DIEGO_CELL_MEMORY_CAPACITY_MB))'
    properties.diego.rep.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.rep.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.rep.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.rep.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.rep.trusted_certs: '"((TRUSTED_CERTS))"'
    properties.diego.rep.zone: '"((HCP_AZ))"'
    properties.diego.route_emitter.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.route_emitter.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.route_emitter.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.route_emitter.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.route_emitter.nats.machines: '["((NATS_HOST))"((#NATS_HA_HOST_1)), "((NATS_HA_HOST_1))"((/NATS_HA_HOST_1))((#NATS_HA_HOST_2)), "((NATS_HA_HOST_2))"((/NATS_HA_HOST_2))]'
    properties.diego.route_emitter.nats.password: '"((NATS_PASSWORD))"'
    properties.diego.ssh_proxy.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.ssh_proxy.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.ssh_proxy.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.ssh_proxy.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.ssh_proxy.cc.internal_service_hostname: '"((API_HA_HOST))((^API_HA_HOST))((API_HOST))((/API_HA_HOST))"'
    properties.diego.ssh_proxy.host_key: '"((SSH_KEY))"'
    properties.diego.ssh_proxy.uaa_secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.diego.ssh_proxy.uaa_token_url: '"((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))((UAA_HOST)).((HCP_SERVICE_DOMAIN_SUFFIX)):8443((/HCP_IDENTITY_EXTERNAL_HOST))/oauth/token"'
    properties.diego.ssl.skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.domain: '"((DOMAIN))"'
    properties.doppler.syslog_skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.doppler.zone: '"((HCP_AZ))"'
    properties.doppler_endpoint.shared_secret: '"((LOGGREGATOR_SHARED_SECRET))"'
    properties.etcd.advertise_urls_dns_suffix: '["((DNS_SUFFIX))"]'
    properties.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.etcd.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
    properties.etcd.machines: '["((DIEGO_DATABASE_HOST))"((#DIEGO_DATABASE_HA_HOST_1)), "((DIEGO_DATABASE_HA_HOST_1))"((/DIEGO_DATABASE_HA_HOST_1))((#DIEGO_DATABASE_HA_HOST_2)), "((DIEGO_DATABASE_HA_HOST_2))"((/DIEGO_DATABASE_HA_HOST_2))]'
    properties.etcd.peer_ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.etcd.peer_cert: '"((ETCD_PEER_CRT))"'
    properties.etcd.peer_key: '"((ETCD_PEER_KEY))"'
    properties.etcd.server_cert: '"((ETCD_SERVER_CRT))"'
    properties.etcd.server_key: '"((ETCD_SERVER_KEY))"'
    properties.garden.dns_servers: '["((GARDEN_LINUX_DNS_SERVER))"]'
    properties.garden.http_proxy: '"((HTTP_PROXY))"'
    properties.garden.https_proxy: '"((HTTPS_PROXY))"'
    properties.garden.network_pool: '"((DIEGO_CELL_SUBNET))"'
    properties.garden.no_proxy: '"((NO_PROXY))"'
    properties.ha_proxy.ssl_pem: '"((HAPROXY_SSL_CERT_KEY))"'
    properties.hcf.demophon.server_cert: '"((DEMOPHON_SERVER_CERT))"'
    properties.hcf.demophon.server_key: '"((DEMOPHON_SERVER_KEY))"'
    properties.hcf.demophon.skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.hcf.demophon.config: '[{"name":"CONSUL_HOST","value":"((CONSUL_HOST))"},{"name":"CONSUL_ENCRYPTION_KEYS","value":"((CONSUL_ENCRYPTION_KEYS))"},{"name":"CONSUL_CA_CERT","value":"((INTERNAL_CA_CERT))"},{"name":"CONSUL_AGENT_CERT","value":"((CONSUL_AGENT_CERT))"},{"name":"CONSUL_AGENT_KEY","value":"((CONSUL_AGENT_KEY))"},{"name":"BBS_CA_CRT","value":"((INTERNAL_CA_CERT))"},{"name":"BBS_CLIENT_CRT","value":"((BBS_CLIENT_CRT))"},{"name":"BBS_CLIENT_KEY","value":"((BBS_CLIENT_KEY))"},{"name":"DIEGO_DATABASE_HOST","value":"((DIEGO_DATABASE_HOST))"},{"name":"ETCD_HOST","value":"((ETCD_HOST))"},{"name":"LOGGREGATOR_SHARED_SECRET","value":"((LOGGREGATOR_SHARED_SECRET))"}]'
    properties.hcf.monit.password: '"((MONIT_PASSWORD))"'
    properties.hcf.uaa.internal-url: '"((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))((UAA_HOST)).((HCP_SERVICE_DOMAIN_SUFFIX)):8443((/HCP_IDENTITY_EXTERNAL_HOST))"'
    properties.hcf.skip_cert_verify_external: '((SKIP_CERT_VERIFY_EXTERNAL))'
    properties.hcf_set_proxy.running_http_proxy: '"((HTTP_PROXY))"'
    properties.hcf_set_proxy.running_https_proxy: '"((HTTPS_PROXY))"'
    properties.hcf_set_proxy.running_no_proxy: '"((NO_PROXY))"'
    properties.hcf_set_proxy.staging_http_proxy: '"((HTTP_PROXY))"'
    properties.hcf_set_proxy.staging_https_proxy: '"((HTTPS_PROXY))"'
    properties.hcf_set_proxy.staging_no_proxy: '"((NO_PROXY))"'
    properties.hcf_sso.host: '"((HCF_SSO_HOST))"'
    properties.hcf_sso.password: '"((HCF_SSO_PASSWORD))"'
    properties.hcf_sso.server_cert: '"((SSO_ROUTE_CERT))"'
    properties.hcf_sso.server_key: '"((SSO_ROUTE_KEY))"'
    properties.hcf_sso.skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.hcf_versions.blobstore.password: '"((BLOBSTORE_PASSWORD))"'
    properties.hcf_versions.blobstore.private_endpoint: '"https://((BLOBSTORE_HOST)):((BLOBSTORE_HTTPS_PORT))"'
    properties.hcf_versions.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
    properties.hcf_versions.skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.loggregator.etcd.machines: '((ETCD_HOST))'
    properties.login.url: '"((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))uaa.((DOMAIN))((/HCP_IDENTITY_EXTERNAL_HOST))"'
    properties.metron_agent.zone: '"((HCP_AZ))"'
    properties.metron_endpoint.shared_secret: '"((LOGGREGATOR_SHARED_SECRET))"'
    properties.nats.machines: '["((NATS_HOST))"((#NATS_HA_HOST_1)), "((NATS_HA_HOST_1))"((/NATS_HA_HOST_1))((#NATS_HA_HOST_2)), "((NATS_HA_HOST_2))"((/NATS_HA_HOST_2))]'
    properties.nats.password: '"((NATS_PASSWORD))"'
    properties.router.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
    properties.router.route_services_secret: '"((ROUTER_SERVICES_SECRET))"'
    properties.router.servers: '["((ROUTER_HOST))"]'
    properties.router.ssl_cert: '"((ROUTER_SSL_CERT))"'
    properties.router.ssl_key: '"((ROUTER_SSL_KEY))"'
    properties.router.ssl_skip_validation: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.router.status.password: '"((ROUTER_STATUS_PASSWORD))"'
    properties.router_configurer.oauth_secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.routing_api.etcd.servers: '["((ROUTING_API_HOST))"((#ROUTING_API_HA_HOST_1)), "((ROUTING_API_HA_HOST_1))"((/ROUTING_API_HA_HOST_1))((#ROUTING_API_HA_HOST_2)), "((ROUTING_API_HA_HOST_2))"((/ROUTING_API_HA_HOST_2))]'
    properties.routing_api.system_domain: '"((DOMAIN))"'
    properties.routing_api.uri: http://((ROUTING_API_HOST))
    properties.skip_ssl_validation: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.smoke_tests.api: '"api.((DOMAIN))"'
    properties.smoke_tests.apps_domain: '["((DOMAIN))"]'
    properties.smoke_tests.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.ssl.skip_cert_verify: '((SKIP_CERT_VERIFY_INTERNAL))'
    properties.system_domain: '"((DOMAIN))"'
    properties.tcp_emitter.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.tcp_emitter.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.tcp_emitter.oauth_secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.tomcat.http.autoscaler_api.route: '"((AUTOSCALER_API_HOST))"'
    properties.tomcat.http.autoscaler_server.route: '"((AUTOSCALER_SERVER_HOST))"'
    properties.uaa.admin.client_secret: '"((UAA_ADMIN_CLIENT_SECRET))"'
    properties.uaa.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.uaa.clients: ((UAA_CLIENTS))((^UAA_CLIENTS)){}((/UAA_CLIENTS)) # This is _not_ quoted to let the JSON expand in configgin
    properties.uaa.clients.app-direct.secret: '"((UAA_CLIENTS_APP_DIRECT_SECRET))"'
    properties.uaa.clients.cc-service-dashboards.secret: '"((UAA_CLIENTS_CC_SERVICE_SECRET))"'
    properties.uaa.clients.cc_routing.secret: '"((UAA_CLIENTS_CC_ROUTING_SECRET))"'
    properties.uaa.clients.cf-autoscaler-client.secret: '"((UAA_CLIENTS_CF_AUTOSCALER_SECRET))"'
    properties.uaa.clients.cf-usb.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.uaa.clients.cloud_controller.secret: "((UAA_CC_CLIENT_SECRET))"
    properties.uaa.clients.cloud_controller_username_lookup.secret: '"((UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET))"'
    properties.uaa.clients.developer_console.secret: '"((UAA_CLIENTS_DEVELOPER_CONSOLE_SECRET))"'
    properties.uaa.clients.doppler.secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
    properties.uaa.clients.gorouter.secret: '"((UAA_CLIENTS_GOROUTER_SECRET))"'
    properties.uaa.clients.hcf-sso.secret: '"((UAA_CLIENTS_HCF_SSO_SECRET))"'
    properties.uaa.clients.login.redirect-uri: '"((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))login.((DOMAIN))((/HCP_IDENTITY_EXTERNAL_HOST))"'
    properties.uaa.clients.login.secret: '"((UAA_CLIENTS_LOGIN_SECRET))"'
    properties.uaa.clients.notifications.secret: '"((UAA_CLIENTS_NOTIFICATIONS_SECRET))"'
    properties.uaa.clients.ssh-proxy.secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.uaa.clients.tcp_emitter.secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.uaa.clients.tcp_router.secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.uaa.clients.uaa_create_first_user.secret: '"((UAA_CLIENTS_UAA_CREATE_FIRST_USER_SECRET))"'
    properties.uaa.jwt.signing_key: '"((JWT_SIGNING_PEM))"'
    properties.uaa.jwt.verification_key: '"((JWT_SIGNING_PUB))"'
    properties.uaa.scim.users: '["admin|((CLUSTER_ADMIN_PASSWORD))|((CLUSTER_ADMIN_AUTHORITIES))"]'
    properties.uaa.ssl.port: ((HCP_IDENTITY_EXTERNAL_PORT))((^HCP_IDENTITY_EXTERNAL_PORT))8443((/HCP_IDENTITY_EXTERNAL_PORT))
    properties.uaa.sslCertificate: '"((UAA_CERTIFICATE))"'
    properties.uaa.sslPrivateKey: '"((UAA_PRIVATE_KEY))"'
    properties.uaa.tls_port: '"((HCP_IDENTITY_EXTERNAL_PORT))((^HCP_IDENTITY_EXTERNAL_PORT))8443((/HCP_IDENTITY_EXTERNAL_PORT))"'
    properties.uaa.token_endpoint: '"((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))((UAA_HOST))((/HCP_IDENTITY_EXTERNAL_HOST))"'
    properties.uaa.url: '"((HCP_IDENTITY_SCHEME))://((#HCP_IDENTITY_EXTERNAL_HOST))((HCP_INSTANCE_ID)).((HCP_IDENTITY_EXTERNAL_HOST)):((HCP_IDENTITY_EXTERNAL_PORT))((/HCP_IDENTITY_EXTERNAL_HOST))((^HCP_IDENTITY_EXTERNAL_HOST))uaa.((DOMAIN))((/HCP_IDENTITY_EXTERNAL_HOST))"'
    properties.uaa.user.authorities: ((UAA_USER_AUTHORITIES)) # This is _not_ quoted to let the JSON expand in configgin
    properties.uaa.zones.internal.hostnames: '["((UAA_HOST))","((UAA_HOST)).((HCP_SERVICE_DOMAIN_SUFFIX))"]'
    properties.uaadb.address: '((MYSQL_PROXY_HOST))'
    properties.uaadb.roles: '[{"name": "uaaadmin", "password": "((UAADB_PASSWORD))", "tag": "admin"}]'
auth:
  # This maps to properties.uaa.clients / properties.uaa.user.authorities;
  # there is no mustache expansion here.
  clients:
    app-direct:
      authorized-grant-types: refresh_token,authorization_code
    cf-autoscaler-client:
      authorities: cloud_controller.read,cloud_controller.admin
      authorized-grant-types: client_credentials
    cf-usb:
      authorities: cloud_controller.admin,usb.management.admin
      authorized-grant-types: client_credentials
      scope: usb.management.admin
    cc-service-dashboards:
      authorities: clients.read,clients.write,clients.admin
      authorized-grant-types: client_credentials
      scope: openid,cloud_controller_service_permissions.read
    cc_routing:
      authorities: routing.router_groups.read
      authorized-grant-types: client_credentials
    cf:
      access-token-validity: 600
      authorities: uaa.none
      authorized-grant-types: implicit,password,refresh_token
      autoapprove: true
      override: true
      refresh-token-validity: 2592000
      scope: cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose,uaa.user,routing.router_groups.read
    cloud_controller:
      authorized-grant-types: client_credentials
      authorities: scim.read,scim.write,password.write
      id: cloud_controller
      access-token-validity: 604800
    cloud_controller_username_lookup:
      authorities: scim.userids
      authorized-grant-types: client_credentials
    doppler:
      authorities: uaa.resource
      override: true
    gorouter:
      authorities: clients.read,clients.write,clients.admin,route.admin,route.advertise,routing.routes.read
      authorized-grant-types: client_credentials,refresh_token
      scope: openid,cloud_controller_service_permissions.read
    hcf-sso:
      access_token_validity: 3600
      authorized-grant-types: authorization_code
      scope: scim.me
      autoapprove: true
    login:
      authorities: oauth.login,scim.write,clients.read,notifications.write,critical_notifications.write,emails.write,scim.userids,password.write
      authorized-grant-types: authorization_code,client_credentials,refresh_token
      autoapprove: true
      override: true
      redirect-uri: https://login.example.com
      scope: openid,oauth.approvals
    notifications:
      authorities: cloud_controller.admin,scim.read
      authorized-grant-types: client_credentials
    ssh-proxy:
      authorized-grant-types: authorization_code
      autoapprove: true
      override: true
      redirect-uri: /login
      scope: openid,cloud_controller.read,cloud_controller.write
    tcp_emitter:
      authorities: routing.routes.write,routing.routes.read
      authorized-grant-types: client_credentials,refresh_token
    tcp_router:
      authorities: routing.routes.read
      authorized-grant-types: client_credentials,refresh_token
    uaa_create_first_user:
      access-token-validity: 600
      authorities: scim.read,scim.write
      authorized-grant-types: client_credentials
  authorities:
    - openid
    - scim.me
    - cloud_controller.read
    - cloud_controller.write
    - cloud_controller_service_permissions.read
    - password.write
    - uaa.user
    - approvals.me
    - oauth.approvals
    - notification_preferences.read
    - notification_preferences.write
    - profile
    - roles
    - user_attributes
    - routing.router_groups.read
