---
roles:
- name: nats
  jobs:
  - name: nats
    release_name: cf
  - name: nats_stream_forwarder
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: metron_agent
  - name: nats
  - name: nats_stream_forwarder
  run:
    scaling:
      indexed: 3
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 4
    exposed-ports:
      - name: 'nats'
        protocol: 'TCP'
        source: 4222
        target: 4222
        public: false
      - name: 'nats-routes'
        protocol: 'TCP'
        source: 4223
        target: 4223
        public: false
- name: consul
  jobs:
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 3
      min: 1
      max: 3
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: consul-data
        size: 100
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'server-rpc'
        protocol: 'TCP'
        source: 8300
        target: 8300
        public: false
      - name: 'serf-lan-tcp'
        protocol: 'TCP'
        source: 8301
        target: 8301
        public: false
      - name: 'serf-lan-udp'
        protocol: 'UDP'
        source: 8301
        target: 8301
        public: false
      - name: 'serf-wan-tcp'
        protocol: 'TCP'
        source: 8302
        target: 8302
        public: false
      - name: 'serf-wan-udp'
        protocol: 'UDP'
        source: 8302
        target: 8302
        public: false
      - name: 'cli-rpc'
        protocol: 'TCP'
        source: 8400
        target: 8400
        public: false
      - name: 'http-api'
        protocol: 'TCP'
        source: 8500
        target: 8500
        public: false
  configuration:
    templates:
      properties.consul.agent.mode: '"server"'
- name: mysql
  scripts:
  - fix_mysql_advertise_ip.sh
  jobs:
  - name: mysql
    release_name: cf-mysql
  processes:
  - name: mariadb_ctrl
  - name: galera-healthcheck
  - name: gra-log-purger-executable
  run:
    scaling:
      indexed: 3
      min: 1
      max: 3
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: mysql-data
        size: 100
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'mysql'
        protocol: 'TCP'
        source: 3306
        target: 3306
        public: false
      - name: 'galera'
        protocol: 'TCP'
        source: 4567
        target: 4567
        public: false
      - name: 'healthcheck'
        protocol: 'tcp'
        source: 9200
        target: 9200
        public: false
      - name: 'xtrabackup'
        protocol: 'tcp'
        source: 4444
        target: 4444
        public: false
  configuration:
    templates:
      properties.cf_mysql.mysql.cluster_ips: '["((MYSQL_HOST))"((#MYSQL_HA_HOST_1)), "((MYSQL_HA_HOST_1))"((/MYSQL_HA_HOST_1))((#MYSQL_HA_HOST_2)), "((MYSQL_HA_HOST_2))"((/MYSQL_HA_HOST_2))]'
      properties.cf_mysql.mysql.database_startup_timeout: '300'
      properties.network_name: 'default'
      properties.cf_mysql.proxy.api_username: 'mysql_proxy'
      properties.cf_mysql.proxy.proxy_ips: '["((MYSQL_PROXY_HOST))"((#MYSQL_PROXY_HA_HOST_1)), "((MYSQL_PROXY_HA_HOST_1))"((/MYSQL_PROXY_HA_HOST_1))((#MYSQL_PROXY_HA_HOST_2)), "((MYSQL_PROXY_HA_HOST_2))"((/MYSQL_PROXY_HA_HOST_2))]'
      properties.cf_mysql.mysql.bootstrap_endpoint.username: 'bootstrap_user'
      properties.cf_mysql.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.external_host: "((DOMAIN))"
      properties.cf_mysql.proxy.api_password: "((MYSQL_PROXY_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.bootstrap_endpoint.password: "((MYSQL_BOOTSTRAP_ENDPOINT_PASSWORD))"
      properties.cf_mysql.mysql.seeded_databases: '[{"name":"ccdb", "username":"((CCDB_ROLE_NAME))", "password": "((CCDB_ROLE_PASSWORD))"}, {"name":"uaadb", "username": "((UAADB_USERNAME))", "password":"((UAADB_PASSWORD))"}]'
- name: mysql-proxy
  jobs:
  - name: proxy
    release_name: cf-mysql
  processes:
  - name: route-registrar
  - name: switchboard
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'mysql-proxy'
        protocol: 'TCP'
        source: 3306
        target: 3306
        public: false
      - name: 'api'
        protocol: 'TCP'
        source: 80
        target: 80
        public: false
      - name: 'healthcheck'
        protocol: 'TCP'
        source: 1936
        target: 1936
        public: false
  configuration:
    templates:
      properties.cf_mysql.mysql.cluster_ips: '["((MYSQL_HOST))"((#MYSQL_HA_HOST_1)), "((MYSQL_HA_HOST_1))"((/MYSQL_HA_HOST_1))((#MYSQL_HA_HOST_2)), "((MYSQL_HA_HOST_2))"((/MYSQL_HA_HOST_2))]'
      properties.cf_mysql.mysql.database_startup_timeout: '300'
      properties.network_name: 'default'
      properties.cf_mysql.proxy.api_username: 'mysql_proxy'
      properties.cf_mysql.proxy.proxy_ips: '["((MYSQL_PROXY_HOST))"((#MYSQL_PROXY_HA_HOST_1)), "((MYSQL_PROXY_HA_HOST_1))"((/MYSQL_PROXY_HA_HOST_1))((#MYSQL_PROXY_HA_HOST_2)), "((MYSQL_PROXY_HA_HOST_2))"((/MYSQL_PROXY_HA_HOST_2))]'
      properties.cf_mysql.mysql.bootstrap_endpoint.username: 'bootstrap_user'
      properties.cf_mysql.mysql.admin_password: "((MYSQL_ADMIN_PASSWORD))"
      properties.cf_mysql.external_host: "((DOMAIN))"
      properties.cf_mysql.proxy.api_password: "((MYSQL_PROXY_ADMIN_PASSWORD))"
      properties.cf_mysql.mysql.bootstrap_endpoint.password: "((MYSQL_BOOTSTRAP_ENDPOINT_PASSWORD))"
      properties.cf_mysql.mysql.seeded_databases: '[{"name":"ccdb", "username":"((CCDB_ROLE_NAME))", "password": "((CCDB_ROLE_PASSWORD))"}, {"name":"uaadb", "username": "((UAADB_USERNAME))", "password":"((UAADB_PASSWORD))"}]'
      # TODO: Take this out, and place our generated CA cert
      # into the appropriate /usr/share/ca-certificates folders
      # and call update-ca-certificates at container startup
      properties.proxy.api_force_https: 'false'
      properties.skip_ssl_validation: 'true'
      properties.cf-usb.skip_tls_validation: 'true'
- name: diego-database
  scripts:
  - make_sys_proc_tweaks_optional.sh
  jobs:
  - name: etcd
    release_name: etcd
  - name: bbs
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: bbs
  - name: etcd
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        tag: diego-database-data
        size: 100
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'cell-etcd'
        protocol: 'TCP'
        source: 4001
        target: 4001
        public: false
      - name: 'cell-etcd-peer'
        protocol: 'TCP'
        source: 7001
        target: 7001
        public: false
      - name: 'cell-metrics'
        protocol: 'TCP'
        source: 5678
        target: 5678
        public: false
      - name: 'cell-bbs-api'
        protocol: 'TCP'
        source: 8889
        target: 8889
        public: false
      - name: 'cell-bbs-dbg'
        protocol: 'TCP'
        source: 17017
        target: 17017
        public: false
    hosts:
      - diego-database-0.etcd.service.cf.internal: 127.0.0.1
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"usb", "port": 54053, "uris":["usb.((DOMAIN))",  "*.usb.((DOMAIN))"], "registration_interval":"10s"}, {"name":"broker", "port": 54054, "uris":["brokers.((DOMAIN))", "*.brokers.((DOMAIN))"], "registration_interval":"10s"}]'
- name: ha-proxy
  jobs:
  - name: haproxy
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: consul_template
  - name: haproxy
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'ha-proxy'
        protocol: 'TCP'
        source: 80
        target: 80
        public: true
      - name: 'ha-proxy2'
        protocol: 'TCP'
        source: 443
        target: 443
        public: true
      - name: 'ha-proxy3'
        protocol: 'TCP'
        source: 4443
        target: 4443
        public: true
- name: router
  scripts:
  - make_sys_proc_tweaks_optional.sh
  jobs:
  - name: gorouter
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: gorouter
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 2048
    virtual-cpus: 4
    exposed-ports:
      - name: 'router'
        protocol: 'TCP'
        source: 80
        target: 80
        public: false
- name: uaa
  jobs:
  - name: uaa
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: cf
  processes:
  - name: uaa
  - name: consul_agent
  - name: route_registrar
  - name: metron_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'uaa'
        protocol: 'TCP'
        source: 8080
        target: 8080
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"uaa", "port": 8080, "tags":{"component":"uaa"}, "uris":["uaa.((DOMAIN))", "*.uaa.((DOMAIN))", "login.((DOMAIN))", "*.login.((DOMAIN))"], "registration_interval":"10s"}]'
- name: api
  scripts:
  - perform_nfs_test.sh
  - make_sys_proc_tweaks_optional.sh
  jobs:
  - name: cloud_controller_ng
    release_name: cf
  - name: statsd-injector
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: cf
  - name: go-buildpack
    release_name: cf
  - name: binary-buildpack
    release_name: cf
  - name: nodejs-buildpack
    release_name: cf
  - name: ruby-buildpack
    release_name: cf
  - name: php-buildpack
    release_name: cf
  - name: python-buildpack
    release_name: cf
  - name: staticfile-buildpack
    release_name: cf
  - name: cf_iis_buildpack
    release_name: windows-runtime-release
  processes:
  - name: cloud_controller_ng
  - name: cloud_controller_worker_local_1
  - name: cloud_controller_worker_local_2
  - name: cloud_controller_migration
  - name: route_registrar
  - name: metron_agent
  - name: consul_agent
  - name: nginx_cc
  - name: statsd-injector
  run:
    scaling:
      indexed: 2
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes:
    - path: '/var/vcap/nfs/shared'
      tag: api-data
      size: 100
    memory: 2048
    virtual-cpus: 4
    exposed-ports:
      - name: 'api'
        protocol: 'TCP'
        source: 9022
        target: 9022
        public: false
      - name: 'statsd'
        protocol: 'TCP'
        source: 8125
        target: 8125
        public: false
  configuration:
    templates:
      properties.etcd.machines: '["((ETCD_HOST))"((#ETCD_HA_HOST_1)), "((ETCD_HA_HOST_1))"((/ETCD_HA_HOST_1))((#ETCD_HA_HOST_2)), "((ETCD_HA_HOST_2))"((/ETCD_HA_HOST_2))]'
      properties.route_registrar.routes: '[{"name":"api", "port":9022, "tags":{"component":"CloudController"}, "uris":["api.((DOMAIN))"], "registration_interval":"10s"}]'
- name: api-worker
  jobs:
  - name: cloud_controller_worker
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: cloud_controller_worker_1
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes:
    - path: '/var/vcap/nfs/shared'
      size: 100
      tag: 'api-data'
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: blobstore
  jobs:
  - name: blobstore
    release_name: cf
  - name: route_registrar
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: blobstore_nginx
  - name: blobstore_url_signer
  - name: route_registrar
  - name: metron_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes:
    - path: /var/vcap/store
      tag: blobstore-data
      size: 100
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
    - name: 'blobstore-ext'
      protocol: 'TCP'
      source: 80
      target: 80
      public: false
    - name: 'blobstore-int'
      protocol: 'TCP'
      source: 443
      target: 443
      public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"blobstore", "port":80, "tags":{"component":"blobstore"}, "uris":["blobstore.((DOMAIN))"], "registration_interval":"10s"}]'
- name: clock-global
  jobs:
  - name: cloud_controller_clock
    release_name: cf
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: cloud_controller_clock
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: cf-usb
  jobs:
  - name: cf-usb
    release_name: cf-usb
  - name: consul_agent
    release_name: cf
  - name: route_registrar
    release_name: cf
  processes:
  - name: usb
  - name: route_registrar
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes:
    - path: '/var/vcap/nfs'
      size: 100
      tag: 'cf-usb-data'
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'usb'
        protocol: 'TCP'
        source: 54054
        target: 54054
        public: false
      - name: 'usb2'
        protocol: 'TCP'
        source: 54053
        target: 54053
        public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"usb", "port": 54053, "uris":["usb.((DOMAIN))", "*.usb.((DOMAIN))"], "registration_interval":"10s"}, {"name":"broker", "port": 54054, "uris":["brokers.((DOMAIN))", "*.brokers.((DOMAIN))"], "registration_interval":"10s"}]'
- name: doppler
  scripts:
  - make_sys_proc_tweaks_optional.sh
  jobs:
  - name: doppler
    release_name: cf
  - name: syslog_drain_binder
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: doppler
  - name: metron_agent
  - name: syslog_drain_binder
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'doppler-in'
        protocol: 'TCP'
        source: 3456
        target: 3456
        public: false
      - name: 'dropsnode-in'
        protocol: 'TCP'
        source: 3457
        target: 3457
        public: false
      - name: 'doppler-tls'
        protocol: 'TCP'
        source: 3458
        target: 3458
        public: false
- name: etcd
  jobs:
  - name: etcd
    release_name: cf
  - name: etcd_metrics_server
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: etcd_metrics_server
  - name: etcd
  - name: metron_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes:
      - path: /var/vcap/store
        size: 100
        tag: cf-etcd-data
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'etcd-client'
        protocol: 'TCP'
        source: 4001
        target: 4001
        public: false
      - name: 'etcd-peer'
        protocol: 'TCP'
        source: 7001
        target: 7001
        public: false
  configuration:
    templates:
      properties.etcd.peer_require_ssl: 'false'
      properties.etcd.require_ssl: 'false'
      properties.etcd.cluster: 'null'
      properties.etcd.peer_key: 'null'
      properties.etcd.peer_cert: 'null'
      properties.etcd.peer_ca_cert: 'null'
      properties.etcd.server_key: 'null'
      properties.etcd.client_key: 'null'
      properties.etcd.server_cert: 'null'
      properties.etcd.client_cert: 'null'
      properties.etcd.ca_cert: 'null'
      properties.etcd.machines: '["((ETCD_HOST))"((#ETCD_HA_HOST_1)), "((ETCD_HA_HOST_1))"((/ETCD_HA_HOST_1))((#ETCD_HA_HOST_2)), "((ETCD_HA_HOST_2))"((/ETCD_HA_HOST_2))]'
- name: loggregator
  scripts:
  - make_sys_proc_tweaks_optional.sh
  jobs:
  - name: loggregator_trafficcontroller
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: route_registrar
    release_name: cf
  processes:
  - name: loggregator_trafficcontroller
  - name: metron_agent
  - name: route_registrar
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"loggregator", "port":8081, "uris":["doppler.((DOMAIN))"], "registration_interval":"10s"}, {"name":"loggregator_trafficcontroller", "port":8080, "uris":["loggregator.((DOMAIN))"], "registration_interval":"10s"}]'
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'loggregator'
        protocol: 'TCP'
        source: 8080
        target: 8080
        public: false
      - name: 'loggregator-ws'
        protocol: 'TCP'
        source: 8081
        target: 8081
        public: false
- name: diego-brain
  jobs:
  - name: consul_agent
    release_name: cf
  - name: auctioneer
    release_name: diego
  - name: converger
    release_name: diego
  - name: metron_agent
    release_name: cf
  processes:
  - name: converger
  - name: auctioneer
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 4
    exposed-ports:
      - name: 'diego-auction'
        protocol: 'TCP'
        source: 9016
        target: 9016
        public: false
- name: diego-cc-bridge
  scripts:
  - make_sys_proc_tweaks_optional.sh
  jobs:
  - name: stager
    release_name: diego
  - name: nsync
    release_name: diego
  - name: tps
    release_name: diego
  - name: cc_uploader
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: cc_uploader
  - name: stager
  - name: tps_listener
  - name: tps_watcher
  - name: nsync_listener
  - name: nsync_bulker
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 4
    exposed-ports:
      - name: 'nsync-listen'
        protocol: 'TCP'
        source: 8787
        target: 8787
        public: false
      - name: 'nsync-dbg-l'
        protocol: 'TCP'
        source: 17006
        target: 17006
        public: false
      - name: 'nsync-dbg-b'
        protocol: 'TCP'
        source: 17007
        target: 17007
        public: false
      - name: 'stager-dbg'
        protocol: 'TCP'
        source: 17011
        target: 17011
        public: false
      - name: 'stager-listen'
        protocol: 'TCP'
        source: 8888
        target: 8888
        public: false
      - name: 'tps-listen'
        protocol: 'TCP'
        source: 1518
        target: 1518
        public: false
      - name: 'tps-dbg-l'
        protocol: 'TCP'
        source: 17014
        target: 17014
        public: false
      - name: 'tps-dbg-w'
        protocol: 'TCP'
        source: 17015
        target: 17015
        public: false
      - name: 'cc-up-listen'
        protocol: 'TCP'
        source: 9090
        target: 9090
        public: false
      - name: 'cc-up-dbg'
        protocol: 'TCP'
        source: 17018
        target: 17018
        public: false
- name: diego-route-emitter
  jobs:
  - name: route_emitter
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  processes:
  - name: route_emitter
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: diego-access
  scripts:
  - make_sys_proc_tweaks_optional.sh
  jobs:
  - name: ssh_proxy
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: metron_agent
    release_name: cf
  - name: file_server
    release_name: diego
  - name: windows_buildpack_app_lifecycle
    release_name: windows-runtime-release
  processes:
  - name: file_server
  - name: metron_agent
  - name: ssh_proxy
  - name: consul_agent
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports:
      - name: 'diego-ssh'
        protocol: 'TCP'
        source: 2222
        target: 2222
        public: true
      - name: 'diego-files'
        protocol: 'TCP'
        source: 8080
        target: 8080
        public: false
- name: diego-cell
  scripts:
  - prevent_apparmor_disable.sh
  - make_sys_proc_tweaks_optional.sh
  - fix_diego_cell_id.sh
  post_config_scripts:
  - diego-cell-pre-start.sh
  jobs:
  - name: rep
    release_name: diego
  - name: consul_agent
    release_name: cf
  - name: garden
    release_name: garden-linux
  - name: rootfses
    release_name: diego
  - name: metron_agent
    release_name: cf
  processes:
  - name: metron_agent
  - name: consul_agent
  - name: rep
  - name: garden
  run:
    scaling:
      indexed: 1
      min: 1
      max: 65535
    capabilities: ['ALL']
    persistent-volumes: []
    shared-volumes: []
    memory: 2048
    virtual-cpus: 4
    exposed-ports: []
- name: acceptance-tests
  type: bosh-task
  jobs:
  - name: acceptance-tests
    release_name: cf
  run:
    scaling:
      indexed: 1
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: smoke-tests
  type: bosh-task
  jobs:
  - name: smoke-tests
    release_name: cf
  run:
    scaling:
      indexed: 1
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: diego-debugger
  type: docker
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 128
    virtual-cpus: 1
    exposed-ports: []
- name: post-deployment-setup
  type: bosh-task
  dev-only: true
  jobs:
  - name: cf-set-proxy
    release_name: hcf-deployment-hooks
  processes: []
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: windows-dns
  type: docker
  run:
    scaling:
      indexed: 1
      min: 0
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports:
      - name: 'windows-dns'
        protocol: 'UDP'
        source: 8600
        target: 53
        public: true
- name: dev-service-mongodb
  type: docker
  run:
    flight-stage: manual
    scaling:
      indexed: 1
      min: 0
      max: 1
    capabilities: []
    persistent-volumes:
      - path: /data/db
        tag: dev-service-mongodb-data
        size: 200
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: dev-service-mysql
  dev-only: true
  type: docker
  run:
    flight-stage: manual
    scaling:
      indexed: 1
      min: 0
      max: 1
    capabilities: []
    persistent-volumes:
      - path: /var/lib/mysql
        tag: dev-service-mysql-data
        size: 200
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: dev-service-postgres
  type: docker
  run:
    flight-stage: manual
    scaling:
      indexed: 1
      min: 0
      max: 1
    capabilities: []
    persistent-volumes:
      - path: /var/lib/postgresql/data
        tag: dev-service-postgres-data
        size: 200
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: dev-service-rabbitmq
  type: docker
  run:
    flight-stage: manual
    scaling:
      indexed: 1
      min: 0
      max: 1
    capabilities: ['ALL']
    persistent-volumes:
      - path: /var/rabbitmq-data
        tag: dev-service-rabbitmq-data
        size: 200
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: dev-service-redis
  type: docker
  run:
    flight-stage: manual
    scaling:
      indexed: 1
      min: 0
      max: 1
    capabilities: ['ALL']
    persistent-volumes:
      - path: /var/redis-data
        tag: dev-service-redis-data
        size: 200
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
- name: mysql-lb
  type: docker
  run:
    flight-stage: flight
    scaling:
      indexed: 1
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports:
      - name: 'mysql-lb'
        protocol: 'TCP'
        source: 3306
        target: 3306
        public: true
  configuration:
    templates:
      properties.mysql_lb.proxy.proxy_ips: '["((MYSQL_PROXY_HOST))"((#MYSQL_PROXY_HA_HOST_1)), "((MYSQL_PROXY_HA_HOST_1))"((/MYSQL_PROXY_HA_HOST_1))((#MYSQL_PROXY_HA_HOST_2)), "((MYSQL_PROXY_HA_HOST_2))"((/MYSQL_PROXY_HA_HOST_2))]'
- name: usb-create-services
  type: bosh-task
  dev-only: true
  jobs:
  - name: usb-create-services
    release_name: hcf-deployment-hooks
  processes: []
  run:
    scaling:
      indexed: 1
      min: 1
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports: []
configuration:
  variables:
  - name: API_HOST
    default: "api"
    type-hint: "string,hostname"
  - name: API_HA_HOST
    required: false
    type-hint: "string,hostname"
  - name: BLOBSTORE_HOST
    default: "blobstore"
    type-hint: "string,hostname"
  - name: BLOBSTORE_USERNAME
    default: "blobstore_user"
    type-hint: "string"
  - name: BLOBSTORE_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: BLOBSTORE_SECURE_LINK
    secret: true
    type-hint: "password,random"
  - name: DIEGO_DATABASE_HOST
    default: "diego-database"
    type-hint: "string,hostname"
#  - name: DIEGO_DATABASE_HA_HOST_1
#    required: false
#  - name: DIEGO_DATABASE_HA_HOST_2
#    required: false
  - name: DIEGO_ACCESS_HOST
    default: "diego-access"
    type-hint: "string,hostname"
  - name: DIEGO_CC_BRIDGE_HOST
    default: "diego-cc-bridge"
    type-hint: "string,hostname"
  - name: DIEGO_BRAIN_HOST
    default: "diego-brain"
    type-hint: "string,hostname"
  - name: NATS_HOST
    default: "nats"
    type-hint: "string,hostname"
  - name: NATS_HA_HOST_1
    required: false
    type-hint: "string,hostname"
  - name: NATS_HA_HOST_2
    required: false
    type-hint: "string,hostname"
  - name: MYSQL_PROXY_HOST
    default: "mysql-proxy"
    type-hint: "string,hostname"
  - name: MYSQL_PROXY_HA_HOST_1
    default: false
    type-hint: "string,hostname"
  - name: MYSQL_PROXY_HA_HOST_2
    default: false
    type-hint: "string,hostname"
  - name: MYSQL_HOST
    default: "mysql"
    type-hint: "string,hostname"
  - name: MYSQL_HA_HOST_1
    required: false
    type-hint: "string,hostname"
  - name: MYSQL_HA_HOST_2
    required: false
    type-hint: "string,hostname"
  - name: MYSQL_PROXY_LB_HOST
    default: "mysql-lb"
    type-hint: "string,hostname"
  - name: ETCD_HOST
    default: "etcd"
    type-hint: "string,hostname"
  - name: ETCD_HA_HOST_1
    required: false
    type-hint: "string,hostname"
  - name: ETCD_HA_HOST_2
    required: false
    type-hint: "string,hostname"
  - name: CONSUL_HOST
    default: "consul"
    type-hint: "string,hostname"
  - name: CONSUL_HA_HOST_1
    required: false
    type-hint: "string,hostname"
  - name: CONSUL_HA_HOST_2
    required: false
    type-hint: "string,hostname"
  - name: ROUTER_HOST
    default: "router"
    type-hint: "string,hostname"
  - name: LOGGREGATOR_HOST
    default: "loggregator"
    type-hint: "string,hostname"
  - name: BULK_API_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: CCDB_ROLE_NAME
    default: ccadmin
    type-hint: "string"
  - name: CCDB_ROLE_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: CCDB_ROLE_TAG
    default: admin
    type-hint: "string"
  - name: CERTS_PREFIX
    default: hcf
    type-hint: "string"
  - name: DROPLET_DIRECTORY_KEY
    default: "cc-droplets"
    type-hint: "string"
  - name: BUILDPACK_DIRECTORY_KEY
    default: "cc-buildpacks"
    type-hint: "string"
  - name: APP_PACKAGE_DIRECTORY_KEY
    default: "cc-packages"
    type-hint: "string"
  - name: RESOURCE_DIRECTORY_KEY
    default: "cc-resources"
    type-hint: "string"
  - name: CF_USB_USERNAME
    default: broker-admin
    type-hint: "string"
  - name: CF_USB_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: CLUSTER_ADMIN_AUTHORITIES
    default: scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,routing.router_groups.read
    type-hint: "string"
  - name: CLUSTER_ADMIN_PASSWORD
    secret: true
    type-hint: "password,human"
  - name: CLUSTER_ADMIN_USERNAME
    default: admin
    type-hint: "string"
  - name: CONSUL_ENCRYPTION_KEYS
    secret: true
    type-hint: "password,random"
  - name: DB_ENCRYPTION_KEY
    secret: true
    type-hint: "password,random"
  - name: DNS_SUFFIX
    default: ""
    required: false
    type-hint: "string,domain"
  - name: DOMAIN
    example: "192.168.77.77.nip.io"
    type-hint: "string,domain"
  - name: DOPPLER_ZONE
    default: z1
    type-hint: "string"
  - name: LOGGREGATOR_SHARED_SECRET
    secret: true
    type-hint: "password,random"
  - name: METRON_AGENT_ZONE
    default: z1
    type-hint: "string"
  - name: MONIT_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: MONIT_PORT
    default: '2822'
    type-hint: "integer,port"
  - name: MONIT_USER
    default: monit_user
    type-hint: "string"
  - name: NATS_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: NATS_USER
    default: nats_user
    type-hint: "string"
  - name: SERVICE_PROVIDER_KEY_PASSPHRASE
    secret: true
    type-hint: "password,random"
  - name: STAGING_UPLOAD_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: STAGING_UPLOAD_USER
    default: username
    type-hint: "string"
  - name: INTERNAL_API_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: INTERNAL_API_USER
    default: internal_user
    type-hint: "string"
  - name: TRAFFIC_CONTROLLER_ZONE
    default: z1
    type-hint: "string"
  - name: TRUSTED_CERTS
    secret: true
    required: false
    type-hint: "certificate"
  - name: UAA_ADMIN_CLIENT_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_BATCH_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: UAA_BATCH_USERNAME
    default: batch_username
    type-hint: "string"
  - name: UAA_CC_CLIENT_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CC_ROUTING_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_APP_DIRECT_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_DEVELOPER_CONSOLE_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_DOPPLER_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_GOROUTER_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_LOGIN_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_NOTIFICATIONS_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_CC_ROUTING_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_CC_SERVICE_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_CF_USB_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_TCP_EMITTER_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAA_CLIENTS_TCP_ROUTER_SECRET
    secret: true
    type-hint: "password,random"
  - name: BBS_ACTIVE_KEY_LABEL
    default: key1
    type-hint: "string"
  - name: BBS_ACTIVE_KEY_PASSPHRASE
    secret: true
    type-hint: "password,random"
  - name: MYSQL_ADMIN_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: MYSQL_PROXY_ADMIN_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: MYSQL_BOOTSTRAP_ENDPOINT_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: UAA_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET
    secret: true
    type-hint: "password,random"
  - name: UAADB_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: UAADB_TAG
    default: admin
    type-hint: "string"
  - name: UAADB_USERNAME
    default: uaaadmin
    type-hint: "string"
  - name: ALLOWED_SERVICES_SUBNET
    default: 10.254.0.0/16
    type-hint: "subnet"
  # Certificates
  - name: CERTS_ROOT_CHAIN_PEM
    secret: true
    type-hint: "string,certificate"
  - name: JWT_SIGNING_PEM
    secret: true
    type-hint: "string,certificate"
  - name: JWT_SIGNING_PUB
    secret: true
    type-hint: "string,certificate"
  - name: ETCD_PEER_KEY
    secret: true
    type-hint: "string,certificate"
  - name: ETCD_PEER_CRT
    secret: true
    type-hint: "string,certificate"
  - name: ETCD_PEER_CA_CRT
    secret: true
    type-hint: "string,certificate"
  - name: ETCD_SERVER_KEY
    secret: true
    type-hint: "string,certificate"
  - name: ETCD_CLIENT_KEY
    secret: true
    type-hint: "string,certificate"
  - name: ETCD_SERVER_CRT
    secret: true
    type-hint: "string,certificate"
  - name: ETCD_CLIENT_CRT
    secret: true
    type-hint: "string,certificate"
  - name: ETCD_CA_CRT
    secret: true
    type-hint: "string,certificate"
  - name: BBS_SERVER_KEY
    secret: true
    type-hint: "string,certificate"
  - name: BBS_CLIENT_KEY
    secret: true
    type-hint: "string,certificate"
  - name: BBS_SERVER_CRT
    secret: true
    type-hint: "string,certificate"
  - name: BBS_CLIENT_CRT
    secret: true
    type-hint: "string,certificate"
  - name: BBS_CA_CRT
    secret: true
    type-hint: "string,certificate"
  - name: BBS_ADVERTISEMENT_BASE_HOSTNAME
    default: bbs.service.cf.internal
    type-hint: "string,hostname"
  - name: SSH_KEY
    secret: true
    type-hint: "string,ssh-key"
  - name: APP_SSH_HOST_KEY_FINGERPRINT
    secret: true
    type-hint: "string"
  - name: ROUTER_SSL_CERT
    secret: true
    type-hint: "string,certificate"
  - name: ROUTER_SSL_KEY
    secret: true
    type-hint: "string,certificate"
  - name: UAA_PRIVATE_KEY
    secret: true
    type-hint: "string,certificate"
  - name: UAA_CERTIFICATE
    secret: true
    type-hint: "string,certificate"
  - name: BLOBSTORE_TLS_CERT
    secret: true
    type-hint: "string,certificate"
  - name: BLOBSTORE_TLS_KEY
    secret: true
    type-hint: "string,certificate"
  - name: CONSUL_CA_CERT
    secret: true
    type-hint: "string,certificate"
  - name: CONSUL_AGENT_CERT
    secret: true
    type-hint: "string,certificate"
  - name: CONSUL_AGENT_KEY
    secret: true
    type-hint: "string,certificate"
  - name: CONSUL_SERVER_CERT
    secret: true
    type-hint: "string,certificate"
  - name: CONSUL_SERVER_KEY
    secret: true
    type-hint: "string,certificate"
  - name: DEVSVC_MONGODB_ADMIN_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: DEVSVC_MYSQL_ADMIN_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: DEVSVC_POSTGRES_ADMIN_PASSWORD
    secret: true
    type-hint: "password,random"
  - name: SKIP_CERT_VERIFY
    default: true
    type-hint: "boolean"
  - name: ROUTER_ACCESS_LOG_STREAMING
    default: false
    type-hint: "boolean"
  - name: GARDEN_LINUX_DNS_SERVER
    default: ""
    type-hint: "string,ipaddress"
  # Proxy
  - name: HTTP_PROXY
    default: ""
    type-hint: "string,hostname"
  - name: http_proxy
    default: ""
    type-hint: "string,hostname"
  - name: HTTPS_PROXY
    default: ""
    type-hint: "string,hostname"
  - name: https_proxy
    default: ""
    type-hint: "string,hostname"
  - name: NO_PROXY
    default: "127.0.0.1"
    type-hint: "string"
  templates:
    index: "((HCF_ROLE_INDEX))((^HCF_ROLE_INDEX))0((/HCF_ROLE_INDEX))"
    networks.default.ip: '"((IP_ADDRESS))"'
    networks.default.dns_record_name: '"((UCP_COMPONENT_NAME))((^UCP_COMPONENT_NAME))((DNS_RECORD_NAME))((/UCP_COMPONENT_NAME))"'
    properties.acceptance_tests.api: '"https://api.((DOMAIN))"'
    properties.acceptance_tests.apps_domain: '"((DOMAIN))"'
    properties.acceptance_tests.admin_user: '"((CLUSTER_ADMIN_USERNAME))"'
    properties.acceptance_tests.admin_password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.app_domains: '["((DOMAIN))"]'
    properties.app_ssh.host_key_fingerprint: '"((APP_SSH_HOST_KEY_FINGERPRINT))"'
    properties.cc.bulk_api_password: '"((BULK_API_PASSWORD))"'
    properties.cc.db_encryption_key: '"((DB_ENCRYPTION_KEY))"'
    properties.cc.srv_api_uri: '"https://api.((DOMAIN))"'
    properties.cc.staging_upload_user: '"((STAGING_UPLOAD_USER))"'
    properties.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.cc.internal_api_user: '"((INTERNAL_API_USER))"'
    properties.cc.internal_api_password: '"((INTERNAL_API_PASSWORD))"'
    properties.cc.buildpacks.blobstore_type: webdav
    properties.cc.buildpacks.buildpack_directory_key: '"((BUILDPACK_DIRECTORY_KEY))"'
    properties.cc.buildpacks.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.buildpacks.webdav_config.private_endpoint: '"https://((BLOBSTORE_HOST))"'
    properties.cc.buildpacks.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.buildpacks.webdav_config.username: '"((BLOBSTORE_USERNAME))"'
    properties.cc.droplets.blobstore_type: webdav
    properties.cc.droplets.droplet_directory_key: '"((DROPLET_DIRECTORY_KEY))"'
    properties.cc.droplets.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.droplets.webdav_config.private_endpoint: '"https://((BLOBSTORE_HOST))"'
    properties.cc.droplets.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.droplets.webdav_config.username: '"((BLOBSTORE_USERNAME))"'
    properties.cc.packages.blobstore_type: webdav
    properties.cc.packages.app_package_directory_key: '"((APP_PACKAGE_DIRECTORY_KEY))"'
    properties.cc.packages.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.packages.webdav_config.private_endpoint: '"https://((BLOBSTORE_HOST))"'
    properties.cc.packages.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.packages.webdav_config.username: '"((BLOBSTORE_USERNAME))"'
    properties.cc.resource_pool.blobstore_type: webdav
    properties.cc.resource_pool.resource_directory_key: '"((RESOURCE_DIRECTORY_KEY))"'
    properties.cc.resource_pool.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.resource_pool.webdav_config.private_endpoint: '"https://((BLOBSTORE_HOST))"'
    properties.cc.resource_pool.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.resource_pool.webdav_config.username: '"((BLOBSTORE_USERNAME))"'
    properties.cc.security_group_definitions: '[{"name":"public_networks", "rules":[{"destination":"0.0.0.0-9.255.255.255", "protocol":"all"}, {"destination":"11.0.0.0-169.253.255.255","protocol":"all"}, {"destination":"169.255.0.0-172.15.255.255","protocol":"all"}, {"destination":"172.32.0.0-192.167.255.255","protocol":"all"}, {"destination":"192.169.0.0-255.255.255.255","protocol":"all"}]}, {"name": "dev_services", "rules": [{"destination":"((ALLOWED_SERVICES_SUBNET))","protocol":"all"}]}, {"name":"dns", "rules": [{"destination":"0.0.0.0/0","ports":"53","protocol":"tcp"},{"destination":"0.0.0.0/0","ports":"53","protocol":"udp"}]}]'
    properties.ccdb.roles: '[{"name": "((CCDB_ROLE_NAME))", "password": "((CCDB_ROLE_PASSWORD))", "tag": "((CCDB_ROLE_TAG))"}]'
    properties.uaadb.roles: '[{"name": "((UAADB_USERNAME))", "password": "((UAADB_PASSWORD))", "tag": "((UAADB_TAG))"}]'
    properties.consul.agent.servers.lan: '["((CONSUL_HOST))"((#CONSUL_HA_HOST_1)), "((CONSUL_HA_HOST_1))"((/CONSUL_HA_HOST_1))((#CONSUL_HA_HOST_2)), "((CONSUL_HA_HOST_2))"((/CONSUL_HA_HOST_2))]'
    properties.consul.agent.domain: '"hcf"'
    properties.consul.encrypt_keys: '["((CONSUL_ENCRYPTION_KEYS))"]'
    properties.consul.ca_cert: '"((CONSUL_CA_CERT))"'
    properties.consul.agent_cert: '"((CONSUL_AGENT_CERT))"'
    properties.consul.agent_key: '"((CONSUL_AGENT_KEY))"'
    properties.consul.server_cert: '"((CONSUL_SERVER_CERT))"'
    properties.consul.server_key: '"((CONSUL_SERVER_KEY))"'
    properties.etcd.dns_health_check_host: '"((CONSUL_HOST))"'
    properties.domain: '"((DOMAIN))"'
    properties.doppler.zone: '"((DOPPLER_ZONE))"'
    properties.doppler_endpoint.shared_secret: '"((LOGGREGATOR_SHARED_SECRET))"'
    properties.etcd_metrics_server.nats.username: '"((NATS_USER))"'
    properties.etcd_metrics_server.nats.password: '"((NATS_PASSWORD))"'
    properties.hcf.monit.user: '"((MONIT_USER))"'
    properties.hcf.monit.password: '"((MONIT_PASSWORD))"'
    properties.hcf.monit.port: '((MONIT_PORT))'
    properties.metron_agent.zone: '"((METRON_AGENT_ZONE))"'
    properties.nats.user: '"((NATS_USER))"'
    properties.nats.password: '"((NATS_PASSWORD))"'
    properties.uaa.admin.client_secret: '"((UAA_ADMIN_CLIENT_SECRET))"'
    properties.uaa.batch.username: '"((UAA_BATCH_USERNAME))"'
    properties.uaa.batch.password: '"((UAA_BATCH_PASSWORD))"'
    properties.uaa.cc.client_secret: '"((UAA_CC_CLIENT_SECRET))"'
    properties.uaa.clients.cf-usb.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.uaa.clients.app-direct.secret: '"((UAA_CLIENTS_APP_DIRECT_SECRET))"'
    properties.uaa.clients.cc_routing.secret: '"((UAA_CC_ROUTING_SECRET))"'
    properties.uaa.clients.cc-service-dashboards.secret: '"((UAA_CLIENTS_CC_SERVICE_SECRET))"'
    properties.uaa.clients.developer_console.secret: '"((UAA_CLIENTS_DEVELOPER_CONSOLE_SECRET))"'
    properties.uaa.clients.notifications.secret: '"((UAA_CLIENTS_NOTIFICATIONS_SECRET))"'
    properties.uaa.clients.login.secret: '"((UAA_CLIENTS_LOGIN_SECRET))"'
    properties.uaa.clients.login.redirect-uri: '"https://login.((DOMAIN))"'
    properties.uaa.clients.cc_routing.secret: '"((UAA_CLIENTS_CC_ROUTING_SECRET))"'
    properties.uaa.clients.doppler.secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
    properties.uaa.clients.cloud_controller.secret: "((UAA_CC_CLIENT_SECRET))"
    properties.uaa.clients.cloud_controller_username_lookup.secret: '"((UAA_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET))"'
    properties.uaa.clients.gorouter.secret: '"((UAA_CLIENTS_GOROUTER_SECRET))"'
    properties.uaa.clients.ssh-proxy.secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.uaa.clients.tcp_emitter.secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.uaa.clients.tcp_router.secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.uaa.scim.users: '["((CLUSTER_ADMIN_USERNAME))|((CLUSTER_ADMIN_PASSWORD))|((CLUSTER_ADMIN_AUTHORITIES))"]'
    properties.system_domain: '"((DOMAIN))"'
    properties.ssl.skip_cert_verify: '((SKIP_CERT_VERIFY))'
    properties.traffic_controller.zone: '"((TRAFFIC_CONTROLLER_ZONE))"'
    properties.cf-usb.broker.external_url: '"brokers.((DOMAIN))"'
    properties.cf-usb.broker.username: '"((CF_USB_USERNAME))"'
    properties.cf-usb.broker.password: '"((CF_USB_PASSWORD))"'
    properties.cf-usb.management.uaa.secret: '"((UAA_CLIENTS_CF_USB_SECRET))"'
    properties.diego.bbs.encryption_keys: '[{"label": "((BBS_ACTIVE_KEY_LABEL))", "passphrase": "((BBS_ACTIVE_KEY_PASSPHRASE))"}]'
    properties.diego.cc_uploader.cc.base_url: '"https://api.((DOMAIN))"'
    properties.diego.cc_uploader.cc.basic_auth_username: '"((INTERNAL_API_USER))"'
    properties.diego.cc_uploader.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.diego.cc_uploader.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.diego.cc_uploader.cc.staging_upload_user: '"((STAGING_UPLOAD_USER))"'
    properties.diego.nsync.cc.base_url: '"https://api.((DOMAIN))"'
    properties.diego.nsync.cc.basic_auth_username: '"((INTERNAL_API_USER))"'
    properties.diego.nsync.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.diego.nsync.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.diego.nsync.cc.staging_upload_user: '"((STAGING_UPLOAD_USER))"'
    properties.diego.route_emitter.nats.user: '"((NATS_USER))"'
    properties.diego.route_emitter.nats.password: '"((NATS_PASSWORD))"'
    properties.diego.ssh_proxy.uaa_token_url: '"https://uaa.((DOMAIN))/oauth/token"'
    properties.diego.ssh_proxy.uaa_secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.diego.stager.cc.base_url: '"https://api.((DOMAIN))"'
    properties.diego.stager.cc.basic_auth_username: '"((INTERNAL_API_USER))"'
    properties.diego.stager.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.diego.stager.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.diego.stager.cc.staging_upload_user: '"((STAGING_UPLOAD_USER))"'
    properties.diego.tps.cc.base_url: '"https://api.((DOMAIN))"'
    properties.diego.tps.cc.basic_auth_username: '"((INTERNAL_API_USER))"'
    properties.diego.tps.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.diego.tps.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.diego.tps.cc.staging_upload_user: '"((STAGING_UPLOAD_USER))"'
    properties.diego.bbs.active_key_label: '"((BBS_ACTIVE_KEY_LABEL))"'
    properties.diego.bbs.advertisement_base_hostname: '"((BBS_ADVERTISEMENT_BASE_HOSTNAME))"'
    properties.hm9000.url: '"https://hm9000.((DOMAIN))"'
    properties.uaa.url: '"https://uaa.((DOMAIN))"'
    properties.nats.machines: '["((NATS_HOST))"((#NATS_HA_HOST_1)), "((NATS_HA_HOST_1))"((/NATS_HA_HOST_1))((#NATS_HA_HOST_2)), "((NATS_HA_HOST_2))"((/NATS_HA_HOST_2))]'
    properties.etcd_metrics_server.nats.machines: '["((NATS_HOST))"((#NATS_HA_HOST_1)), "((NATS_HA_HOST_1))"((/NATS_HA_HOST_1))((#NATS_HA_HOST_2)), "((NATS_HA_HOST_2))"((/NATS_HA_HOST_2))]'
    properties.etcd_metrics_server.machines: '["((NATS_HOST))"((#NATS_HA_HOST_1)), "((NATS_HA_HOST_1))"((/NATS_HA_HOST_1))((#NATS_HA_HOST_2)), "((NATS_HA_HOST_2))"((/NATS_HA_HOST_2))]'
    properties.etcd.advertise_urls_dns_suffix: '["((DNS_SUFFIX))"]'
    properties.etcd.machines: '["((DIEGO_DATABASE_HOST))"((#DIEGO_DATABASE_HA_HOST_1)), "((DIEGO_DATABASE_HA_HOST_1))"((/DIEGO_DATABASE_HA_HOST_1))((#DIEGO_DATABASE_HA_HOST_2)), "((DIEGO_DATABASE_HA_HOST_2))"((/DIEGO_DATABASE_HA_HOST_2))]'
    properties.loggregator.etcd.machines: '["((ETCD_HOST))"((#ETCD_HA_HOST_1)), "((ETCD_HA_HOST_1))"((/ETCD_HA_HOST_1))((#ETCD_HA_HOST_2)), "((ETCD_HA_HOST_2))"((/ETCD_HA_HOST_2))]'
    properties.router.servers.z1: '["((ROUTER_HOST))"]'
    properties.cc.internal_service_hostname: '"((API_HA_HOST))((^API_HA_HOST))((API_HOST))((/API_HA_HOST))"'
    properties.ccdb.address: '((MYSQL_PROXY_LB_HOST))'
    properties.uaadb.address: '((MYSQL_PROXY_LB_HOST))'
    properties.diego.auctioneer.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.bbs.auctioneer.api_url: 'http://((DIEGO_BRAIN_HOST)):9016'
    properties.diego.bbs.etcd.machines: '["((DIEGO_DATABASE_HOST))"((#DIEGO_DATABASE_HA_HOST_1)), "((DIEGO_DATABASE_HA_HOST_1))"((/DIEGO_DATABASE_HA_HOST_1))((#DIEGO_DATABASE_HA_HOST_2)), "((DIEGO_DATABASE_HA_HOST_2))"((/DIEGO_DATABASE_HA_HOST_2))]'
    properties.diego.converger.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.nsync.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.rep.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.route_emitter.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.ssh_proxy.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.stager.bbs.api_location: '((DIEGO_DATABASE_HOST)):8889'
    properties.diego.tps.bbs.api_location: '"((DIEGO_DATABASE_HOST)):8889"'
    properties.diego.route_emitter.nats.machines: '["((NATS_HOST))"((#NATS_HA_HOST_1)), "((NATS_HA_HOST_1))"((/NATS_HA_HOST_1))((#NATS_HA_HOST_2)), "((NATS_HA_HOST_2))"((/NATS_HA_HOST_2))]'
    properties.cc.diego.nsync_url: "http://((DIEGO_CC_BRIDGE_HOST)):8787"
    properties.cc.diego.stager_url: "http://((DIEGO_CC_BRIDGE_HOST)):8888"
    properties.cc.diego.tps_url: "http://((DIEGO_CC_BRIDGE_HOST)):1518"
    properties.diego.nsync.file_server_url: "http://((DIEGO_ACCESS_HOST)):8080"
    properties.diego.stager.staging_task_callback_url: "http://((DIEGO_CC_BRIDGE_HOST)):8888"
    properties.diego.stager.cc.internal_service_hostname: '"((API_HA_HOST))((^API_HA_HOST))((API_HOST))((/API_HA_HOST))"'
    properties.diego.stager.file_server_url: "http://((DIEGO_ACCESS_HOST)):8080"
    properties.diego.stager.cc_uploader_url: "http://((DIEGO_CC_BRIDGE_HOST)):9090"
    properties.dev_services.mongodb.admin_password: "((DEVSVC_MONGODB_ADMIN_PASSWORD))"
    properties.dev_services.postgres.admin_password: "((DEVSVC_POSTGRES_ADMIN_PASSWORD))"
    properties.dev_services.mysql.admin_password: "((DEVSVC_MYSQL_ADMIN_PASSWORD))"
    # TODO: configure this once we have the diego docker cache deployed
    # diego.stager.docker_registry_address: "docker-registry.service.cf.internal:8080"
    properties.diego.tps.cc.internal_service_hostname: '"((API_HA_HOST))((^API_HA_HOST))((API_HOST))((/API_HA_HOST))"'
    properties.diego.tps.traffic_controller_url: "ws://((LOGGREGATOR_HOST)):8081"
    properties.diego.ssh_proxy.cc.internal_service_hostname: '"((API_HA_HOST))((^API_HA_HOST))((API_HOST))((/API_HA_HOST))"'
    # Setting certificate values
    properties.ha_proxy.ssl_pem: '"((CERTS_ROOT_CHAIN_PEM))"'
    properties.uaa.jwt.signing_key: '"((JWT_SIGNING_PEM))"'
    properties.uaa.jwt.verification_key: '"((JWT_SIGNING_PUB))"'
    properties.uaa.sslCertificate: '"((UAA_CERTIFICATE))"'
    properties.uaa.sslPrivateKey: '"((UAA_PRIVATE_KEY))"'
    properties.cf-usb.management.public_key: '"((JWT_SIGNING_PUB))"'
    # Diego certificates
    properties.etcd.peer_key: '"((ETCD_PEER_KEY))"'
    properties.etcd.peer_cert: '"((ETCD_PEER_CRT))"'
    properties.etcd.peer_ca_cert: '"((ETCD_PEER_CA_CRT))"'
    properties.etcd.server_key: '"((ETCD_SERVER_KEY))"'
    properties.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.diego.bbs.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.etcd.server_cert: '"((ETCD_SERVER_CRT))"'
    properties.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.diego.bbs.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.etcd.ca_cert: '"((ETCD_CA_CRT))"'
    properties.diego.bbs.etcd.ca_cert: '"((ETCD_CA_CRT))"'
    properties.diego.bbs.server_key: '"((BBS_SERVER_KEY))"'
    properties.diego.tps.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.stager.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.ssh_proxy.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.route_emitter.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.rep.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.nsync.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.converger.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.auctioneer.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.bbs.server_cert: '"((BBS_SERVER_CRT))"'
    properties.diego.tps.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.stager.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.ssh_proxy.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.route_emitter.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.rep.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.nsync.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.converger.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.auctioneer.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.tps.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.stager.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.ssh_proxy.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.route_emitter.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.rep.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.nsync.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.converger.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.bbs.ca_cert: '"((BBS_CA_CRT))"'
    properties.diego.auctioneer.bbs.ca_cert: '"((BBS_CA_CRT))"'
    # The "host key" mentioned here is actually an RSA private key file, with no passphrase
    properties.diego.ssh_proxy.host_key: '"((SSH_KEY))"'
    properties.diego.rep.trusted_certs: '"((TRUSTED_CERTS))"'
    properties.diego.ssl.skip_cert_verify: '"((SKIP_CERT_VERIFY))"'
    properties.app_ssh.host_key_fingerprint: '"((APP_SSH_HOST_KEY_FINGERPRINT))"'
    properties.router.ssl_cert: '"((ROUTER_SSL_CERT))"'
    properties.router.ssl_key: '"((ROUTER_SSL_KEY))"'
    properties.blobstore.tls.cert: '"((BLOBSTORE_TLS_CERT))"'
    properties.blobstore.tls.key: '"((BLOBSTORE_TLS_KEY))"'
    properties.smoke_tests.api: '"api.((DOMAIN))"'
    properties.smoke_tests.apps_domain: '["((DOMAIN))"]'
    properties.smoke_tests.user: '"((CLUSTER_ADMIN_USERNAME))"'
    properties.smoke_tests.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.hcf_set_proxy.api_proxy: '"((HTTPS_PROXY))"'
    properties.hcf_set_proxy.staging_http_proxy: '"((HTTP_PROXY))"'
    properties.hcf_set_proxy.staging_https_proxy: '"((HTTPS_PROXY))"'
    properties.hcf_set_proxy.staging_no_proxy: '"((NO_PROXY))"'
    properties.hcf_set_proxy.running_http_proxy: '"((HTTP_PROXY))"'
    properties.hcf_set_proxy.running_https_proxy: '"((HTTPS_PROXY))"'
    properties.hcf_set_proxy.running_no_proxy: '"((NO_PROXY))"'
    # These settings must remain in the role manifest until they're available
    # in the upstream specs; even though they're also defined in the opinions file
    properties.doppler.tweak_locked_memory: false
    properties.traffic_controller.tweak_locked_memory: false
    properties.syslog_drain_binder.tweak_locked_memory: false
    properties.blobstore.admin_users:  '[{"username": "((BLOBSTORE_USERNAME))", "password": "((BLOBSTORE_PASSWORD))"}]'
    properties.blobstore.port: 80
    properties.blobstore.secure_link.secret: '"((BLOBSTORE_SECURE_LINK))"'
    properties.blobstore.tls.cert: '"((BLOBSTORE_TLS_CERT))"'
    properties.blobstore.tls.port: 443
    properties.blobstore.tls.private_key: '"((BLOBSTORE_TLS_KEY))"'
    properties.garden.http_proxy: '"((HTTP_PROXY))"'
    properties.garden.https_proxy: '"((HTTPS_PROXY))"'
    properties.garden.no_proxy: '"((NO_PROXY))"'
    properties.cf_mysql.mysql.advertise_host: '((#UCP_COMPONENT_NAME))"((UCP_COMPONENT_NAME))"((/UCP_COMPONENT_NAME))((^UCP_COMPONENT_NAME))nil((/UCP_COMPONENT_NAME))'
    properties.garden.dns_servers: '["((GARDEN_LINUX_DNS_SERVER))"]'
