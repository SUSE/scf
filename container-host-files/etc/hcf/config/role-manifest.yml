---
roles:
- name: nats
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: nats
    release_name: nats
  - name: nats_stream_forwarder
    release_name: nats
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: metron_agent
  - name: nats
  - name: nats_stream_forwarder
  tags: ['clustered']
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 4
    exposed-ports:
    - name: nats
      protocol: TCP
      external: 4222
      internal: 4222
      public: false
    - name: nats-routes
      protocol: TCP
      external: 4223
      internal: 4223
      public: false
- name: consul
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  - scripts/chown_vcap_store.sh
  - scripts/patches/fix_consul_server_name.sh
  - scripts/patches/fix_consul_pre_start.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: consul_agent
    release_name: consul
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes:
    - path: /var/vcap/store
      tag: consul-data
      size: 1
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
    - name: server-rpc
      protocol: TCP
      external: 8300
      internal: 8300
      public: false
    - name: serf-lan-tcp
      protocol: TCP
      external: 8301
      internal: 8301
      public: false
    - name: serf-lan-udp
      protocol: UDP
      external: 8301
      internal: 8301
      public: false
    - name: serf-wan-tcp
      protocol: TCP
      external: 8302
      internal: 8302
      public: false
    - name: serf-wan-udp
      protocol: UDP
      external: 8302
      internal: 8302
      public: false
    - name: cli-rpc
      protocol: TCP
      external: 8400
      internal: 8400
      public: false
    - name: http-api
      protocol: TCP
      external: 8500
      internal: 8500
      public: false
  configuration:
    templates:
      properties.consul.agent.mode: '"server"'
- name: mysql
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/create_mysql_data_tmp.sh
  - scripts/chown_vcap_store.sh
  - scripts/patches/fix_mysql_advertise_ip.sh
  - scripts/patches/fix_mysql_setup_syslog_forwarder.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/enable_mysql_galera_bootstrap.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: mysql
    release_name: cf-mysql
  processes:
  - name: mariadb_ctrl
  - name: galera-healthcheck
  - name: gra-log-purger-executable
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes:
    - path: /var/vcap/store
      tag: mysql-data
      size: 2
    shared-volumes: []
    memory: 3072
    virtual-cpus: 2
    exposed-ports:
    - name: mysql
      protocol: TCP
      external: 3306
      internal: 3306
      public: false
    - name: galera-tcp
      protocol: TCP
      external: 4567
      internal: 4567
      public: false
    - name: galera-udp
      protocol: UDP
      external: 4567
      internal: 4567
      public: false
    - name: galera-ist
      protocol: TCP
      external: 4568
      internal: 4568
      public: false
    - name: healthcheck
      protocol: TCP
      external: 9200
      internal: 9200
      public: false
    - name: xtrabackup
      protocol: TCP
      external: 4444
      internal: 4444
      public: false
    healthcheck:
      readiness:
        url: http://container-ip:9200/
  configuration:
    templates:
      properties.cf_mysql.external_host: ((DOMAIN))
      properties.cf_mysql.mysql.admin_password: ((MYSQL_ADMIN_PASSWORD))
      properties.cf_mysql.mysql.cluster_health.password: ((MYSQL_CLUSTER_HEALTH_PASSWORD))
      properties.cf_mysql.mysql.cluster_ips: ((MYSQL_HCF_CLUSTER_IPS))((#MYSQL_HCF_CLUSTER_CONFIG_REVISION))((/MYSQL_HCF_CLUSTER_CONFIG_REVISION))
      properties.cf_mysql.mysql.galera_healthcheck.db_password: ((MYSQL_ADMIN_PASSWORD))
      properties.cf_mysql.mysql.galera_healthcheck.endpoint_password: ((MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD))
      properties.cf_mysql.proxy.api_password: ((MYSQL_PROXY_ADMIN_PASSWORD))
      properties.cf_mysql.proxy.proxy_ips: '["mysql-proxy.((HCP_SERVICE_DOMAIN_SUFFIX))"]'
- name: mysql-proxy
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  scripts:
  - scripts/patches/fix_mysqlproxy_setup_syslog_forwarder.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: proxy
    release_name: cf-mysql
  processes:
  - name: cf-mysql-route-registrar
  - name: switchboard
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
    - name: mysql-proxy
      protocol: TCP
      external: 3306
      internal: 3306
      public: false
    - name: api
      protocol: TCP
      external: 80
      internal: 80
      public: false
    - name: healthcheck
      protocol: TCP
      external: 1936
      internal: 1936
      public: false
    healthcheck:
      readiness:
        url: http://container-ip:1936/
  configuration:
    templates:
      properties.cf_mysql.external_host: ((DOMAIN))
      properties.cf_mysql.mysql.admin_password: ((MYSQL_ADMIN_PASSWORD))
      properties.cf_mysql.mysql.cluster_ips: ((MYSQL_HCF_CLUSTER_IPS))((#MYSQL_HCF_CLUSTER_CONFIG_REVISION))((/MYSQL_HCF_CLUSTER_CONFIG_REVISION))
      properties.cf_mysql.mysql.galera_healthcheck.endpoint_password: ((MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD))
      properties.cf_mysql.proxy.api_password: ((MYSQL_PROXY_ADMIN_PASSWORD))
      properties.cf_mysql.proxy.proxy_ips: '["mysql-proxy.((HCP_SERVICE_DOMAIN_SUFFIX))"]'
- name: diego-database
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/chown_vcap_store.sh
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: rep-certstrap
    release_name: hcf
  - name: bbs
    release_name: diego
  - name: consul_agent
    release_name: consul
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: bbs
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes:
    - path: /var/vcap/store
      tag: diego-database-data
      size: 2
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
    - name: cell-bbs-api
      protocol: TCP
      external: 8889
      internal: 8889
      public: false
    - name: cell-bbs-dbg
      protocol: TCP
      external: 17017
      internal: 17017
      public: false
    healthcheck:
      readiness:
        command:
          - /var/vcap/jobs/global-properties/bin/readiness/diego-database
  configuration:
    templates:
      properties.diego.bbs.advertisement_base_hostname: ((KUBE_POD_SERVICE))((^KUBE_POD_SERVICE))diego-database-pod((/KUBE_POD_SERVICE))
- name: router
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  - scripts/authorize_internal_ca.sh
  - scripts/fetch_uaa_verification_key.sh
  scripts:
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: gorouter
    release_name: routing
  - name: consul_agent
    release_name: consul
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: gorouter
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 4
    exposed-ports:
    - name: router
      protocol: TCP
      external: 80
      internal: 80
      public: true
    - name: router2
      protocol: TCP
      external: 443
      internal: 443
      public: true
    - name: router3
      protocol: TCP
      external: 4443
      internal: 443
      public: true
    healthcheck:
      readiness:
        url: http://container-ip:8080/health
- name: tcp-router
  # XXX haproxy might be able to co-locate with one of the others
  # But this is a _different_ HAProxy from the one in the CF release.
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/patches/fix_haproxy_fd_requirements.sh
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: tcp_router
    release_name: routing
  - name: consul_agent
    release_name: consul
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: tcp_router
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
    - name: healthcheck
      protocol: TCP
      external: 2341
      internal: 80
      public: true
    - name: tcp-routing
      protocol: TCP
      external: 20000-20008
      internal: 20000-20008
      public: true
    healthcheck:
      readiness:
        url: http://container-ip/health
  configuration:
    templates:
      properties.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
- name: routing-api
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  - scripts/authorize_internal_ca.sh
  - scripts/fetch_uaa_verification_key.sh
  scripts:
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: consul_agent
    release_name: consul
  - name: metron_agent
    release_name: loggregator
  - name: routing-api
    release_name: routing
  - name: tcp_emitter
    # TCP-emitter can be on a different role, it's just convenient here
    release_name: routing
  processes:
  - name: consul_agent
  - name: metron_agent
  - name: routing-api
  - name: tcp_emitter
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 512
    virtual-cpus: 4
    exposed-ports:
    - name: routing-api
      protocol: TCP
      external: 3000
      internal: 3000
      public: false
    # All the routes exposed require UAA auth, so we stick with the TCP healthcheck
  configuration:
    templates:
      properties.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
- name: api
  environment_scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/fetch_uaa_verification_key.sh
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/nginx_log_level.sh
  scripts:
  - scripts/patches/fix_nodejs_buildpack.sh
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/use_routing_api_private_endpoint.sh
  - scripts/patches/cloud_controller_migration_transactional.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: cloud_controller_ng
    release_name: capi
  - name: consul_agent
    release_name: consul
  - name: metron_agent
    release_name: loggregator
  - name: route_registrar
    release_name: routing
  - name: go-buildpack
    release_name: go-buildpack
  - name: binary-buildpack
    release_name: binary-buildpack
  - name: nodejs-buildpack
    release_name: nodejs-buildpack
  - name: ruby-buildpack
    release_name: ruby-buildpack
  - name: php-buildpack
    release_name: php-buildpack
  - name: python-buildpack
    release_name: python-buildpack
  - name: staticfile-buildpack
    release_name: staticfile-buildpack
  - name: java-buildpack
    release_name: java-buildpack
  processes:
  - name: cloud_controller_ng
  - name: cloud_controller_worker_local_1
  - name: cloud_controller_worker_local_2
  - name: route_registrar
  - name: metron_agent
  - name: consul_agent
  - name: nginx_cc
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 2560
    virtual-cpus: 4
    exposed-ports:
    - name: api
      protocol: TCP
      external: 9022
      internal: 9022
      public: false
    - name: statsd
      protocol: TCP
      external: 8125
      internal: 8125
      public: false
    healthcheck:
      liveness:
        timeout: 3000 # pre-start migration can take forever
        initial_delay: 3600
        period: 60
      readiness:
        url: http://container-ip:9022/v2/info
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"api", "port":9022, "tags":{"component":"CloudController"}, "uris":["api.((DOMAIN))"], "registration_interval":"10s"}]'
- name: api-worker
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  scripts:
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: cloud_controller_worker
    release_name: capi
  - name: consul_agent
    release_name: consul
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: cloud_controller_worker_1
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 512
    virtual-cpus: 2
    exposed-ports: []
- name: blobstore
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/chown_vcap_store.sh
  - scripts/forward_logfiles.sh
  - scripts/patches/fix_chown_blobstore_packages.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: blobstore
    release_name: capi
  - name: route_registrar
    release_name: routing
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: blobstore_nginx
  - name: blobstore_url_signer
  - name: route_registrar
  - name: metron_agent
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes:
    - path: /var/vcap/store
      tag: blobstore-data
      size: 5
    shared-volumes: []
    memory: 1536
    virtual-cpus: 2
    exposed-ports:
    - name: blobstore-ext
      protocol: TCP
      external: 8080
      internal: 8080
      public: false
    - name: blobstore
      protocol: TCP
      external: 4443
      internal: 4443
      public: false
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"blobstore", "port":8080, "tags":{"component":"blobstore"}, "uris":["blobstore.((DOMAIN))"], "registration_interval":"10s"}]'
- name: clock-global
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  scripts:
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: cloud_controller_clock
    release_name: capi
  - name: consul_agent
    release_name: consul
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: cloud_controller_clock
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 512
    virtual-cpus: 2
    exposed-ports: []
- name: doppler
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: doppler
    release_name: loggregator
  - name: syslog_drain_binder
    release_name: loggregator
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: doppler
  - name: metron_agent
  - name: syslog_drain_binder
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
    - name: dropsonde-udp
      protocol: UDP
      external: 3457
      internal: 3457
      public: false
    - name: dropsonde-tcp
      protocol: TCP
      external: 3458
      internal: 3458
      public: false
    - name: doppler-tls
      protocol: TCP
      external: 3459
      internal: 3459
      public: false
    - name: doppler-ws
      protocol: TCP
      external: 8081
      internal: 8081
      public: false
    - name: doppler-grpc
      protocol: TCP
      external: 8082
      internal: 8082
      public: false
- name: etcd
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/chown_vcap_store.sh
  - scripts/patches/fix_etcd_bootstrap.sh
  - scripts/patches/fix_etcd_cluster_hostnames.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: patch-properties
    release_name: hcf
  - name: etcd
    release_name: etcd
  - name: etcd_metrics_server
    release_name: etcd
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: etcd_metrics_server
  - name: etcd
  - name: metron_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes:
    - path: /var/vcap/store
      size: 2
      tag: cf-etcd-data
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
    - name: etcd-client
      protocol: TCP
      external: 4001
      internal: 4001
      public: false
    - name: etcd-peer
      protocol: TCP
      external: 7001
      internal: 7001
      public: false
    healthcheck:
      readiness:
        command:
          - /var/vcap/jobs/global-properties/bin/readiness/etcd
  configuration:
    templates:
      # On k8s, we want the FQDN: etcd-pod.hcf.svc.cluster.local
      properties.etcd.advertise_urls_dns_suffix: '"((#KUBERNETES_NAMESPACE))etcd-pod.((/KUBERNETES_NAMESPACE))((HCP_SERVICE_DOMAIN_SUFFIX))"'
      # The default of null in the bosh release does not seem to
      # define the property properly. Setting it here does define the
      # property, with a value of null. Note, placement in the
      # opinions is blocked by the configuration validator,
      # complaining about it 'matching the default'. So, here it is.
      properties.etcd.cluster: null
      properties.etcd_metrics_server.etcd.dns_suffix: '"((#KUBERNETES_NAMESPACE))etcd-pod((/KUBERNETES_NAMESPACE))((^KUBERNETES_NAMESPACE))((HCP_SERVICE_DOMAIN_SUFFIX))((/KUBERNETES_NAMESPACE))"'
- name: loggregator
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: loggregator_trafficcontroller
    release_name: loggregator
  - name: metron_agent
    release_name: loggregator
  - name: route_registrar
    release_name: routing
  processes:
  - name: loggregator_trafficcontroller
  - name: metron_agent
  - name: route_registrar
  configuration:
    templates:
      properties.route_registrar.routes: '[{"name":"loggregator", "port":8081, "uris":["doppler.((DOMAIN))"], "registration_interval":"10s"}, {"name":"loggregator_trafficcontroller", "port":8080, "uris":["loggregator.((DOMAIN))"], "registration_interval":"10s"}]'
  run:
    scaling:
      min: 1
      max: 65535
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
    - name: dropsonde
      protocol: TCP
      external: 8081
      internal: 8081
      public: false
    - name: grpc
      protocol: TCP
      external: 8082
      internal: 8082
      public: false
    healthcheck:
      readiness:
        url: http://container-ip:8081/set-cookie
- name: diego-brain
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: consul_agent
    release_name: consul
  - name: rep-certstrap
    release_name: hcf
  - name: auctioneer
    release_name: diego
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: auctioneer
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 4
    exposed-ports:
    - name: diego-auction
      protocol: TCP
      external: 9016
      internal: 9016
      public: false
- name: diego-cc-bridge
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: stager
    release_name: capi
  - name: nsync
    release_name: capi
  - name: tps
    release_name: capi
  - name: cc_uploader
    release_name: capi
  - name: consul_agent
    release_name: consul
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: cc_uploader
  - name: stager
  - name: tps_listener
  - name: tps_watcher
  - name: nsync_listener
  - name: nsync_bulker
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 512
    virtual-cpus: 4
    exposed-ports:
    - name: nsync-listen
      protocol: TCP
      external: 8787
      internal: 8787
      public: false
    - name: nsync-dbg-l
      protocol: TCP
      external: 17006
      internal: 17006
      public: false
    - name: nsync-dbg-b
      protocol: TCP
      external: 17007
      internal: 17007
      public: false
    - name: stager-dbg
      protocol: TCP
      external: 17011
      internal: 17011
      public: false
    - name: stager-listen
      protocol: TCP
      external: 8888
      internal: 8888
      public: false
    - name: tps-listen
      protocol: TCP
      external: 1518
      internal: 1518
      public: false
    - name: tps-dbg-l
      protocol: TCP
      external: 17014
      internal: 17014
      public: false
    - name: tps-dbg-w
      protocol: TCP
      external: 17015
      internal: 17015
      public: false
    - name: cc-up-listen
      protocol: TCP
      external: 9090
      internal: 9090
      public: false
    - name: cc-up-dbg
      protocol: TCP
      external: 17018
      internal: 17018
      public: false
    healthcheck:
      readiness:
        url: http://container-ip:1518/v1/bulk_actual_lrp_status?guids=1
- name: diego-route-emitter
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: route_emitter
    release_name: diego
  - name: consul_agent
    release_name: consul
  - name: metron_agent
    release_name: loggregator
  processes:
  - name: route_emitter
  - name: metron_agent
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 1
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports: []
- name: diego-access
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/authorize_internal_ca.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: ssh_proxy
    release_name: diego
  - name: consul_agent
    release_name: consul
  - name: metron_agent
    release_name: loggregator
  - name: file_server
    release_name: diego
  processes:
  - name: file_server
  - name: metron_agent
  - name: ssh_proxy
  - name: consul_agent
  run:
    scaling:
      min: 1
      max: 3
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 2
    exposed-ports:
    - name: diego-ssh
      protocol: TCP
      external: 2222
      internal: 2222
      public: true
    - name: diego-files
      protocol: TCP
      external: 8080
      internal: 8080
      public: false
    healthcheck:
      readiness:
        url: http://container-ip:8080/v1/static/
- name: diego-cell
  environment_scripts:
  - scripts/configure-HA-hosts.sh
  - scripts/set-diego-cell-memory-limits.sh
  - scripts/inverted_skip_ssl.sh
  - scripts/consul_agent_log_level.sh
  - scripts/go_log_level.sh
  scripts:
  - scripts/patches/fix_consul_pre_start.sh
  - scripts/authorize_internal_ca.sh
  - scripts/configure-nested-net.sh
  - scripts/cleanup-garden-graph.sh
  - scripts/forward_logfiles.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: rep
    release_name: diego
  - name: consul_agent
    release_name: consul
  - name: garden
    release_name: garden-runc
  - name: cflinuxfs2-rootfs-setup
    release_name: cflinuxfs2-rootfs
  - name: opensuse42-rootfs-setup
    release_name: cf-opensuse42
  - name: metron_agent
    release_name: loggregator
  - name: grootfs
    release_name: grootfs
  processes:
  - name: metron_agent
  - name: consul_agent
  - name: rep
  - name: garden
  run:
    scaling:
      min: 1
      max: 254
    capabilities: [ALL]
    persistent-volumes:
    - path: /var/vcap/data/garden
      tag: garden-graph
      size: 5
    shared-volumes: []
    memory: 4096
    virtual-cpus: 4
    exposed-ports:
    - name: rep-server
      protocol: TCP
      external: 1801
      internal: 1801
      public: false
    healthcheck:
      readiness:
        url: http://container-ip:1800/ping # rep HTTP server
  configuration:
    templates:
      properties.diego.rep.advertise_domain: ((KUBE_POD_SERVICE))((^KUBE_POD_SERVICE))diego-cell-pod((/KUBE_POD_SERVICE))
- name: acceptance-tests-brain
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: acceptance-tests-brain
    release_name: hcf
  run:
    scaling:
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: acceptance-tests
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  - scripts/cf_acceptance_tests_suites.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: acceptance-tests
    release_name: hcf
  run:
    scaling:
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
  configuration:
    templates:
      hcf.cats-suites: '"((CATS_SUITES))"'
- name: smoke-tests
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: smoke-tests
    release_name: hcf
  run:
    scaling:
      min: 0
      max: 1
    flight-stage: manual
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 2
    exposed-ports: []
- name: post-deployment-setup
  type: bosh-task
  scripts:
  - scripts/authorize_internal_ca.sh
  jobs:
  - name: global-properties # needs to be first so images use it for processing monit templates
    release_name: hcf
  - name: uaa-create-user
    release_name: hcf
  - name: cf-set-proxy
    release_name: hcf
  processes: []
  run:
    scaling:
      min: 1
      max: 1
    flight-stage: post-flight
    capabilities: []
    persistent-volumes: []
    shared-volumes: []
    memory: 256
    virtual-cpus: 1
    exposed-ports: []
  configuration:
    templates:
      properties.scf.uaa.root-zone.url: https://((UAA_HOST)):((UAA_PORT))
- name: dev-dns
  type: docker
  tags: [dev-only]
  run:
    env: []
    scaling:
      min: 1
      max: 1
    capabilities: [NET_ADMIN]
    persistent-volumes: []
    shared-volumes: []
    memory: 1024
    virtual-cpus: 1
    exposed-ports:
    - name: dev-dns
      protocol: UDP
      external: 53
      internal: 8600
      public: true
    - name: dev-dns-tcp
      protocol: TCP
      external: 53
      internal: 8600
      public: true
configuration:
  variables:
  - name: ALLOWED_CORS_DOMAINS
    default: []
    description: List of domains (including scheme) from which Cross-Origin requests will be accepted, a * can be used as a wildcard for any part of a domain.
    required: true
  - name: ALLOW_APP_SSH_ACCESS
    default: true
    description: Allow users to change the value of the app-level allow_ssh attribute.
    required: true
  - name: APP_SSH_KEY
    secret: true
    generator:
      id: app_ssh
      type: SSH
      value_type: private_key
      key_length: 4096
    description: PEM encoded RSA private key used to identify host.
    required: true
  - name: APP_SSH_KEY_FINGERPRINT
    secret: true
    generator:
      id: app_ssh
      type: SSH
      value_type: fingerprint
    description: MD5 fingerprint of the host key of the SSH proxy that brokers connections to application instances.
    required: true
  - name: APP_TOKEN_UPLOAD_GRACE_PERIOD
    default: 1200
    description: Extra token expiry time while uploading big apps, in seconds.
    required: true
  - name: AUCTIONEER_REP_CERT
    secret: true
    generator:
      id: auctioneer_rep_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
    required: true
  - name: AUCTIONEER_REP_KEY
    secret: true
    generator:
      id: auctioneer_rep_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key
    required: true
  - name: AUCTIONEER_SERVER_CERT
    secret: true
    generator:
      id: auctioneer_server_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded server certificate
    required: true
  - name: AUCTIONEER_SERVER_KEY
    secret: true
    generator:
      id: auctioneer_server_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded server key
    required: true
  - name: BBS_ACTIVE_KEY_PASSPHRASE
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to the diego BBS database.
    required: true
  - name: BBS_AUCTIONEER_CERT
    secret: true
    generator:
      id: bbs_auctioneer_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
    required: true
  - name: BBS_AUCTIONEER_KEY
    secret: true
    generator:
      id: bbs_auctioneer_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key
    required: true
  - name: BBS_CLIENT_CRT
    secret: true
    generator:
      id: bbs_client_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded client certificate.
    required: true
  - name: BBS_CLIENT_KEY
    secret: true
    generator:
      id: bbs_client_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded client key.
    required: true
  - name: BBS_REP_CERT
    secret: true
    generator:
      id: bbs_rep_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
    required: true
  - name: BBS_REP_KEY
    secret: true
    generator:
      id: bbs_rep_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key
    required: true
  - name: BBS_SERVER_CRT
    secret: true
    generator:
      id: bbs_server_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded client certificate.
    required: true
  - name: BBS_SERVER_KEY
    secret: true
    generator:
      id: bbs_server_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded client key.
    required: true
  - name: BLOBSTORE_ACCESS_RULES
    default: allow 10.0.0.0/8; allow 172.16.0.0/12; allow 192.168.0.0/16;
    description: List of allow / deny rules for the blobstore internal server. Will be followed by 'deny all'. Each entry must be follow by a semicolon.
    required: true
  - name: BLOBSTORE_MAX_UPLOAD_SIZE
    default: 5000
    description: Maximal allowed file size for upload to blobstore, in megabytes.
    required: true
  - name: BLOBSTORE_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The basic auth password that Cloud Controller uses to connect to the blobstore server. Auto-generated if not provided. Passwords must be alphanumeric (URL-safe).
    required: true
  - name: BLOBSTORE_SECURE_LINK
    secret: true
    immutable: true
    generator:
      type: Password
    description: The secret used for signing URLs between Cloud Controller and blobstore.
    required: true
  - name: BLOBSTORE_TLS_CERT
    secret: true
    generator:
      id: blobstore_cert
      type: Certificate
      value_type: certificate
      key_length: 4096
      subject_alt_names:
      - parameter: DOMAIN
        wildcard: false
      - parameter: DOMAIN
        wildcard: true
    description: The PEM-encoded certificate (optionally as a certificate chain) for serving blobs over TLS/SSL.
    required: true
  - name: BLOBSTORE_TLS_KEY
    secret: true
    generator:
      id: blobstore_cert
      type: Certificate
      value_type: private_key
    description: The PEM-encoded private key for signing TLS/SSL traffic.
    required: true
  - name: BULK_API_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for the bulk api.
    required: true
  - name: CCDB_ROLE_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to the Cloud Controller database.
    required: true
  - name: CC_SERVER_CRT
    secret: true
    generator:
      id: cc_mutual_cert
      type: Certificate
      value_type: certificate
      key_length: 4096
      subject_alt_names:
      - parameter: DOMAIN
        wildcard: false
      - parameter: DOMAIN
        wildcard: true
    description: The PEM-encoded certificate for internal cloud controller traffic.
    required: true
  - name: CC_SERVER_KEY
    secret: true
    generator:
      id: cc_mutual_cert
      type: Certificate
      value_type: private_key
    description: The PEM-encoded private key for internal cloud controller traffic.
    required: true
  - name: CDN_URI
    default: "''"
    description: URI for a CDN to use for buildpack downloads.
    required: true
  - name: CLUSTER_ADMIN_AUTHORITIES
    default: scim.write,scim.read,openid,cloud_controller.admin,clients.read,clients.write,doppler.firehose,routing.router_groups.read,routing.router_groups.write
    description: The Oauth2 authorities available to the cluster administrator.
    required: true
  - name: CLUSTER_ADMIN_PASSWORD
    secret: true
    immutable: true
    description: The password for the cluster administrator.
    required: true
  - name: CLUSTER_BUILD
    default: 1.0.0
    description: "'build' attribute in the /v2/info endpoint"
    required: true
  - name: CLUSTER_DESCRIPTION
    default: SUSE Cloud Foundry
    description: "'description' attribute in the /v2/info endpoint"
    required: true
  - name: CLUSTER_NAME
    default: SCF
    description: "'name' attribute in the /v2/info endpoint"
    required: true
  - name: CLUSTER_VERSION
    default: 2
    description: "'version' attribute in the /v2/info endpoint"
    required: true
  - name: CONSUL_AGENT_CERT
    secret: true
    generator:
      id: consul_agent_cert
      type: Certificate
      value_type: certificate
      key_length: 4096
    description: PEM-encoded agent certificate.
    required: true
  - name: CONSUL_AGENT_KEY
    secret: true
    generator:
      id: consul_agent_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded client key.
    required: true
  - name: CONSUL_ENCRYPTION_KEYS
    secret: true
    immutable: true
    generator:
      type: Password
    description: 'Part of: A list of passphrases that will be converted into encryption
      keys, the first key in the list is the active one.'
    required: true
  - name: CONSUL_HCF_CLUSTER_CONFIG_REVISION
    default: 0
    description: An indicator to increment when changing the number of consul hosts in the cluster, to properly trigger component restarts.
    required: true
  - name: CONSUL_HCF_CLUSTER_IPS
    type: environment
  - name: CONSUL_LOG_LEVEL
    type: environment
  - name: CONSUL_SERVER_CERT
    secret: true
    generator:
      id: consul_server_cert
      type: Certificate
      value_type: certificate
      key_length: 4096
      subject_alt_names:
      - static: server.dc1.hcf
        wildcard: false
    description: PEM-encoded server certificate.
    required: true
  - name: CONSUL_SERVER_KEY
    secret: true
    generator:
      id: consul_server_cert
      type: Certificate
      value_type: private_key
    description: PEM-encoded server key.
    required: true
  - name: DB_ENCRYPTION_KEY
    secret: true
    immutable: true
    generator:
      type: Password
    description: key for encrypting sensitive values in the Cloud Controller database.
    required: true
  - name: DEFAULT_APP_DISK_IN_MB
    default: 1024
    description: The standard amount of disk (in MB) given to an application when not overriden by the user via manifest, command line, etc.
    required: true
  - name: DEFAULT_APP_MEMORY
    default: 1024
    description: The standard amount of memory (in MB) given to an application when not overriden by the user via manifest, command line, etc.
    required: true
  - name: DEFAULT_APP_SSH_ACCESS
    default: true
    description: If set apps pushed to spaces that allow SSH access will have SSH enabled by default.
    required: true
  - name: DEFAULT_STACK
    default: cflinuxfs2
    description: The default stack to use if no custom stack is specified by an app.
  - name: DIEGO_CELL_DISK_CAPACITY_MB
    default: auto
    description: The container disk capacity the cell should manage. If this capacity is larger than the actual disk quota of the cell component, over-provisioning will occur.
    required: true
  - name: DIEGO_CELL_MEMORY_CAPACITY_MB
    default: auto
    description: The memory capacity the cell should manage. If this capacity is larger than the actual memory of the cell component, over-provisioning will occur.
    required: true
  - name: DIEGO_CELL_NETWORK_MTU
    default: "1400"
    description: Maximum network transmission unit length in bytes for application containers.
    required: true
  - name: DIEGO_CELL_SUBNET
    default: 10.38.0.0/16
    description: A CIDR subnet mask specifying the range of subnets available to be assigned to containers.
    required: true
  - name: DISABLE_CUSTOM_BUILDPACKS
    default: false
    description: Disable external buildpacks. Only admin buildpacks and system buildpacks will be available to users.
    required: true
  - name: DNS_HEALTH_CHECK_HOST
    default: 127.0.0.1
    description: The host to ping for confirmation of DNS resolution.
    required: true
  - name: DOMAIN
    example: my-hcf-cluster.com
    required: true
    description: Base domain of the HCF cluster.
    internal: true
  - name: DONT_SKIP_CERT_VERIFY_INTERNAL
    type: environment
  - name: DOPPLER_CERT
    secret: true
    generator:
      id: doppler_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate.
    required: true
  - name: DOPPLER_KEY
    secret: true
    generator:
      id: doppler_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key.
    required: true
  - name: DROPLET_MAX_STAGED_STORED
    default: 5
    description: The number of versions of an application to keep. You will be able to rollback to this amount of versions.
    required: true
  - name: ETCD_CLIENT_CRT
    secret: true
    generator:
      id: etcd_client_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded client certificate.
    required: true
  - name: ETCD_CLIENT_KEY
    secret: true
    generator:
      id: etcd_client_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded client key.
    required: true
  - name: ETCD_HCF_CLUSTER_CONFIG_REVISION
    default: 0
    description: An indicator to increment when changing the number of etcd hosts in the cluster, to properly trigger component restarts.
    required: true
  - name: ETCD_HCF_CLUSTER_IPS
    type: environment
  - name: ETCD_PEER_CRT
    secret: true
    generator:
      id: etcd_peer_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded peer certificate.
    required: true
  - name: ETCD_PEER_KEY
    secret: true
    generator:
      id: etcd_peer_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded peer key.
    required: true
  - name: ETCD_SERVER_CRT
    secret: true
    generator:
      id: etcd_server_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded server certificate.
    required: true
  - name: ETCD_SERVER_KEY
    secret: true
    generator:
      id: etcd_server_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded server key.
    required: true
  - name: FORCE_FORWARDED_PROTO_AS_HTTPS
    default: false
    description: Enables setting the X-Forwarded-Proto header if SSL termination happened upstream and the header value was set incorrectly. When this property is set to true, the gorouter sets the header X-Forwarded-Proto to https. When this value set to false, the gorouter sets the header X-Forwarded-Proto to the protocol of the incoming request.
    required: true
  - name: GARDEN_DOCKER_REGISTRY
    default: registry-1.docker.io
    description: URL pointing to the Docker registry used for fetching Docker images. If not set, the Docker service default is used.
    required: true
  - name: GARDEN_INSECURE_DOCKER_REGISTRIES
    default: ''
    description: "Whitelist of IP:PORT tuples and CIDR subnet masks. Pulling from docker registries with self signed certificates will not be permitted if the registry's address is not listed here."
  - name: GARDEN_LINUX_DNS_SERVER
    default: ""
    description: 'Override DNS servers to be used in containers; defaults to the same as the host.'
  - name: GARDEN_ROOTFS_DRIVER
    default: overlay-xfs
    description: The filesystem driver to use (btrfs or overlay-xfs).
    required: true
  - name: GO_LOG_LEVEL
    type: environment
  - name: HCF_LOG_HOST
    internal: true
    description: The log destination to talk to. If not set it defaults to flightrecorder.
  - name: HCF_LOG_PORT
    internal: true
    description: The port used by rsyslog to talk to the log destination. If not set it defaults to the flightrecorder port. If that is not set we fall back to 514, the standard port of syslog.
  - name: HCF_LOG_PROTOCOL
    internal: true
    default: tcp
    description: The protocol used by rsyslog to talk to the log destination. The allowed values are tcp, and udp.
    required: true
  - name: HCP_AZ
    type: environment
  - name: HCP_CA_CERT
    internal: true
    immutable: true
    description: The CA certificate for UAA
    secret: true
  - name: HCP_COMPONENT_INDEX
    type: environment
  - name: HCP_COMPONENT_NAME
    type: environment
  - name: HCP_INSTANCE_ID
    type: environment
  - name: HCP_SERVICE_DOMAIN_SUFFIX
  - name: HOSTNAME
  - name: HTTPS_PROXY
  - name: HTTP_PROXY
  - name: INTERNAL_API_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: Basic auth password for access to the Cloud Controller's internal API.
    required: true
  - name: INTERNAL_CA_CERT
    secret: true
    generator:
      id: cacert
      type: CACertificate
      value_type: certificate
    description: PEM-encoded CA certificate used to sign TLS certificate hosted by Diego BBS.
    required: true
  - name: KUBERNETES_NAMESPACE
  - name: KUBE_POD_SERVICE
  - name: LOGGREGATOR_SHARED_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: Shared secret used to verify cryptographically signed dropsonde messages.
    required: true
  - name: LOG_LEVEL
    default: info
    description: "The cluster's log level: off, fatal, error, warn, info, debug, debug1, debug2."
    required: true
  - name: MAX_APP_DISK_IN_MB
    default: 2048
    description: The maximum amount of disk a user can request for an application via manifest, command line, etc., in MB. See also DEFAULT_APP_DISK_IN_MB for the standard amount.
    required: true
  - name: MAX_HEALTH_CHECK_TIMEOUT
    default: 180
    description: Maximum health check timeout that can be set for an app, in seconds.
    required: true
  - name: METRON_CERT
    secret: true
    generator:
      id: metron_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate.
    required: true
  - name: METRON_KEY
    secret: true
    generator:
      id: metron_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key.
    required: true
  - name: MONIT_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: Password used for the monit API.
    required: true
  - name: MYSQL_ADMIN_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for the MySQL server admin user.
    required: true
  - name: MYSQL_CLUSTER_HEALTH_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for the cluster logger health user.
    required: true
  - name: MYSQL_DIEGO_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to MySQL by diego.
    required: true
  - name: MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password used to contact the sidecar endpoints via Basic Auth.
    required: true
  - name: MYSQL_HCF_CLUSTER_CONFIG_REVISION
    default: 0
    description: An indicator to increment when changing the number of MySQL hosts in the cluster, to properly trigger component restarts.
    required: true
  - name: MYSQL_HCF_CLUSTER_IPS
    type: environment
  - name: MYSQL_PROXY_ADMIN_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for Basic Auth used to secure the MySQL proxy API.
    required: true
  - name: MYSQL_ROUTING_API_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to MySQL by the routing-api
    required: true
  - name: NATS_HCF_CLUSTER_CONFIG_REVISION
    default: 0
    description: An indicator to increment when changing the number of NATS hosts in the cluster, to properly trigger component restarts.
    required: true
  - name: NATS_HCF_CLUSTER_IPS
    type: environment
  - name: NATS_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to NATS.
    required: true
  - name: NGINX_LOG_LEVEL
    type: environment
  - name: NGINX_MAX_REQUEST_BODY_SIZE
    default: 1536
    description: Sets the maximum allowed size of the client request body, specified in the “Content-Length” request header field, in megabytes. If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client. Please be aware that browsers cannot correctly display this error. Setting size to 0 disables checking of client request body size. This limits application uploads, buildpack uploads, etc.
    required: true
  - name: NO_PROXY
  - name: REP_CLIENT_CERT
    secret: true
    generator:
      id: rep_client_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded client certificate
    required: true
  - name: REP_CLIENT_KEY
    secret: true
    generator:
      id: rep_client_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded client key
    required: true
  - name: REP_SERVER_CERT
    secret: true
    generator:
      id: rep_server_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded server certificate
    required: true
  - name: REP_SERVER_KEY
    secret: true
    generator:
      id: rep_server_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded server key
    required: true
  - name: RESERVABLE_PORTS
    default: 20000-20008
    description: Modifying this value will break TCP port forwarding.
    required: true
  - name: ROOTFS_TRUSTED_CERTS
    default: ''
    description: Certficates to add to the rootfs trust store. Multiple certs are possible by concatenating their definitions into one big block of text.
  - name: ROUTER_BALANCING_ALGORITHM
    default: 'round-robin'
    description: The algorithm used by the router to distribute requests for a route across backends. Supported values are round-robin and least-connection.
  - name: ROUTER_SERVICES_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: Support for route services is disabled when no value is configured. A robust passphrase is recommended.
    required: true
  - name: ROUTER_SSL_CERT
    secret: true
    generator:
      id: router_cert
      type: Certificate
      value_type: certificate
      key_length: 4096
      subject_alt_names:
      - parameter: DOMAIN
        wildcard: false
      - parameter: DOMAIN
        wildcard: true
    description: The public ssl cert for ssl termination.
    required: true
  - name: ROUTER_SSL_KEY
    secret: true
    generator:
      id: router_cert
      type: Certificate
      value_type: private_key
    description: The private ssl key for ssl termination.
    required: true
  - name: ROUTER_STATUS_PASSWORD
    secret: true
    immutable: true
    generator:
      id: router_status_password
      type: Password
    description: Password for HTTP basic auth to the varz/status endpoint.
    required: true
  - name: SKIP_CERT_VERIFY_EXTERNAL
    default: false
    description: Skip TLS verification when communicating with UAA system domain.
    required: true
  - name: SKIP_CERT_VERIFY_INTERNAL
    default: false
    example: false
    description: Determines whether dashboard verifies SSL certificates when communicating with Cloud Controller and UAA.
    required: true
  - name: STAGER_INSECURE_DOCKER_REGISTRIES
    default: ''
    example: '"docker-registry.example.com:80", "hello.example.org:443"'
    description: >
      A comma-separated list of insecure Docker registries in the form of '<HOSTNAME|IP>:PORT'.
      Each registry must be quoted separately.
  - name: STAGING_TIMEOUT
    default: 900
    description: Timeout for staging an app, in seconds.
    required: true
  - name: STAGING_UPLOAD_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to the uploader of staged droplets.
    required: true
  - name: SUPPORT_ADDRESS
    default: support@example.com
    description: Support contact information for the cluster
    required: true
  - name: SYSLOGDRAINBINDER_CERT
    secret: true
    generator:
      id: syslogdrainbinder_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
    required: true
  - name: SYSLOGDRAINBINDER_KEY
    secret: true
    generator:
      id: syslogdrainbinder_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key.
    required: true
  - name: TCP_DOMAIN
    example: tcp.my-hcf-cluster.com
    description: TCP routing domain of the HCF cluster; only used for testing;
  - name: TPS_CC_CLIENT_CRT
    secret: true
    generator:
      id: tps_cc_client_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded client certificate for internal communication between the cloud controller and TPS.
    required: true
  - name: TPS_CC_CLIENT_KEY
    secret: true
    generator:
      id: tps_cc_client_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded client key for internal communication between the cloud controller and TPS.
    required: true
  - name: TRAFFICCONTROLLER_CERT
    secret: true
    generator:
      id: trafficcontroller_cert
      type: Certificate
      value_type: certificate
    description: PEM-encoded certificate
    required: true
  - name: TRAFFICCONTROLLER_KEY
    secret: true
    generator:
      id: trafficcontroller_cert
      type: Certificate
      value_type: private_key
      key_length: 4096
    description: PEM-encoded key.
    required: true
  - name: TRUSTED_CERTS
    description: Concatenation of trusted CA certificates to be made available on the cell.
  - name: UAADB_PASSWORD
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for access to the UAA database.
    required: true
  - name: UAA_ADMIN_CLIENT_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password of the admin client - a client named admin with uaa.admin as an authority.
    required: true
  - name: UAA_CC_CLIENT_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the Cloud Controller.
    required: true
  - name: UAA_CLIENTS_CC_ROUTING_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the Routing API.
    required: true
  - name: UAA_CLIENTS_CC_SERVICE_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: Used for generating SSO clients for service brokers.
    required: true
  - name: UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the Cloud Controller for fetching usernames.
    required: true
  - name: UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the SSH proxy.
    required: true
  - name: UAA_CLIENTS_DOPPLER_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by doppler.
    required: true
  - name: UAA_CLIENTS_GOROUTER_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the gorouter.
    required: true
  - name: UAA_CLIENTS_HCF_AUTO_CONFIG_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the task creating the cluster administrator user
    required: true
  - name: UAA_CLIENTS_LOGIN_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the login client.
    required: true
  - name: UAA_CLIENTS_TCP_EMITTER_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the TCP emitter.
    required: true
  - name: UAA_CLIENTS_TCP_ROUTER_SECRET
    secret: true
    immutable: true
    generator:
      type: Password
    description: The password for UAA access by the TCP router.
    required: true
  - name: UAA_HOST
    description: The host name of the UAA server (root zone)
  - name: UAA_PORT
    default: 2793
  - name: USE_DIEGO_PRIVILEGED_CONTAINERS
    default: false
    description: Whether or not to use privileged containers for buildpack based applications. Containers with a docker-image-based rootfs will continue to always be unprivileged.
    required: true
  - name: USE_STAGER_PRIVILEGED_CONTAINERS
    default: false
    description: Whether or not to use privileged containers for staging tasks.
    required: true
  templates:
    az: '"((HCP_AZ))"'
    id: ((#HCP_COMPONENT_NAME))((HCP_COMPONENT_NAME))((#HCP_INSTANCE_ID))-((HCP_COMPONENT_INDEX))((/HCP_INSTANCE_ID))((/HCP_COMPONENT_NAME))((^HCP_COMPONENT_NAME))((HOSTNAME))((/HCP_COMPONENT_NAME))
    index: ((HCP_COMPONENT_INDEX))((^HCP_COMPONENT_INDEX))0((/HCP_COMPONENT_INDEX))
    networks.default.dns_record_name: '"((#HCP_COMPONENT_NAME))((HCP_COMPONENT_NAME))((/HCP_COMPONENT_NAME))((^HCP_COMPONENT_NAME))((DNS_RECORD_NAME))((/HCP_COMPONENT_NAME))"'
    networks.default.ip: '"((IP_ADDRESS))"'
    properties.acceptance_tests.admin_password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.acceptance_tests.api: '"api.((DOMAIN))"'
    properties.acceptance_tests.apps_domain: '"((DOMAIN))"'
    properties.acceptance_tests_brain.domain: '"((DOMAIN))"'
    properties.acceptance_tests_brain.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.acceptance_tests_brain.tcp_domain: '"((TCP_DOMAIN))"'
    properties.app_domains: '["((DOMAIN))"]'
    properties.app_ssh.host_key_fingerprint: '"((APP_SSH_KEY_FINGERPRINT))"'
    properties.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.blobstore.admin_users:  '[{"username": "blobstore_user", "password": "((BLOBSTORE_PASSWORD))"}]'
    properties.blobstore.internal_access_rules: '[((BLOBSTORE_ACCESS_RULES))]'
    properties.blobstore.max_upload_size: ((BLOBSTORE_MAX_UPLOAD_SIZE))m
    properties.blobstore.secure_link.secret: '"((BLOBSTORE_SECURE_LINK))"'
    properties.blobstore.tls.cert: '"((BLOBSTORE_TLS_CERT))"'
    properties.blobstore.tls.private_key: '"((BLOBSTORE_TLS_KEY))"'
    properties.build: '"((CLUSTER_BUILD))"'
    properties.capi.cc_uploader.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.capi.nsync.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.nsync.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.capi.nsync.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.capi.nsync.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.capi.nsync.diego_privileged_containers: ((USE_DIEGO_PRIVILEGED_CONTAINERS))
    properties.capi.nsync.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.capi.stager.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.stager.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.capi.stager.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.capi.stager.cc.basic_auth_password: '"((INTERNAL_API_PASSWORD))"'
    properties.capi.stager.diego_privileged_containers: ((USE_STAGER_PRIVILEGED_CONTAINERS))
    properties.capi.stager.docker_staging_stack: '"((DEFAULT_STACK))"'
    properties.capi.stager.insecure_docker_registry_list: '[((STAGER_INSECURE_DOCKER_REGISTRIES))]'
    properties.capi.stager.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.capi.tps.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.tps.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.capi.tps.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.capi.tps.cc.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.capi.tps.cc.client_cert: '"((TPS_CC_CLIENT_CRT))"'
    properties.capi.tps.cc.client_key: '"((TPS_CC_CLIENT_KEY))"'
    properties.capi.tps.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.cc.allow_app_ssh_access: ((ALLOW_APP_SSH_ACCESS))
    properties.cc.allowed_cors_domains: ((ALLOWED_CORS_DOMAINS))
    properties.cc.app_bits_max_body_size: ((NGINX_MAX_REQUEST_BODY_SIZE))M
    properties.cc.app_bits_upload_grace_period_in_seconds: ((APP_TOKEN_UPLOAD_GRACE_PERIOD))
    properties.cc.buildpacks.cdn.uri: '"((CDN_URI))"'
    properties.cc.buildpacks.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.buildpacks.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.bulk_api_password: '"((BULK_API_PASSWORD))"'
    properties.cc.db_encryption_key: '"((DB_ENCRYPTION_KEY))"'
    properties.cc.default_app_disk_in_mb: '"((DEFAULT_APP_DISK_IN_MB))"'
    properties.cc.default_app_memory: '"((DEFAULT_APP_MEMORY))"'
    properties.cc.default_app_ssh_access: '"((DEFAULT_APP_SSH_ACCESS))"'
    properties.cc.default_stack: '"((DEFAULT_STACK))"'
    properties.cc.disable_custom_buildpacks: ((DISABLE_CUSTOM_BUILDPACKS))
    properties.cc.droplets.max_staged_droplets_stored: ((DROPLET_MAX_STAGED_STORED))
    properties.cc.droplets.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.droplets.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.internal_api_password: '"((INTERNAL_API_PASSWORD))"'
    properties.cc.logging_level: '"((LOG_LEVEL))"'
    properties.cc.maximum_app_disk_in_mb: ((MAX_APP_DISK_IN_MB))
    properties.cc.maximum_health_check_timeout: ((MAX_HEALTH_CHECK_TIMEOUT))
    properties.cc.mutual_tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.cc.mutual_tls.private_key: '"((CC_SERVER_KEY))"'
    properties.cc.mutual_tls.public_cert: '"((CC_SERVER_CRT))"'
    properties.cc.nginx_error_log_level: '"((NGINX_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.cc.packages.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.packages.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.resource_pool.webdav_config.password: '"((BLOBSTORE_PASSWORD))"'
    properties.cc.resource_pool.webdav_config.public_endpoint: '"https://blobstore.((DOMAIN))"'
    properties.cc.staging_timeout_in_seconds: ((STAGING_TIMEOUT))
    properties.cc.staging_upload_password: '"((STAGING_UPLOAD_PASSWORD))"'
    properties.cc.uaa.internal_url: ((KUBERNETES_NAMESPACE)).((UAA_HOST))
    properties.ccdb.roles: '[{"name": "ccadmin", "password": "((CCDB_ROLE_PASSWORD))", "tag": "admin"}]'
    properties.cf.skip_ssl_validation: ((SKIP_CERT_VERIFY_INTERNAL))
    properties.cf_mysql.mysql.advertise_host: mysql-((HCP_COMPONENT_INDEX)).mysql-pod
    properties.cf_mysql.mysql.seeded_databases: '[{"name":"ccdb", "username":"ccadmin", "password": "((CCDB_ROLE_PASSWORD))"},{"name":"uaadb", "username": "uaaadmin", "password":"((UAADB_PASSWORD))"},{"name":"diego", "username": "diego", "password":"((MYSQL_DIEGO_PASSWORD))"},{"name":"routing-api", "username": "routing-api", "password":"((MYSQL_ROUTING_API_PASSWORD))"}]'
    properties.cflinuxfs2-rootfs.trusted_certs: '"((ROOTFS_TRUSTED_CERTS))"'
    properties.consul.agent.domain: ((KUBERNETES_NAMESPACE))((^KUBERNETES_NAMESPACE))hcf((/KUBERNETES_NAMESPACE))
    properties.consul.agent.log_level: '"((CONSUL_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.consul.agent.servers.lan: ((CONSUL_HCF_CLUSTER_IPS))((#CONSUL_HCF_CLUSTER_CONFIG_REVISION))((/CONSUL_HCF_CLUSTER_CONFIG_REVISION))
    properties.consul.agent_cert: '"((CONSUL_AGENT_CERT))"'
    properties.consul.agent_key: '"((CONSUL_AGENT_KEY))"'
    properties.consul.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.consul.encrypt_keys: '["((CONSUL_ENCRYPTION_KEYS))"]'
    properties.consul.server_cert: '"((CONSUL_SERVER_CERT))"'
    properties.consul.server_key: '"((CONSUL_SERVER_KEY))"'
    # CLUSTER_DESCRIPTION is not wrapped in quotes because it has quotes in the dev env file.
    properties.description: ((CLUSTER_DESCRIPTION))
    properties.diego.auctioneer.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.auctioneer.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.auctioneer.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.auctioneer.rep.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.auctioneer.rep.client_cert: '"((AUCTIONEER_REP_CERT))"'
    properties.diego.auctioneer.rep.client_key: '"((AUCTIONEER_REP_KEY))"'
    properties.diego.auctioneer.rep.require_tls: ((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))
    properties.diego.auctioneer.server_cert: '"((AUCTIONEER_SERVER_CERT))"'
    properties.diego.auctioneer.server_key: '"((AUCTIONEER_SERVER_KEY))"'
    properties.diego.bbs.auctioneer.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.auctioneer.client_cert: '"((BBS_AUCTIONEER_CERT))"'
    properties.diego.bbs.auctioneer.client_key: '"((BBS_AUCTIONEER_KEY))"'
    properties.diego.bbs.auctioneer.require_tls: ((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))
    properties.diego.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.encryption_keys: '[{"label": "active", "passphrase": "((BBS_ACTIVE_KEY_PASSPHRASE))"}]'
    properties.diego.bbs.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.diego.bbs.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.diego.bbs.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.bbs.rep.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.bbs.rep.client_cert: '"((BBS_REP_CERT))"'
    properties.diego.bbs.rep.client_key: '"((BBS_REP_KEY))"'
    properties.diego.bbs.rep.require_tls: ((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))
    properties.diego.bbs.server_cert: '"((BBS_SERVER_CRT))"'
    properties.diego.bbs.server_key: '"((BBS_SERVER_KEY))"'
    properties.diego.bbs.sql.db_connection_string: '"((={{ }}=))diego:{{MYSQL_DIEGO_PASSWORD}}@tcp(mysql-proxy:3306)/diego{{=(( ))=}}"'
    properties.diego.executor.disk_capacity_mb: ((DIEGO_CELL_DISK_CAPACITY_MB))
    properties.diego.executor.memory_capacity_mb: ((DIEGO_CELL_MEMORY_CAPACITY_MB))
    properties.diego.file_server.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.rep.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.rep.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.rep.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.rep.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.rep.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.rep.require_tls: ((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))
    properties.diego.rep.server_cert: '"((REP_SERVER_CERT))"'
    properties.diego.rep.server_key: '"((REP_SERVER_KEY))"'
    properties.diego.rep.trusted_certs: '"((TRUSTED_CERTS))"'
    properties.diego.rep.zone: '"((HCP_AZ))"'
    properties.diego.route_emitter.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.route_emitter.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.route_emitter.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.route_emitter.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.route_emitter.nats.machines: ((NATS_HCF_CLUSTER_IPS))((#NATS_HCF_CLUSTER_CONFIG_REVISION))((/NATS_HCF_CLUSTER_CONFIG_REVISION))
    properties.diego.route_emitter.nats.password: '"((NATS_PASSWORD))"'
    properties.diego.ssh_proxy.bbs.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.diego.ssh_proxy.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.diego.ssh_proxy.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.diego.ssh_proxy.host_key: '"((APP_SSH_KEY))"'
    properties.diego.ssh_proxy.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.diego.ssh_proxy.uaa_secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.diego.ssh_proxy.uaa_token_url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))/oauth/token
    properties.diego.ssl.skip_cert_verify: ((SKIP_CERT_VERIFY_INTERNAL))
    properties.domain: '"((DOMAIN))"'
    properties.doppler.addr: '"doppler.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.doppler.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.doppler.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.doppler.syslog_skip_cert_verify: ((SKIP_CERT_VERIFY_INTERNAL))
    properties.doppler.zone: '"((HCP_AZ))"'
    properties.doppler_endpoint.shared_secret: '"((LOGGREGATOR_SHARED_SECRET))"'
    properties.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.etcd.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
    properties.etcd.machines: ((ETCD_HCF_CLUSTER_IPS))((#ETCD_HCF_CLUSTER_CONFIG_REVISION))((/ETCD_HCF_CLUSTER_CONFIG_REVISION))
    properties.etcd.peer_ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.etcd.peer_cert: '"((ETCD_PEER_CRT))"'
    properties.etcd.peer_key: '"((ETCD_PEER_KEY))"'
    # Include SKIP_CERT_VERIFY_INTERNAL so our detection algorithm includes it in the generated deployment manifests
    properties.etcd.peer_require_ssl: ((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))
    # Include SKIP_CERT_VERIFY_INTERNAL so our detection algorithm includes it in the generated deployment manifests
    properties.etcd.require_ssl: ((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))
    properties.etcd.server_cert: '"((ETCD_SERVER_CRT))"'
    properties.etcd.server_key: '"((ETCD_SERVER_KEY))"'
    properties.etcd_metrics_server.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.etcd_metrics_server.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.etcd_metrics_server.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    # Include SKIP_CERT_VERIFY_INTERNAL so our detection algorithm includes it in the generated deployment manifests
    properties.etcd_metrics_server.etcd.require_ssl: ((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))
    properties.fissile.monit.password: '"((MONIT_PASSWORD))"'
    properties.garden.dns_servers: '[((GARDEN_LINUX_DNS_SERVER))]'
    properties.garden.docker_registry_endpoint: ((GARDEN_DOCKER_REGISTRY))((^GARDEN_DOCKER_REGISTRY))null((/GARDEN_DOCKER_REGISTRY))
    properties.garden.http_proxy: '"((HTTP_PROXY))"'
    properties.garden.https_proxy: '"((HTTPS_PROXY))"'
    properties.garden.insecure_docker_registry_list: '[((GARDEN_INSECURE_DOCKER_REGISTRIES))]'
    properties.garden.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.garden.network_mtu: ((DIEGO_CELL_NETWORK_MTU))
    properties.garden.network_pool: '"((DIEGO_CELL_SUBNET))"'
    properties.garden.no_proxy: '"((NO_PROXY))"'
    properties.grootfs.driver: '((GARDEN_ROOTFS_DRIVER))'
    properties.grootfs.insecure_docker_registry_list: '[((GARDEN_INSECURE_DOCKER_REGISTRIES))]'
    properties.hcf.internal-ca-cert: '"((INTERNAL_CA_CERT))"'
    properties.hcf.rep-certstrap.rep_ca_key: '"((REP_SERVER_KEY))"'
    properties.hcf.skip_cert_verify_external: ((SKIP_CERT_VERIFY_EXTERNAL))
    properties.hcf.uaa.internal-url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.hcf_set_proxy.running_http_proxy: '"((HTTP_PROXY))"'
    properties.hcf_set_proxy.running_https_proxy: '"((HTTPS_PROXY))"'
    properties.hcf_set_proxy.running_no_proxy: '"((NO_PROXY))"'
    properties.hcf_set_proxy.staging_http_proxy: '"((HTTP_PROXY))"'
    properties.hcf_set_proxy.staging_https_proxy: '"((HTTPS_PROXY))"'
    properties.hcf_set_proxy.staging_no_proxy: '"((NO_PROXY))"'
    properties.loggregator.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.loggregator.etcd.machines: ((ETCD_HCF_CLUSTER_IPS))((#ETCD_HCF_CLUSTER_CONFIG_REVISION))((/ETCD_HCF_CLUSTER_CONFIG_REVISION))
    # Include SKIP_CERT_VERIFY_INTERNAL so our detection algorithm includes it in the generated deployment manifests
    properties.loggregator.etcd.require_ssl: ((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))
    properties.loggregator.tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.loggregator.tls.doppler.cert: '"((DOPPLER_CERT))"'
    properties.loggregator.tls.doppler.key: '"((DOPPLER_KEY))"'
    properties.loggregator.tls.metron.cert: '"((METRON_CERT))"'
    properties.loggregator.tls.metron.key: '"((METRON_KEY))"'
    properties.loggregator.tls.syslogdrainbinder.cert: '"((SYSLOGDRAINBINDER_CERT))"'
    properties.loggregator.tls.syslogdrainbinder.key: '"((SYSLOGDRAINBINDER_KEY))"'
    properties.loggregator.tls.trafficcontroller.cert: '"((TRAFFICCONTROLLER_CERT))"'
    properties.loggregator.tls.trafficcontroller.key: '"((TRAFFICCONTROLLER_KEY))"'
    properties.loggregator.uaa.client_secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
    properties.login.url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.metron_agent.zone: '"((HCP_AZ))"'
    properties.metron_endpoint.shared_secret: '"((LOGGREGATOR_SHARED_SECRET))"'
    # CLUSTER_NAME is not wrapped in quotes because it has quotes in the dev env file.
    properties.name: ((CLUSTER_NAME))
    properties.nats.machines: ((NATS_HCF_CLUSTER_IPS))((#NATS_HCF_CLUSTER_CONFIG_REVISION))((/NATS_HCF_CLUSTER_CONFIG_REVISION))
    properties.nats.password: '"((NATS_PASSWORD))"'
    properties.opensuse42-rootfs.trusted_certs: '"((ROOTFS_TRUSTED_CERTS))"'
    properties.router.balancing_algorithm: '"((ROUTER_BALANCING_ALGORITHM))"'
    properties.router.dns_health_check_host: '"((DNS_HEALTH_CHECK_HOST))"'
    properties.router.force_forwarded_proto_https: ((FORCE_FORWARDED_PROTO_AS_HTTPS))
    properties.router.logging_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.router.route_services_secret: '"((ROUTER_SERVICES_SECRET))"'
    properties.router.ssl_cert: '"((ROUTER_SSL_CERT))"'
    properties.router.ssl_key: '"((ROUTER_SSL_KEY))"'
    properties.router.ssl_skip_validation: ((SKIP_CERT_VERIFY_INTERNAL))
    properties.router.status.password: '"((ROUTER_STATUS_PASSWORD))"'
    properties.routing_api.etcd.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.routing_api.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.routing_api.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    # Include SKIP_CERT_VERIFY_INTERNAL so our detection algorithm includes it in the generated deployment manifests
    properties.routing_api.etcd.require_ssl: ((DONT_SKIP_CERT_VERIFY_INTERNAL))((#SKIP_CERT_VERIFY_INTERNAL))((/SKIP_CERT_VERIFY_INTERNAL))
    properties.routing_api.etcd.servers: ((ETCD_HCF_CLUSTER_IPS))((#ETCD_HCF_CLUSTER_CONFIG_REVISION))((/ETCD_HCF_CLUSTER_CONFIG_REVISION))
    properties.routing_api.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.routing_api.port: 3000((#KUBERNETES_NAMESPACE))((/KUBERNETES_NAMESPACE))
    properties.routing_api.router_groups: '[{"name":"default-tcp", "type":"tcp", "reservable_ports":"((RESERVABLE_PORTS))"}]'
    properties.routing_api.sqldb.host: "mysql-proxy.((HCP_SERVICE_DOMAIN_SUFFIX))"
    properties.routing_api.sqldb.password: "((MYSQL_ROUTING_API_PASSWORD))"
    properties.routing_api.system_domain: '"((DOMAIN))"'
    properties.routing_api.uri: '"http://routing-api.((HCP_SERVICE_DOMAIN_SUFFIX))"'
    properties.skip_ssl_validation: ((SKIP_CERT_VERIFY_INTERNAL))
    properties.smoke_tests.api: '"api.((DOMAIN))"'
    properties.smoke_tests.apps_domain: '["((DOMAIN))"]'
    properties.smoke_tests.password: '"((CLUSTER_ADMIN_PASSWORD))"'
    properties.ssl.skip_cert_verify: ((SKIP_CERT_VERIFY_INTERNAL))
    properties.support_address: '"((SUPPORT_ADDRESS))"'
    properties.syslog_drain_binder.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.syslog_drain_binder.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.system_domain: '"((DOMAIN))"'
    properties.tcp_emitter.bbs.client_cert: '"((BBS_CLIENT_CRT))"'
    properties.tcp_emitter.bbs.client_key: '"((BBS_CLIENT_KEY))"'
    properties.tcp_emitter.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.tcp_emitter.oauth_secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.tcp_router.log_level: '"((GO_LOG_LEVEL))((#LOG_LEVEL))((/LOG_LEVEL))"'
    properties.tcp_router.oauth_secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.tls.ca_cert: '"((INTERNAL_CA_CERT))"'
    properties.tls.cert: '"((REP_CLIENT_CERT))"'
    properties.tls.key: '"((REP_CLIENT_KEY))"'
    properties.traffic_controller.etcd.client_cert: '"((ETCD_CLIENT_CRT))"'
    properties.traffic_controller.etcd.client_key: '"((ETCD_CLIENT_KEY))"'
    properties.uaa.admin.client_secret: '"((UAA_ADMIN_CLIENT_SECRET))"'
    properties.uaa.ca_cert: '"((HCP_CA_CERT))((^HCP_CA_CERT))((INTERNAL_CA_CERT))((/HCP_CA_CERT))"'
    properties.uaa.clients.cc-service-dashboards.secret: '"((UAA_CLIENTS_CC_SERVICE_SECRET))"'
    properties.uaa.clients.cc_routing.secret: '"((UAA_CLIENTS_CC_ROUTING_SECRET))"'
    properties.uaa.clients.cloud_controller.secret: ((UAA_CC_CLIENT_SECRET))
    properties.uaa.clients.cloud_controller_username_lookup.secret: '"((UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET))"'
    properties.uaa.clients.doppler.secret: '"((UAA_CLIENTS_DOPPLER_SECRET))"'
    properties.uaa.clients.gorouter.secret: '"((UAA_CLIENTS_GOROUTER_SECRET))"'
    properties.uaa.clients.hcf_auto_config.secret: '"((UAA_CLIENTS_HCF_AUTO_CONFIG_SECRET))"'
    properties.uaa.clients.login.redirect-uri: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.uaa.clients.login.secret: '"((UAA_CLIENTS_LOGIN_SECRET))"'
    properties.uaa.clients.ssh-proxy.secret: '"((UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET))"'
    properties.uaa.clients.tcp_emitter.secret: '"((UAA_CLIENTS_TCP_EMITTER_SECRET))"'
    properties.uaa.clients.tcp_router.secret: '"((UAA_CLIENTS_TCP_ROUTER_SECRET))"'
    properties.uaa.scim.users: '[{name: admin, password: ((CLUSTER_ADMIN_PASSWORD)), groups: [((CLUSTER_ADMIN_AUTHORITIES))]}]'
    properties.uaa.ssl.port: ((UAA_PORT))
    properties.uaa.tls_port: ((UAA_PORT))
    properties.uaa.token_endpoint: ((KUBERNETES_NAMESPACE)).((UAA_HOST))
    properties.uaa.url: https://((KUBERNETES_NAMESPACE)).((UAA_HOST)):((UAA_PORT))
    properties.version: '"((CLUSTER_VERSION))"'
