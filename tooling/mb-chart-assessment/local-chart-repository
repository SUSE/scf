#!/usr/bin/env bash
set -o errexit -o nounset

# Arguments
# - cmd
# - detail...
#
# Command: stop
# Details:
#
# Command: start
# Details:
# - log destination
# - top directory
# - work directory
# - namespace
# - base index
# - db engine
# - chart location/url
##
# Returns
# - Repository location/url

APP=chart-under-test

case $1 in
    stop)
	cf delete -f "${APP}"
	cf delete-space -f mb-charting
	cf delete-org   -f mb-charting
	exit
    ;;
    start)
	shift
	# Continue to main body of script
    ;;
    *)
	echo 1>&2 "Usage: $0 stop|start top work namespace index db chart"
	exit 1
    ;;
esac

LOG="${1}"		; shift
top="${1}"		; shift
wrk="${1}"		; shift
CF_NAMESPACE="${1}"	; shift
index="${1}"		; shift
db="${1}"		; shift
chart="${1}"		; shift
CAP="${1}"		; shift

# Configuration ........................................................

source "${top}/make/include/secrets"

bin="${top}/tooling/mb-chart-assessment"
patchlog=$(dirname "${index}")/$(basename "${index}" .yaml).patch-log
nodeenv="${top}/src/scf-release/src/acceptance-tests-brain/test-resources/node-env"
DOMAIN=$(kubectl get pods -o json --namespace "${CF_NAMESPACE}" api-group-0 \
	     | jq -r '.spec.containers[0].env[] | select(.name == "DOMAIN").value')
HREPOS="http://${APP}.${DOMAIN}"
TARGET="https://api.${DOMAIN}"

# ruby yaml prints timestamp as `<date> <time> Z`.
# go yaml rejects that, expects `<date>T<time>Z` (No spaces, and the `T`)
fixtime() {
    sed -e 's|created: \([^ ]*\) \([^ ]*\) Z|created: \1T\2Z|'
}

index-as-is() {
    # 3.c
    echo '  - Index As Is ...'

    cat "${index}" | fixtime > "${wrk}/dbe-charts/index.yaml"
}

index-patched() {
    db="${1}"
    patch="${2}"
    chart="${3}"

    echo '  - Patching & Relocating ...'
    echo "      - In:    $chart"
    echo "      - Patch: $patch"
    echo 

    # 3.d.1 - Get chart archive to edit
    curl --silent "${chart}" > "${wrk}/dbe-archive-orig.tgz"

    # 3.d.2 - Unpack, Modify, Repack
    rm -rf   "${wrk}/dbe-tmp"
    mkdir -p "${wrk}/dbe-tmp"
    (
	cd "${wrk}/dbe-tmp"
	tar xfz ../dbe-archive-orig.tgz
	(
	    cd "${db}/templates"
	    patch < "${patch}" > "${patchlog}" || grep Reversed "${patchlog}"
	    # Note: We are keeping the patch log in case of having to debug failures.
	    rm -f *.rej
	)
	tar cfz "${wrk}/dbe-archive-relocated.tgz" "${db}"
    )
    rm -rf "${wrk}/dbe-tmp"
    
    # 3.d.3 - Place edited chart archive into the repository, ...
    cp "${wrk}/dbe-archive-relocated.tgz" "${wrk}/dbe-charts/chart.tgz"

    # 3.d.4 - ... and update the index to refer to the new location
    echo '  - Index Patched ...'
    
    ruby "${bin}/change-chart-location.rb" \
	 "${index}" "${db}" "${HREPOS}/chart.tgz" \
	| fixtime > "${wrk}/dbe-charts/index.yaml"
}

# ______________________________________________________________________

(
    # Get node-env application. We are abusing it as a simple web
    # server for static files. The placed file(s) make it a HELM
    # repository server.
    
    rm -rf          "${wrk}/dbe-charts"
    cp -rf $nodeenv "${wrk}/dbe-charts"

    # Change name, better link to current operation.
    sed -e "s|node-env|$APP|" \
	< "${wrk}/dbe-charts/manifest.yml" \
	> $$ && \
	mv $$ "${wrk}/dbe-charts/manifest.yml"

    # Determine if we can use the index we have as is, or if we have
    # to edit both index and referenced chart.
    patch="${top}/tooling/mb-chart-assessment/patches/${db}.patch"
    if test -f "${patch}"
    then
	# 3.d.(1-4)
	index-patched "${db}" "${patch}" "${chart}"
    else
	# 3.c
	index-as-is
    fi

    # 3.e - Start application / repository.
    cf api --skip-ssl-validation "${TARGET}"
    cf auth admin "${CAP}"
    cf create-org   mb-charting
    cf target    -o mb-charting
    cf create-space mb-charting
    cf target    -o mb-charting
    cf enable-feature-flag diego_docker

    cd  "${wrk}/dbe-charts"
    cf push -n "${APP}"
) >> "${LOG}" 2>&1

# Tell caller where to find this helm repository
echo "${HREPOS}"
exit
