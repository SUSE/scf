#!/bin/bash -l

set -e -x

export GOROOT=$(readlink -nf /var/vcap/packages/golang1.7)
export PATH=${GOROOT}/bin:${PATH}

export PATH=/var/vcap/packages/cli/bin:${PATH} # put the cli on the path

export GOPATH=/var/vcap/packages/acceptance-tests
export PATH=${GOPATH}/bin:${PATH}

export CF_COLOR=false
export CONFIG=/var/vcap/jobs/acceptance-tests/bin/config.json

<% if_p("acceptance_tests.cf_dial_timeout_in_seconds") do |timeout| %>
export CF_DIAL_TIMEOUT=<%= timeout %>
<% end %>

export CF_PLUGIN_HOME=$(mktemp -d)

cf install-plugin /var/vcap/packages/cli-network-policy-plugin/plugin/network-policy-plugin-linux64 -f

mkdir -p /var/vcap/sys/log/acceptance_tests
rm -rf /var/vcap/sys/log/acceptance_tests/*

cd /var/vcap/packages/acceptance-tests/src/github.com/cloudfoundry/cf-acceptance-tests

echo '################################################################################################################'
echo $(go version)
echo CONFIG=$CONFIG
env | sort
echo '################################################################################################################'

echo "Running acceptance tests..."

EXITSTATUS=0

nodes=<%= properties.acceptance_tests.nodes %>

skips=
<% if_p("acceptance_tests.skip_regex") do |skip_regex| %>
  skips="-skip=<%= skip_regex %>"
<% end %>

verbose=<%= properties.acceptance_tests.verbose ? "-v" : "" %>
noColorFlag=<%= properties.acceptance_tests.enable_color ? "" : "-noColor" %>

set +e
bin/test -r $noColorFlag -slowSpecThreshold=120 -randomizeAllSpecs $verbose \
  -nodes=$nodes -skipPackage=helpers $skips -keepGoing \
  > /var/vcap/sys/log/acceptance_tests.log \
  2> /var/vcap/sys/log/acceptance_tests.err.log
EXITSTATUS=$?
set -e
tail -c 905696 /var/vcap/sys/log/acceptance_tests.log

echo "Acceptance Tests Complete; exit status: $EXITSTATUS"

for i in /var/vcap/sys/log/acceptance_tests/*; do
  if [ -e "$i" ]
  then
    mv $i $i.log #Â needed to make download-logs work
  fi
done

exit $EXITSTATUS
