#!/bin/bash

set -e -x

# # ## ### ##### ######## support

REF=test-resources/resources.csv

# extracts $1 to folder $2
function extract()
{
    local type=""
    [ ! -z "`echo $1|grep '.gz'$`" ] && type="gz"
    [ ! -z "`echo $1|grep '.tar.gz'$`" ] && type="tgz"
    [ ! -z "`echo $1|grep '.tgz'$`" ] && type="tgz"
    [ ! -z "`echo $1|grep '.zip'$`" ] && type="zip"
    [ ! -z "`echo $1|grep '.tar.bz2'$`" ] && type="bzip"
    [ ! -z "`echo $1|grep '.tbz'$`" ] && type="bzip"
    [ ! -z "`echo $1|grep '.tbz2'$`" ] && type="bzip"
    [ ! -z "`file $1|grep 'LSB executable'`" ] && type="binary"

    case "$type" in
    "zip")  unzip $1 -d $2 ;;
    "tgz")  tar zxvf $1 -C $2 --wildcards --transform 's@.*/@@' --exclude '*.txt' --exclude '*.md' ;;
    "gz")   gunzip $1 ; mv `echo $1|rev|cut -f 2- -d "."|rev` $2 ;;
    "bzip") tar jxvf $1 -C $2 --wildcards --transform 's@.*/@@' --exclude '*.txt' --exclude '*.md' ;;
    "binary") cp $1 $2 ;;
    esac
}

# # ## ### ##### ########

cd acceptance-tests-brain

# Retrieve the external assets

cat ${REF} | while read line;
do
    name="$(echo $line | cut -f 1  -d ',')"
    url="$( echo $line | cut -f 2- -d ',')"
    wget $url -O $name
done

# Extract and place the plugins.
[ ! -d  test-resources/plugins ] && mkdir -p test-resources/plugins

cat ${REF} |grep ^cf-plugin | while read line;
do
    name="$(echo $line|cut -f 1 -d ',')"
    extract $name test-resources/plugins
    rm $name
done

# Assemble everything for bosh ...

BIN_DIR=${BOSH_INSTALL_TARGET}/bin
SCRIPTS_DIR=${BOSH_INSTALL_TARGET}/test-scripts
RESOURCES_DIR=${BOSH_INSTALL_TARGET}/test-resources

mkdir -p ${BIN_DIR}
mkdir -p ${SCRIPTS_DIR}
mkdir -p ${RESOURCES_DIR}

cp -r test-scripts ${BOSH_INSTALL_TARGET}
cp -r test-resources ${BOSH_INSTALL_TARGET}

# Drop a few superfluous things
rm \
    ${BOSH_INSTALL_TARGET}/test-resources/resources.csv

# # ## ### ##### ######## test brain itself

export GOROOT=$(readlink -nf /var/vcap/packages/golang*)
export PATH=$GOROOT/bin:$PATH
GOPATH="$(mktemp -d)"
export GOPATH

# BOSH copies files in without the `src` directory; put it back.
# We can't use a symlink because go doesn't like those
mkdir -p "${GOPATH}/src"
cp -r "${BOSH_COMPILE_TARGET}/github.com" "${GOPATH}/src/github.com"
cp -r test-resources "${GOPATH}/src/test-resources"

# We currently have no way of getting a valid version number, as we have no git repo
export GOBIN="${BIN_DIR}"
go install -ldflags="-X main.version=0.0.0" github.com/SUSE/testbrain
go install github.com/docker/distribution/cmd/registry
# docker-uploader needs to run without ld-linux.so
CGO_ENABLED=0 go install test-resources/docker-uploader
test -x "${GOBIN}/docker-uploader"
