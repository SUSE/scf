#!/bin/bash -l

set -e -x

GOROOT=$(readlink -nf /var/vcap/packages/golang1.10)
export GOROOT
export PATH=${GOROOT}/bin:${PATH}

export PATH=/var/vcap/packages/cli/bin:${PATH} # put the cli on the path

export GOPATH=/var/vcap/packages/acceptance-tests
export PATH=${GOPATH}/bin:${PATH}

export CF_COLOR=false
export CONFIG=/var/vcap/jobs/acceptance-tests/bin/config.json

<% if_p("acceptance_tests.cf_dial_timeout_in_seconds") do |timeout| %>
export CF_DIAL_TIMEOUT=<%= timeout %>
<% end %>

mkdir -p /var/vcap/sys/log/acceptance_tests
rm -rf /var/vcap/sys/log/acceptance_tests/*

cd /var/vcap/packages/acceptance-tests/src/github.com/cloudfoundry/cf-acceptance-tests

echo '################################################################################################################'
go version
echo CONFIG=${CONFIG}
env | sort
echo '################################################################################################################'

echo "Running acceptance tests..."

EXITSTATUS=0

flakeAttempts=<%= properties.acceptance_tests.flake_attempts %>
nodes=<%= properties.acceptance_tests.nodes %>

skips=
<% if_p("acceptance_tests.skip_regex") do |skip_regex| %>
  skips="-skip=<%= skip_regex %>"
<% end %>

verbose=<%= properties.acceptance_tests.verbose ? "-v" : "" %>
noColorFlag=<%= properties.acceptance_tests.enable_color ? "" : "-noColor" %>
focus=()
if test -n "${CATS_FOCUS:-}" ; then
  focus=( -focus "${CATS_FOCUS}" )
fi

set +e
# shellcheck disable=2065
bin/test -r ${noColorFlag} -slowSpecThreshold=120 -randomizeAllSpecs ${verbose} \
  -flakeAttempts=${flakeAttempts} -nodes=${nodes} -skipPackage=helpers ${skips} -keepGoing "${focus[@]}" \
  > >( tee /var/vcap/sys/log/acceptance_tests.log ) \
  2> /var/vcap/sys/log/acceptance_tests.err.log
EXITSTATUS=$?
set -e

echo "Acceptance Tests Complete; exit status: ${EXITSTATUS}"

for i in /var/vcap/sys/log/acceptance_tests/*; do
  if [ -e "${i}" ]
  then
    mv "${i}" "${i}.log" # needed to make download-logs work
  fi
done

exit ${EXITSTATUS}
