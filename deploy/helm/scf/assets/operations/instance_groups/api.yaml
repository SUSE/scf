- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/install_buildpacks
  value:
  ## Order is important here
  - name: staticfile_buildpack
    file: /var/vcap/data/shared-packages/staticfile-buildpack/packages/staticfile-buildpack-cflinuxfs3/staticfile_buildpack-cflinuxfs3-v1.4.40.zip
  - name: java_buildpack
    file: /var/vcap/data/shared-packages/java-buildpack/packages/java-buildpack-cflinuxfs3/java-buildpack-cflinuxfs3-v4.18.zip
  - name: ruby_buildpack
    file: /var/vcap/data/shared-packages/ruby-buildpack/packages/ruby-buildpack-cflinuxfs3/ruby_buildpack-cflinuxfs3-v1.7.36.zip
  - name: dotnet_core_buildpack
    file: /var/vcap/data/shared-packages/dotnet-core-buildpack/packages/dotnet-core-buildpack-cflinuxfs3/dotnet-core_buildpack-cflinuxfs3-v2.2.7.zip
  - name: nodejs_buildpack
    file: /var/vcap/data/shared-packages/nodejs-buildpack/packages/nodejs-buildpack-cflinuxfs3/nodejs_buildpack-cflinuxfs3-v1.6.45.zip
  - name: go_buildpack
    file: /var/vcap/data/shared-packages/go-buildpack/packages/go-buildpack-cflinuxfs3/go_buildpack-cflinuxfs3-v1.8.35.zip
  - name: python_buildpack
    file: /var/vcap/data/shared-packages/python-buildpack/packages/python-buildpack-cflinuxfs3/python_buildpack-cflinuxfs3-v1.6.29.zip
  - name: php_buildpack
    file: /var/vcap/data/shared-packages/php-buildpack/packages/php-buildpack-cflinuxfs3/php_buildpack-cflinuxfs3-v4.3.72.zip
  - name: nginx_buildpack
    file: /var/vcap/data/shared-packages/nginx-buildpack/packages/nginx-buildpack-cflinuxfs3/nginx_buildpack-cflinuxfs3-v1.0.9.zip
  - name: r_buildpack
    file: /var/vcap/data/shared-packages/r-buildpack/packages/r-buildpack-cflinuxfs3/r_buildpack-cflinuxfs3-v1.0.7.zip
  - name: binary_buildpack
    file: /var/vcap/data/shared-packages/binary-buildpack/packages/binary-buildpack-cflinuxfs3/binary_buildpack-cflinuxfs3-v1.0.31.zip

# core_file_pattern should be disabled as CC is not running on a VM.
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/core_file_pattern?
  value: false

# Disable tuning /proc/sys kernel parameters as file_server is running on a container.
- type: replace
  path: /instance_groups/name=api/jobs/name=file_server/properties/set_kernel_parameters?
  value: false

# We don't have a /var/vcap/job/*/packages directory, so we point to all the packages.
- type: replace
  path: /instance_groups/name=api/jobs/name=file_server/properties/diego?/file_server/static_directory
  value: "/var/vcap/packages/"

# TODO: Figure out the DB encryption validation.
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/database_encryption?/skip_validation?
  value: true

# Don't run migrations in pre-start, it seems flaky.
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/run_prestart_migrations?
  value: false

# Add empty BPM processes to buildpacks.
- type: replace
  path: /instance_groups/name=api/jobs/name=binary-buildpack/properties?/quarks/bpm/processes
  value: []
- type: replace
  path: /instance_groups/name=api/jobs/name=dotnet-core-buildpack/properties?/quarks/bpm/processes
  value: []
- type: replace
  path: /instance_groups/name=api/jobs/name=go-buildpack/properties?/quarks/bpm/processes
  value: []
- type: replace
  path: /instance_groups/name=api/jobs/name=java-buildpack/properties?/quarks/bpm/processes
  value: []
- type: replace
  path: /instance_groups/name=api/jobs/name=nodejs-buildpack/properties?/quarks/bpm/processes
  value: []
- type: replace
  path: /instance_groups/name=api/jobs/name=nginx-buildpack/properties?/quarks/bpm/processes
  value: []
- type: replace
  path: /instance_groups/name=api/jobs/name=r-buildpack/properties?/quarks/bpm/processes
  value: []
- type: replace
  path: /instance_groups/name=api/jobs/name=php-buildpack/properties?/quarks/bpm/processes
  value: []
- type: replace
  path: /instance_groups/name=api/jobs/name=python-buildpack/properties?/quarks/bpm/processes
  value: []
- type: replace
  path: /instance_groups/name=api/jobs/name=ruby-buildpack/properties?/quarks/bpm/processes
  value: []
- type: replace
  path: /instance_groups/name=api/jobs/name=staticfile-buildpack/properties?/quarks/bpm/processes
  value: []

# Add quarks properties for cloud_controller_ng.
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/quarks?
  value:
    ports:
    - name: api
      protocol: TCP
      internal: 9022
    - name: api-tls
      protocol: TCP
      internal: 9023
    - name: api-mutual-tls
      protocol: TCP
      internal: 9024
    run:
      healthcheck:
        ccng_monit_http_healthcheck:
          readiness:
            # This job exists just to healthcheck cloud_controller_ng; we're
            # already doing that separately.
            exec:
              command: [/bin/true]
          liveness:
            exec:
              command:
              - /usr/bin/pgrep
              - --full
              - --exact
              - bash /var/vcap/jobs/cloud_controller_ng/bin/ccng_monit_http_healthcheck
        cloud_controller_ng:
          readiness: &cloud_controller_ng_readiness
            exec:
              command:
              - /bin/sh
              - -c
              - >
                printf "GET /healthz HTTP/1.0\r\n\r\n" |
                nc -q 2 -U /var/vcap/data/cloud_controller_ng/cloud_controller.sock |
                grep --silent "200 OK"
          # We don't want a liveness probe here as we do migration here, and we
          # do not want to interrupt that.  We may want to consider using a
          # startupProbe in the future (once that feature stabilizes).
          liveness: ~
        local_worker_1:
          readiness: &cc_local_worker_readiness
            exec:
              command: [/usr/bin/pgrep, --full, cc_api_worker]
        local_worker_2:
          readiness: *cc_local_worker_readiness
        nginx:
          readiness:
            httpGet:
              httpHeaders:
              - name: Host
                value: api
              path: /healthz
              port: 9024
              scheme: HTTPS
          liveness:
            exec:
              command: [/usr/bin/pgrep, --full, "nginx: master process"]
    post_start:
      condition:
        exec:
          command: [curl, --fail, --head, --silent, http://127.0.0.1:9022/healthz]

# Add quarks properties for routing-api.
- type: replace
  path: /instance_groups/name=api/jobs/name=routing-api/properties/quarks?
  value:
    ports:
    - name: routing-api
      protocol: TCP
      internal: 3000
    run:
      healthcheck:
        routing-api:
          readiness:
            # routing-api does not expose a health check endpoint
            tcpSocket:
              port: 3000

# Add quarks properties for cc_uploader.
- type: replace
  path: /instance_groups/name=api/jobs/name=cc_uploader/properties/quarks?
  value:
    ports:
    - name: http
      protocol: TCP
      internal: 9090
    - name: https
      protocol: TCP
      internal: 9091
    run:
      healthcheck:
        cc_uploader:
          readiness:
            # cc-uploader does not have a health check endpoint; just use a TCP
            # socket.
            tcpSocket:
              port: 9091

# Add quarks properties for file_server.
- type: replace
  path: /instance_groups/name=api/jobs/name=file_server/properties/quarks?
  value:
    ports:
    - name: file-server
      protocol: TCP
      internal: &file-server-port 8080
    run:
      healthcheck:
        file_server:
          readiness:
            httpGet:
              path: /v1/static/file_server/bin/file-server
              port: *file-server-port

# Add quarks properties for statsd_injector.
- type: replace
  path: /instance_groups/name=api/jobs/name=statsd_injector/properties/quarks?/run/healthcheck/statsd_injector/readiness/exec/command
  value:
  - /bin/sh
  - -c
  - ss -nlu src localhost:8125 | grep :8125

# Add quarks properties for policy-server.
- type: replace
  path: /instance_groups/name=api/jobs/name=policy-server/properties/quarks?
  value:
    ports:
    - name: policy-server
      protocol: TCP
      internal: 4002
    run:
      healthcheck:
        policy-server:
          readiness:
            httpGet:
              port: 4002
    post_start:
      condition:
        exec:
          # policy-server doesn't support HTTP HEAD requests
          command: [curl, --fail, --silent, http://localhost:4002/]

# Add quarks properties for policy-server-internal.
- type: replace
  path: /instance_groups/name=api/jobs/name=policy-server-internal/properties/quarks?
  value:
    run:
      healthcheck:
        policy-server-internal:
          readiness: &policy_server_internal_readiness
            httpGet:
              port: 31946
    post_start:
      condition:
        exec:
          # policy-server-internal doesn't support HTTP HEAD requests
          command: [curl, --fail, --silent, http://localhost:31946/]

- type: replace
  path: /instance_groups/name=api/jobs/name=route_registrar/properties/quarks?/run/healthcheck/route_registrar
  value:
    readiness: ~
      # The route registrar doesn't expose anything to indicate if the
      # routes are healthy

- type: replace
  path: /instance_groups/name=api/jobs/name=loggr-udp-forwarder/properties/quarks?/run/healthcheck/loggr-udp-forwarder/readiness/exec/command
  value: [sh, -c, ss -nlu sport = 3457 | grep :3457]

{{- $root := . -}}
{{- range $path, $bytes := .Files.Glob "assets/operations/pre_render_scripts/api_*" }}
{{ $root.Files.Get $path }}
{{- end }}
