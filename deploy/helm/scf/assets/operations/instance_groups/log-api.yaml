# Override the addresses for the jobs under the log-api instance group.
- type: replace
  path: /instance_groups/name=log-api/jobs/name=loggregator_trafficcontroller/properties/cc/internal_service_hostname
  value: {{ .Values.deployment_name }}-api
- type: replace
  path: /instance_groups/name=log-api/jobs/name=loggregator_trafficcontroller/properties/uaa/internal_url
  value: https://{{ .Values.deployment_name }}-uaa:8443
- type: replace
  path: /instance_groups/name=log-api/jobs/name=reverse_log_proxy_gateway/properties/cc/capi_internal_addr
  value: https://{{ .Values.deployment_name }}-api:9023
- type: replace
  path: /instance_groups/name=log-api/jobs/name=reverse_log_proxy_gateway/properties/cc/common_name
  value: {{ .Values.deployment_name }}-api
- type: replace
  path: /instance_groups/name=log-api/jobs/name=reverse_log_proxy_gateway/properties/uaa/internal_addr
  value: https://{{ .Values.deployment_name }}-uaa:8443
- type: replace
  path: /instance_groups/name=log-api/jobs/name=route_registrar/properties/nats?/machines
  value:
  - {{ .Values.deployment_name }}-nats
- type: replace
  path: /instance_groups/name=log-api/jobs/name=route_registrar/properties/route_registrar?/routing_api/api_url
  value: http://{{ .Values.deployment_name }}-api:3000
- type: replace
  path: /instance_groups/name=log-api/jobs/name=route_registrar/properties/route_registrar?/routing_api/oauth_url
  value: https://{{ .Values.deployment_name }}-uaa:8443

# Add quarks properties for loggregator_trafficcontroller.
- type: replace
  path: /instance_groups/name=log-api/jobs/name=loggregator_trafficcontroller/properties/quarks?
  value:
    envs:
    - name: TRAFFIC_CONTROLLER_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    ports:
    - name: dropsonde
      protocol: TCP
      internal: 8081
    run:
      healthcheck:
        loggregator_trafficcontroller:
          readiness:
            exec:
              command: [curl, --fail, --silent, --head, http://localhost:14825/health]
          liveness:
            exec:
              command: [pidof, trafficcontroller]

# Add quarks properties for reverse_log_proxy.
- type: replace
  path: /instance_groups/name=log-api/jobs/name=reverse_log_proxy/properties/reverse_log_proxy?/health_addr
  value: "localhost:14826"
- type: replace
  path: /instance_groups/name=log-api/jobs/name=reverse_log_proxy/properties/quarks?
  value:
    ports:
    - name: grpc-egress
      protocol: TCP
      internal: 8082
    run:
      healthcheck:
        reverse_log_proxy:
          readiness:
            exec:
              command: [curl, --fail, --silent, --head, http://localhost:14826/health]
          liveness:
            exec:
              command: [pidof, rlp]

- type: replace
  path: /instance_groups/name=log-api/jobs/name=reverse_log_proxy_gateway/properties/quarks?/bpm/processes/name=reverse_log_proxy_gateway/env/PPROF_PORT?
  value: "33045"
- type: replace
  path: /instance_groups/name=log-api/jobs/name=reverse_log_proxy_gateway/properties/quarks?/run/healthcheck/reverse_log_proxy_gateway
  value:
    readiness:
      exec:
        command: [curl, --fail, --head, --silent, http://localhost:33045/debug/pprof/cmdline]
    liveness:
      exec:
        command: [pidof, rlp-gateway]

- type: replace
  path: /instance_groups/name=log-api/jobs/name=route_registrar/properties/quarks?/run/healthcheck/route_registrar
  value:
    readiness: &route_registrar_readiness
      # The route registrar doesn't expose anything to indicate if the
      # routes are healthy; we can only detect that it's still running.
      exec:
        command: [pidof, route-registrar]
    liveness: *route_registrar_readiness
